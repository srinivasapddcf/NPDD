{
  "version": 3,
  "sources": ["../../../../../../node_modules/ngx-bootstrap/chronos/fesm2022/ngx-bootstrap-chronos.mjs"],
  "sourcesContent": ["function mod(n, x) {\n  return (n % x + x) % x;\n}\nfunction absFloor(num) {\n  return num < 0 ? Math.ceil(num) || 0 : Math.floor(num);\n}\nfunction isString(str) {\n  return typeof str === 'string';\n}\nfunction isDate(value) {\n  return value instanceof Date || Object.prototype.toString.call(value) === '[object Date]';\n}\nfunction isBoolean(value) {\n  return value === true || value === false;\n}\nfunction isDateValid(date) {\n  return date && date.getTime && !isNaN(date.getTime());\n}\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction isFunction(fn) {\n  return fn instanceof Function || Object.prototype.toString.call(fn) === '[object Function]';\n}\nfunction isNumber(value) {\n  return typeof value === 'number' || Object.prototype.toString.call(value) === '[object Number]';\n}\nfunction isArray(input) {\n  return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n}\nfunction hasOwnProp(a /*object*/, b) {\n  return Object.prototype.hasOwnProperty.call(a, b);\n}\nfunction isObject(input /*object*/) {\n  // IE8 will treat undefined and null as object if it wasn't for\n  // input != null\n  return input != null && Object.prototype.toString.call(input) === '[object Object]';\n}\nfunction isObjectEmpty(obj) {\n  if (Object.getOwnPropertyNames) {\n    return Object.getOwnPropertyNames(obj).length === 0;\n  }\n  let k;\n  for (k in obj) {\n    // eslint-disable-next-line no-prototype-builtins\n    if (obj.hasOwnProperty(k)) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction isUndefined(input) {\n  return input === void 0;\n}\nfunction toInt(argumentForCoercion) {\n  const coercedNumber = +argumentForCoercion;\n  let value = 0;\n  if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n    value = absFloor(coercedNumber);\n  }\n  return value;\n}\nconst aliases = {};\nconst _mapUnits = {\n  date: 'day',\n  hour: 'hours',\n  minute: 'minutes',\n  second: 'seconds',\n  millisecond: 'milliseconds'\n};\nfunction addUnitAlias(unit, shorthand) {\n  const lowerCase = unit.toLowerCase();\n  let _unit = unit;\n  if (lowerCase in _mapUnits) {\n    _unit = _mapUnits[lowerCase];\n  }\n  aliases[lowerCase] = aliases[`${lowerCase}s`] = aliases[shorthand] = _unit;\n}\nfunction normalizeUnits(units) {\n  return isString(units) ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n}\nfunction normalizeObjectUnits(inputObject) {\n  const normalizedInput = {};\n  let normalizedProp;\n  let prop;\n  for (prop in inputObject) {\n    if (hasOwnProp(inputObject, prop)) {\n      normalizedProp = normalizeUnits(prop);\n      if (normalizedProp) {\n        normalizedInput[normalizedProp] = inputObject[prop];\n      }\n    }\n  }\n  return normalizedInput;\n}\n\n// place in new Date([array])\nconst YEAR = 0;\nconst MONTH = 1;\nconst DATE = 2;\nconst HOUR = 3;\nconst MINUTE = 4;\nconst SECOND = 5;\nconst MILLISECOND = 6;\nconst WEEK = 7;\nconst WEEKDAY = 8;\nfunction zeroFill(num, targetLength, forceSign) {\n  const absNumber = `${Math.abs(num)}`;\n  const zerosToFill = targetLength - absNumber.length;\n  const sign = num >= 0;\n  const _sign = sign ? forceSign ? '+' : '' : '-';\n  // todo: this is crazy slow\n  const _zeros = Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1);\n  return _sign + _zeros + absNumber;\n}\nconst formatFunctions = {};\nconst formatTokenFunctions = {};\nconst formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n// token:    'M'\n// padded:   ['MM', 2]\n// ordinal:  'Mo'\n// callback: function () { this.month() + 1 }\nfunction addFormatToken(token, padded, ordinal, callback) {\n  if (token) {\n    formatTokenFunctions[token] = callback;\n  }\n  if (padded) {\n    formatTokenFunctions[padded[0]] = function () {\n      return zeroFill(callback.apply(null, arguments), padded[1], padded[2]);\n    };\n  }\n  if (ordinal) {\n    formatTokenFunctions[ordinal] = function (date, opts) {\n      return opts.locale.ordinal(callback.apply(null, arguments), token);\n    };\n  }\n}\nfunction makeFormatFunction(format) {\n  const array = format.match(formattingTokens);\n  const length = array.length;\n  const formatArr = new Array(length);\n  for (let i = 0; i < length; i++) {\n    formatArr[i] = formatTokenFunctions[array[i]] ? formatTokenFunctions[array[i]] : removeFormattingTokens(array[i]);\n  }\n  return function (date, locale, isUTC, offset = 0) {\n    let output = '';\n    for (let j = 0; j < length; j++) {\n      output += isFunction(formatArr[j]) ? formatArr[j].call(null, date, {\n        format,\n        locale,\n        isUTC,\n        offset\n      }) : formatArr[j];\n    }\n    return output;\n  };\n}\nfunction removeFormattingTokens(input) {\n  if (input.match(/\\[[\\s\\S]/)) {\n    return input.replace(/^\\[|\\]$/g, '');\n  }\n  return input.replace(/\\\\/g, '');\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction createUTCDate(y, m, d) {\n  // eslint-disable-next-line prefer-rest-params\n  const date = new Date(Date.UTC.apply(null, arguments));\n  // the Date.UTC function remaps years 0-99 to 1900-1999\n  if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {\n    date.setUTCFullYear(y);\n  }\n  return date;\n}\nfunction createDate(y, m = 0, d = 1, h = 0, M = 0, s = 0, ms = 0) {\n  const date = new Date(y, m, d, h, M, s, ms);\n  // the date constructor remaps years 0-99 to 1900-1999\n  if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {\n    date.setFullYear(y);\n  }\n  return date;\n}\nfunction getHours(date, isUTC = false) {\n  return isUTC ? date.getUTCHours() : date.getHours();\n}\nfunction getMinutes(date, isUTC = false) {\n  return isUTC ? date.getUTCMinutes() : date.getMinutes();\n}\nfunction getSeconds(date, isUTC = false) {\n  return isUTC ? date.getUTCSeconds() : date.getSeconds();\n}\nfunction getMilliseconds(date, isUTC = false) {\n  return isUTC ? date.getUTCMilliseconds() : date.getMilliseconds();\n}\nfunction getTime(date) {\n  return date.getTime();\n}\nfunction getDay(date, isUTC = false) {\n  return isUTC ? date.getUTCDay() : date.getDay();\n}\nfunction getDate(date, isUTC = false) {\n  return isUTC ? date.getUTCDate() : date.getDate();\n}\nfunction getMonth(date, isUTC = false) {\n  return isUTC ? date.getUTCMonth() : date.getMonth();\n}\nfunction getFullYear(date, isUTC = false) {\n  return isUTC ? date.getUTCFullYear() : date.getFullYear();\n}\nfunction getUnixTime(date) {\n  return Math.floor(date.valueOf() / 1000);\n}\nfunction unix(date) {\n  return Math.floor(date.valueOf() / 1000);\n}\nfunction getFirstDayOfMonth(date) {\n  return createDate(date.getFullYear(), date.getMonth(), 1, date.getHours(), date.getMinutes(), date.getSeconds());\n}\nfunction daysInMonth$1(date) {\n  return _daysInMonth(date.getFullYear(), date.getMonth());\n}\nfunction _daysInMonth(year, month) {\n  return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();\n}\nfunction isFirstDayOfWeek(date, firstDayOfWeek) {\n  return date.getDay() === Number(firstDayOfWeek);\n}\nfunction isSameMonth(date1, date2) {\n  if (!date1 || !date2) {\n    return false;\n  }\n  return isSameYear(date1, date2) && getMonth(date1) === getMonth(date2);\n}\nfunction isSameYear(date1, date2) {\n  if (!date1 || !date2) {\n    return false;\n  }\n  return getFullYear(date1) === getFullYear(date2);\n}\nfunction isSameDay$1(date1, date2) {\n  if (!date1 || !date2) {\n    return false;\n  }\n  return isSameYear(date1, date2) && isSameMonth(date1, date2) && getDate(date1) === getDate(date2);\n}\nconst match1 = /\\d/; //       0 - 9\nconst match2 = /\\d\\d/; //      00 - 99\nconst match3 = /\\d{3}/; //     000 - 999\nconst match4 = /\\d{4}/; //    0000 - 9999\nconst match6 = /[+-]?\\d{6}/; // -999999 - 999999\nconst match1to2 = /\\d\\d?/; //       0 - 99\nconst match3to4 = /\\d\\d\\d\\d?/; //     999 - 9999\nconst match5to6 = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\nconst match1to3 = /\\d{1,3}/; //       0 - 999\nconst match1to4 = /\\d{1,4}/; //       0 - 9999\nconst match1to6 = /[+-]?\\d{1,6}/; // -999999 - 999999\nconst matchUnsigned = /\\d+/; //       0 - inf\nconst matchSigned = /[+-]?\\d+/; //    -inf - inf\nconst matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\nconst matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\nconst matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n// any word (or two) characters or numbers including two/three word month in arabic.\n// includes scottish gaelic two word and hyphenated months\nconst matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\nconst regexes = {};\nfunction addRegexToken(token, regex, strictRegex) {\n  if (isFunction(regex)) {\n    regexes[token] = regex;\n    return;\n  }\n  regexes[token] = function (isStrict, locale) {\n    return isStrict && strictRegex ? strictRegex : regex;\n  };\n}\nfunction getParseRegexForToken(token, locale) {\n  const _strict = false;\n  if (!hasOwnProp(regexes, token)) {\n    return new RegExp(unescapeFormat(token));\n  }\n  return regexes[token](_strict, locale);\n}\n// Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\nfunction unescapeFormat(str) {\n  return regexEscape(str.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, (matched, p1, p2, p3, p4) => p1 || p2 || p3 || p4));\n}\nfunction regexEscape(str) {\n  return str.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n}\nconst tokens = {};\nfunction addParseToken(token, callback) {\n  const _token = isString(token) ? [token] : token;\n  let func = callback;\n  if (isNumber(callback)) {\n    func = function (input, array, config) {\n      array[callback] = toInt(input);\n      return config;\n    };\n  }\n  if (isArray(_token) && isFunction(func)) {\n    let i;\n    for (i = 0; i < _token.length; i++) {\n      tokens[_token[i]] = func;\n    }\n  }\n}\nfunction addWeekParseToken(token, callback) {\n  addParseToken(token, function (input, array, config, _token) {\n    config._w = config._w || {};\n    return callback(input, config._w, config, _token);\n  });\n}\nfunction addTimeToArrayFromToken(token, input, config) {\n  if (input != null && hasOwnProp(tokens, token)) {\n    tokens[token](input, config._a, config, token);\n  }\n  return config;\n}\nconst priorities = {};\nfunction addUnitPriority(unit, priority) {\n  priorities[unit] = priority;\n}\n/*\nexport function getPrioritizedUnits(unitsObj) {\n  const units = [];\n  let unit;\n  for (unit in unitsObj) {\n    if (unitsObj.hasOwnProperty(unit)) {\n      units.push({ unit, priority: priorities[unit] });\n    }\n  }\n  units.sort(function (a, b) {\n    return a.priority - b.priority;\n  });\n\n  return units;\n}\n*/\n\nfunction initDayOfMonth() {\n  // FORMATTING\n  addFormatToken('D', ['DD', 2, false], 'Do', function (date, opts) {\n    return getDate(date, opts.isUTC).toString(10);\n  });\n  // ALIASES\n  addUnitAlias('date', 'D');\n  // PRIOROITY\n  addUnitPriority('date', 9);\n  // PARSING\n  addRegexToken('D', match1to2);\n  addRegexToken('DD', match1to2, match2);\n  addRegexToken('Do', function (isStrict, locale) {\n    return locale._dayOfMonthOrdinalParse || locale._ordinalParse;\n  });\n  addParseToken(['D', 'DD'], DATE);\n  addParseToken('Do', function (input, array, config) {\n    array[DATE] = toInt(input.match(match1to2)[0]);\n    return config;\n  });\n}\nfunction defaultParsingFlags() {\n  // We need to deep clone this object.\n  return {\n    empty: false,\n    unusedTokens: [],\n    unusedInput: [],\n    overflow: -2,\n    charsLeftOver: 0,\n    nullInput: false,\n    invalidMonth: null,\n    invalidFormat: false,\n    userInvalidated: false,\n    iso: false,\n    parsedDateParts: [],\n    meridiem: null,\n    rfc2822: false,\n    weekdayMismatch: false\n  };\n}\nfunction getParsingFlags(config) {\n  if (config._pf == null) {\n    config._pf = defaultParsingFlags();\n  }\n  return config._pf;\n}\n\n// FORMATTING\nfunction getYear(date, opts) {\n  if (opts.locale.getFullYear) {\n    return opts.locale.getFullYear(date, opts.isUTC).toString();\n  }\n  return getFullYear(date, opts.isUTC).toString();\n}\nfunction initYear() {\n  addFormatToken('Y', null, null, function (date, opts) {\n    const y = getFullYear(date, opts.isUTC);\n    return y <= 9999 ? y.toString(10) : `+${y}`;\n  });\n  addFormatToken(null, ['YY', 2, false], null, function (date, opts) {\n    return (getFullYear(date, opts.isUTC) % 100).toString(10);\n  });\n  addFormatToken(null, ['YYYY', 4, false], null, getYear);\n  addFormatToken(null, ['YYYYY', 5, false], null, getYear);\n  addFormatToken(null, ['YYYYYY', 6, true], null, getYear);\n  // ALIASES\n  addUnitAlias('year', 'y');\n  // PRIORITIES\n  addUnitPriority('year', 1);\n  // PARSING\n  addRegexToken('Y', matchSigned);\n  addRegexToken('YY', match1to2, match2);\n  addRegexToken('YYYY', match1to4, match4);\n  addRegexToken('YYYYY', match1to6, match6);\n  addRegexToken('YYYYYY', match1to6, match6);\n  addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n  addParseToken('YYYY', function (input, array, config) {\n    array[YEAR] = input.length === 2 ? parseTwoDigitYear(input) : toInt(input);\n    return config;\n  });\n  addParseToken('YY', function (input, array, config) {\n    array[YEAR] = parseTwoDigitYear(input);\n    return config;\n  });\n  addParseToken('Y', function (input, array, config) {\n    array[YEAR] = parseInt(input, 10);\n    return config;\n  });\n}\nfunction parseTwoDigitYear(input) {\n  return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n}\nfunction daysInYear(year) {\n  return isLeapYear(year) ? 366 : 365;\n}\nfunction isLeapYear(year) {\n  return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\n\n// todo: this is duplicate, source in date-getters.ts\nfunction daysInMonth(year, month) {\n  if (isNaN(year) || isNaN(month)) {\n    return NaN;\n  }\n  const modMonth = mod(month, 12);\n  const _year = year + (month - modMonth) / 12;\n  return modMonth === 1 ? isLeapYear(_year) ? 29 : 28 : 31 - modMonth % 7 % 2;\n}\nfunction initMonth() {\n  // FORMATTING\n  addFormatToken('M', ['MM', 2, false], 'Mo', function (date, opts) {\n    return (getMonth(date, opts.isUTC) + 1).toString(10);\n  });\n  addFormatToken('MMM', null, null, function (date, opts) {\n    return opts.locale.monthsShort(date, opts.format, opts.isUTC);\n  });\n  addFormatToken('MMMM', null, null, function (date, opts) {\n    return opts.locale.months(date, opts.format, opts.isUTC);\n  });\n  // ALIASES\n  addUnitAlias('month', 'M');\n  // PRIORITY\n  addUnitPriority('month', 8);\n  // PARSING\n  addRegexToken('M', match1to2);\n  addRegexToken('MM', match1to2, match2);\n  addRegexToken('MMM', function (isStrict, locale) {\n    return locale.monthsShortRegex(isStrict);\n  });\n  addRegexToken('MMMM', function (isStrict, locale) {\n    return locale.monthsRegex(isStrict);\n  });\n  addParseToken(['M', 'MM'], function (input, array, config) {\n    array[MONTH] = toInt(input) - 1;\n    return config;\n  });\n  addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n    const month = config._locale.monthsParse(input, token, config._strict);\n    // if we didn't find a month name, mark the date as invalid.\n    if (month != null) {\n      array[MONTH] = month;\n    } else {\n      getParsingFlags(config).invalidMonth = !!input;\n    }\n    return config;\n  });\n}\nconst defaultTimeUnit = {\n  year: 0,\n  month: 0,\n  day: 0,\n  hour: 0,\n  minute: 0,\n  seconds: 0\n};\nfunction shiftDate(date, unit) {\n  const _unit = Object.assign({}, defaultTimeUnit, unit);\n  const year = date.getFullYear() + (_unit.year || 0);\n  const month = date.getMonth() + (_unit.month || 0);\n  let day = date.getDate() + (_unit.day || 0);\n  if (_unit.month && !_unit.day) {\n    day = Math.min(day, daysInMonth(year, month));\n  }\n  return createDate(year, month, day, date.getHours() + (_unit.hour || 0), date.getMinutes() + (_unit.minute || 0), date.getSeconds() + (_unit.seconds || 0));\n}\nfunction setFullDate(date, unit) {\n  return createDate(getNum(date.getFullYear(), unit.year), getNum(date.getMonth(), unit.month), 1,\n  // day, to avoid issue with wrong months selection at the end of current month (#5371)\n  getNum(date.getHours(), unit.hour), getNum(date.getMinutes(), unit.minute), getNum(date.getSeconds(), unit.seconds), getNum(date.getMilliseconds(), unit.milliseconds));\n}\nfunction getNum(def, num) {\n  return isNumber(num) ? num : def;\n}\nfunction setFullYear(date, value, isUTC) {\n  const _month = getMonth(date, isUTC);\n  const _date = getDate(date, isUTC);\n  const _year = getFullYear(date, isUTC);\n  if (isLeapYear(_year) && _month === 1 && _date === 29) {\n    const _daysInMonth = daysInMonth(value, _month);\n    isUTC ? date.setUTCFullYear(value, _month, _daysInMonth) : date.setFullYear(value, _month, _daysInMonth);\n  }\n  isUTC ? date.setUTCFullYear(value) : date.setFullYear(value);\n  return date;\n}\nfunction setMonth(date, value, isUTC) {\n  const dayOfMonth = Math.min(getDate(date), daysInMonth(getFullYear(date), value));\n  isUTC ? date.setUTCMonth(value, dayOfMonth) : date.setMonth(value, dayOfMonth);\n  return date;\n}\nfunction setDay(date, value, isUTC) {\n  isUTC ? date.setUTCDate(value) : date.setDate(value);\n  return date;\n}\nfunction setHours(date, value, isUTC) {\n  isUTC ? date.setUTCHours(value) : date.setHours(value);\n  return date;\n}\nfunction setMinutes(date, value, isUTC) {\n  isUTC ? date.setUTCMinutes(value) : date.setMinutes(value);\n  return date;\n}\nfunction setSeconds(date, value, isUTC) {\n  isUTC ? date.setUTCSeconds(value) : date.setSeconds(value);\n  return date;\n}\nfunction setMilliseconds(date, value, isUTC) {\n  isUTC ? date.setUTCMilliseconds(value) : date.setMilliseconds(value);\n  return date;\n}\nfunction setDate(date, value, isUTC) {\n  isUTC ? date.setUTCDate(value) : date.setDate(value);\n  return date;\n}\nfunction setTime(date, value) {\n  date.setTime(value);\n  return date;\n}\n\n// fastest way to clone date\n// https://jsperf.com/clone-date-object2\nfunction cloneDate(date) {\n  return new Date(date.getTime());\n}\nfunction startOf(date, unit, isUTC) {\n  const _date = cloneDate(date);\n  // the following switch intentionally omits break keywords\n  // to utilize falling through the cases.\n  switch (unit) {\n    case 'year':\n      setMonth(_date, 0, isUTC);\n    /* falls through */\n    case 'quarter':\n    case 'month':\n      setDate(_date, 1, isUTC);\n    /* falls through */\n    case 'week':\n    case 'isoWeek':\n    case 'day':\n    case 'date':\n      setHours(_date, 0, isUTC);\n    /* falls through */\n    case 'hours':\n      setMinutes(_date, 0, isUTC);\n    /* falls through */\n    case 'minutes':\n      setSeconds(_date, 0, isUTC);\n    /* falls through */\n    case 'seconds':\n      setMilliseconds(_date, 0, isUTC);\n  }\n  // weeks are a special case\n  if (unit === 'week') {\n    setLocaleDayOfWeek(_date, 0, {\n      isUTC\n    });\n  }\n  if (unit === 'isoWeek') {\n    setISODayOfWeek(_date, 1);\n  }\n  // quarters are also special\n  if (unit === 'quarter') {\n    setMonth(_date, Math.floor(getMonth(_date, isUTC) / 3) * 3, isUTC);\n  }\n  return _date;\n}\nfunction endOf(date, unit, isUTC) {\n  let _unit = unit;\n  // 'date' is an alias for 'day', so it should be considered as such.\n  if (_unit === 'date') {\n    _unit = 'day';\n  }\n  const start = startOf(date, _unit, isUTC);\n  const _step = add(start, 1, _unit === 'isoWeek' ? 'week' : _unit, isUTC);\n  const res = subtract(_step, 1, 'milliseconds', isUTC);\n  return res;\n}\nfunction initDayOfYear() {\n  // FORMATTING\n  addFormatToken('DDD', ['DDDD', 3, false], 'DDDo', function (date) {\n    return getDayOfYear(date).toString(10);\n  });\n  // ALIASES\n  addUnitAlias('dayOfYear', 'DDD');\n  // PRIORITY\n  addUnitPriority('dayOfYear', 4);\n  addRegexToken('DDD', match1to3);\n  addRegexToken('DDDD', match3);\n  addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n    config._dayOfYear = toInt(input);\n    return config;\n  });\n}\nfunction getDayOfYear(date, isUTC) {\n  const date1 = +startOf(date, 'day', isUTC);\n  const date2 = +startOf(date, 'year', isUTC);\n  const someDate = date1 - date2;\n  const oneDay = 1000 * 60 * 60 * 24;\n  return Math.round(someDate / oneDay) + 1;\n}\nfunction setDayOfYear(date, input) {\n  const dayOfYear = getDayOfYear(date);\n  return add(date, input - dayOfYear, 'day');\n}\n\n/**\n *\n * @param {number} year\n * @param {number} dow - start-of-first-week\n * @param {number} doy - start-of-year\n * @returns {number}\n */\nfunction firstWeekOffset(year, dow, doy) {\n  // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n  const fwd = dow - doy + 7;\n  // first-week day local weekday -- which local weekday is fwd\n  const fwdlw = (createUTCDate(year, 0, fwd).getUTCDay() - dow + 7) % 7;\n  return -fwdlw + fwd - 1;\n}\n// https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\nfunction dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n  const localWeekday = (7 + weekday - dow) % 7;\n  const weekOffset = firstWeekOffset(year, dow, doy);\n  const dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset;\n  let resYear;\n  let resDayOfYear;\n  if (dayOfYear <= 0) {\n    resYear = year - 1;\n    resDayOfYear = daysInYear(resYear) + dayOfYear;\n  } else if (dayOfYear > daysInYear(year)) {\n    resYear = year + 1;\n    resDayOfYear = dayOfYear - daysInYear(year);\n  } else {\n    resYear = year;\n    resDayOfYear = dayOfYear;\n  }\n  return {\n    year: resYear,\n    dayOfYear: resDayOfYear\n  };\n}\nfunction weekOfYear(date, dow, doy, isUTC) {\n  const weekOffset = firstWeekOffset(getFullYear(date, isUTC), dow, doy);\n  const week = Math.floor((getDayOfYear(date, isUTC) - weekOffset - 1) / 7) + 1;\n  let resWeek;\n  let resYear;\n  if (week < 1) {\n    resYear = getFullYear(date, isUTC) - 1;\n    resWeek = week + weeksInYear(resYear, dow, doy);\n  } else if (week > weeksInYear(getFullYear(date, isUTC), dow, doy)) {\n    resWeek = week - weeksInYear(getFullYear(date, isUTC), dow, doy);\n    resYear = getFullYear(date, isUTC) + 1;\n  } else {\n    resYear = getFullYear(date, isUTC);\n    resWeek = week;\n  }\n  return {\n    week: resWeek,\n    year: resYear\n  };\n}\nfunction weeksInYear(year, dow, doy) {\n  const weekOffset = firstWeekOffset(year, dow, doy);\n  const weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n  return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n}\nconst MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\nconst defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\nconst defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\nconst defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\nconst defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\nconst defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\nconst defaultLongDateFormat = {\n  LTS: 'h:mm:ss A',\n  LT: 'h:mm A',\n  L: 'MM/DD/YYYY',\n  LL: 'MMMM D, YYYY',\n  LLL: 'MMMM D, YYYY h:mm A',\n  LLLL: 'dddd, MMMM D, YYYY h:mm A'\n};\nconst defaultOrdinal = '%d';\nconst defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\nconst defaultMonthsShortRegex = matchWord;\nconst defaultMonthsRegex = matchWord;\nclass Locale {\n  constructor(config) {\n    if (config) {\n      this.set(config);\n    }\n  }\n  set(config) {\n    let confKey;\n    for (confKey in config) {\n      // eslint-disable-next-line no-prototype-builtins\n      if (!config.hasOwnProperty(confKey)) {\n        continue;\n      }\n      const prop = config[confKey];\n      const key = isFunction(prop) ? confKey : `_${confKey}`;\n      this[key] = prop;\n    }\n    this._config = config;\n  }\n  calendar(key, date, now) {\n    const output = this._calendar[key] || this._calendar[\"sameElse\"];\n    return isFunction(output) ? output.call(null, date, now) : output;\n  }\n  longDateFormat(key) {\n    const format = this._longDateFormat[key];\n    const formatUpper = this._longDateFormat[key.toUpperCase()];\n    if (format || !formatUpper) {\n      return format;\n    }\n    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n      return val.slice(1);\n    });\n    return this._longDateFormat[key];\n  }\n  get invalidDate() {\n    return this._invalidDate;\n  }\n  set invalidDate(val) {\n    this._invalidDate = val;\n  }\n  ordinal(num, token) {\n    return this._ordinal.replace('%d', num.toString(10));\n  }\n  preparse(str, format) {\n    return str;\n  }\n  getFullYear(date, isUTC = false) {\n    return getFullYear(date, isUTC);\n  }\n  postformat(str) {\n    return str;\n  }\n  relativeTime(num, withoutSuffix, str, isFuture) {\n    const output = this._relativeTime[str];\n    return isFunction(output) ? output(num, withoutSuffix, str, isFuture) : output.replace(/%d/i, num.toString(10));\n  }\n  pastFuture(diff, output) {\n    const format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n  }\n  months(date, format, isUTC = false) {\n    if (!date) {\n      return isArray(this._months) ? this._months : this._months.standalone;\n    }\n    if (isArray(this._months)) {\n      return this._months[getMonth(date, isUTC)];\n    }\n    const key = (this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone';\n    return this._months[key][getMonth(date, isUTC)];\n  }\n  monthsShort(date, format, isUTC = false) {\n    if (!date) {\n      return isArray(this._monthsShort) ? this._monthsShort : this._monthsShort.standalone;\n    }\n    if (isArray(this._monthsShort)) {\n      return this._monthsShort[getMonth(date, isUTC)];\n    }\n    const key = MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone';\n    return this._monthsShort[key][getMonth(date, isUTC)];\n  }\n  monthsParse(monthName, format, strict) {\n    let date;\n    let regex;\n    if (this._monthsParseExact) {\n      return this.handleMonthStrictParse(monthName, format, strict);\n    }\n    if (!this._monthsParse) {\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n    }\n    // TODO: add sorting\n    // Sorting makes sure if one month (or abbr) is a prefix of another\n    // see sorting in computeMonthsParse\n    let i;\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      date = new Date(Date.UTC(2000, i));\n      if (strict && !this._longMonthsParse[i]) {\n        const _months = this.months(date, '', true).replace('.', '');\n        const _shortMonths = this.monthsShort(date, '', true).replace('.', '');\n        this._longMonthsParse[i] = new RegExp(`^${_months}$`, 'i');\n        this._shortMonthsParse[i] = new RegExp(`^${_shortMonths}$`, 'i');\n      }\n      if (!strict && !this._monthsParse[i]) {\n        regex = `^${this.months(date, '', true)}|^${this.monthsShort(date, '', true)}`;\n        this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      }\n      // testing the regex\n      if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n        return i;\n      }\n      if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n        return i;\n      }\n      if (!strict && this._monthsParse[i].test(monthName)) {\n        return i;\n      }\n    }\n  }\n  monthsRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        this.computeMonthsParse();\n      }\n      if (isStrict) {\n        return this._monthsStrictRegex;\n      }\n      return this._monthsRegex;\n    }\n    if (!hasOwnProp(this, '_monthsRegex')) {\n      this._monthsRegex = defaultMonthsRegex;\n    }\n    return this._monthsStrictRegex && isStrict ? this._monthsStrictRegex : this._monthsRegex;\n  }\n  monthsShortRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        this.computeMonthsParse();\n      }\n      if (isStrict) {\n        return this._monthsShortStrictRegex;\n      }\n      return this._monthsShortRegex;\n    }\n    if (!hasOwnProp(this, '_monthsShortRegex')) {\n      this._monthsShortRegex = defaultMonthsShortRegex;\n    }\n    return this._monthsShortStrictRegex && isStrict ? this._monthsShortStrictRegex : this._monthsShortRegex;\n  }\n  /** Week */\n  week(date, isUTC) {\n    return weekOfYear(date, this._week.dow, this._week.doy, isUTC).week;\n  }\n  firstDayOfWeek() {\n    return this._week.dow;\n  }\n  firstDayOfYear() {\n    return this._week.doy;\n  }\n  weekdays(date, format, isUTC) {\n    if (!date) {\n      return isArray(this._weekdays) ? this._weekdays : this._weekdays.standalone;\n    }\n    if (isArray(this._weekdays)) {\n      return this._weekdays[getDay(date, isUTC)];\n    }\n    const _key = this._weekdays.isFormat.test(format) ? 'format' : 'standalone';\n    return this._weekdays[_key][getDay(date, isUTC)];\n  }\n  weekdaysMin(date, format, isUTC) {\n    return date ? this._weekdaysMin[getDay(date, isUTC)] : this._weekdaysMin;\n  }\n  weekdaysShort(date, format, isUTC) {\n    return date ? this._weekdaysShort[getDay(date, isUTC)] : this._weekdaysShort;\n  }\n  // proto.weekdaysParse  =        localeWeekdaysParse;\n  weekdaysParse(weekdayName, format, strict) {\n    let i;\n    let regex;\n    if (this._weekdaysParseExact) {\n      return this.handleWeekStrictParse(weekdayName, format, strict);\n    }\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._minWeekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._fullWeekdaysParse = [];\n    }\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      // fix: here is the issue\n      const date = setDayOfWeek(new Date(Date.UTC(2000, 1)), i, null, true);\n      if (strict && !this._fullWeekdaysParse[i]) {\n        this._fullWeekdaysParse[i] = new RegExp(`^${this.weekdays(date, '', true).replace('.', '\\.?')}$`, 'i');\n        this._shortWeekdaysParse[i] = new RegExp(`^${this.weekdaysShort(date, '', true).replace('.', '\\.?')}$`, 'i');\n        this._minWeekdaysParse[i] = new RegExp(`^${this.weekdaysMin(date, '', true).replace('.', '\\.?')}$`, 'i');\n      }\n      if (!this._weekdaysParse[i]) {\n        regex = `^${this.weekdays(date, '', true)}|^${this.weekdaysShort(date, '', true)}|^${this.weekdaysMin(date, '', true)}`;\n        this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      }\n      if (!isArray(this._fullWeekdaysParse) || !isArray(this._shortWeekdaysParse) || !isArray(this._minWeekdaysParse) || !isArray(this._weekdaysParse)) {\n        return;\n      }\n      // testing the regex\n      if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n        return i;\n      }\n    }\n  }\n  // proto.weekdaysRegex       =        weekdaysRegex;\n  weekdaysRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        this.computeWeekdaysParse();\n      }\n      if (isStrict) {\n        return this._weekdaysStrictRegex;\n      } else {\n        return this._weekdaysRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        this._weekdaysRegex = matchWord;\n      }\n      return this._weekdaysStrictRegex && isStrict ? this._weekdaysStrictRegex : this._weekdaysRegex;\n    }\n  }\n  // proto.weekdaysShortRegex  =        weekdaysShortRegex;\n  // proto.weekdaysMinRegex    =        weekdaysMinRegex;\n  weekdaysShortRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        this.computeWeekdaysParse();\n      }\n      if (isStrict) {\n        return this._weekdaysShortStrictRegex;\n      } else {\n        return this._weekdaysShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n        this._weekdaysShortRegex = matchWord;\n      }\n      return this._weekdaysShortStrictRegex && isStrict ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n    }\n  }\n  weekdaysMinRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        this.computeWeekdaysParse();\n      }\n      if (isStrict) {\n        return this._weekdaysMinStrictRegex;\n      } else {\n        return this._weekdaysMinRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n        this._weekdaysMinRegex = matchWord;\n      }\n      return this._weekdaysMinStrictRegex && isStrict ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n    }\n  }\n  isPM(input) {\n    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n    // Using charAt should be more compatible.\n    return input.toLowerCase().charAt(0) === 'p';\n  }\n  meridiem(hours, minutes, isLower) {\n    if (hours > 11) {\n      return isLower ? 'pm' : 'PM';\n    }\n    return isLower ? 'am' : 'AM';\n  }\n  formatLongDate(key) {\n    this._longDateFormat = this._longDateFormat ? this._longDateFormat : defaultLongDateFormat;\n    const format = this._longDateFormat[key];\n    const formatUpper = this._longDateFormat[key.toUpperCase()];\n    if (format || !formatUpper) {\n      return format;\n    }\n    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, val => {\n      return val.slice(1);\n    });\n    return this._longDateFormat[key];\n  }\n  handleMonthStrictParse(monthName, format, strict) {\n    const llc = monthName.toLocaleLowerCase();\n    let i;\n    let ii;\n    let mom;\n    if (!this._monthsParse) {\n      // this is not used\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n      for (i = 0; i < 12; ++i) {\n        mom = new Date(2000, i);\n        this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n        this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n      }\n    }\n    if (strict) {\n      if (format === 'MMM') {\n        ii = this._shortMonthsParse.indexOf(llc);\n        return ii !== -1 ? ii : null;\n      }\n      ii = this._longMonthsParse.indexOf(llc);\n      return ii !== -1 ? ii : null;\n    }\n    if (format === 'MMM') {\n      ii = this._shortMonthsParse.indexOf(llc);\n      if (ii !== -1) {\n        return ii;\n      }\n      ii = this._longMonthsParse.indexOf(llc);\n      return ii !== -1 ? ii : null;\n    }\n    ii = this._longMonthsParse.indexOf(llc);\n    if (ii !== -1) {\n      return ii;\n    }\n    ii = this._shortMonthsParse.indexOf(llc);\n    return ii !== -1 ? ii : null;\n  }\n  handleWeekStrictParse(weekdayName, format, strict) {\n    let ii;\n    const llc = weekdayName.toLocaleLowerCase();\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._minWeekdaysParse = [];\n      let i;\n      for (i = 0; i < 7; ++i) {\n        const date = setDayOfWeek(new Date(Date.UTC(2000, 1)), i, null, true);\n        this._minWeekdaysParse[i] = this.weekdaysMin(date).toLocaleLowerCase();\n        this._shortWeekdaysParse[i] = this.weekdaysShort(date).toLocaleLowerCase();\n        this._weekdaysParse[i] = this.weekdays(date, '').toLocaleLowerCase();\n      }\n    }\n    if (!isArray(this._weekdaysParse) || !isArray(this._shortWeekdaysParse) || !isArray(this._minWeekdaysParse)) {\n      return;\n    }\n    if (strict) {\n      if (format === 'dddd') {\n        ii = this._weekdaysParse.indexOf(llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = this._shortWeekdaysParse.indexOf(llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = this._minWeekdaysParse.indexOf(llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'dddd') {\n        ii = this._weekdaysParse.indexOf(llc);\n        if (ii !== -1) {\n          return ii;\n        }\n        ii = this._shortWeekdaysParse.indexOf(llc);\n        if (ii !== -1) {\n          return ii;\n        }\n        ii = this._minWeekdaysParse.indexOf(llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = this._shortWeekdaysParse.indexOf(llc);\n        if (ii !== -1) {\n          return ii;\n        }\n        ii = this._weekdaysParse.indexOf(llc);\n        if (ii !== -1) {\n          return ii;\n        }\n        ii = this._minWeekdaysParse.indexOf(llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = this._minWeekdaysParse.indexOf(llc);\n        if (ii !== -1) {\n          return ii;\n        }\n        ii = this._weekdaysParse.indexOf(llc);\n        if (ii !== -1) {\n          return ii;\n        }\n        ii = this._shortWeekdaysParse.indexOf(llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n  computeMonthsParse() {\n    const shortPieces = [];\n    const longPieces = [];\n    const mixedPieces = [];\n    let date;\n    let i;\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      date = new Date(2000, i);\n      shortPieces.push(this.monthsShort(date, ''));\n      longPieces.push(this.months(date, ''));\n      mixedPieces.push(this.months(date, ''));\n      mixedPieces.push(this.monthsShort(date, ''));\n    }\n    // Sorting makes sure if one month (or abbr) is a prefix of another it\n    // will match the longer piece.\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n    for (i = 0; i < 12; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n    }\n    for (i = 0; i < 24; i++) {\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n    this._monthsRegex = new RegExp(`^(${mixedPieces.join('|')})`, 'i');\n    this._monthsShortRegex = this._monthsRegex;\n    this._monthsStrictRegex = new RegExp(`^(${longPieces.join('|')})`, 'i');\n    this._monthsShortStrictRegex = new RegExp(`^(${shortPieces.join('|')})`, 'i');\n  }\n  computeWeekdaysParse() {\n    const minPieces = [];\n    const shortPieces = [];\n    const longPieces = [];\n    const mixedPieces = [];\n    let i;\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      // let mom = createUTC([2000, 1]).day(i);\n      const date = setDayOfWeek(new Date(Date.UTC(2000, 1)), i, null, true);\n      const minp = this.weekdaysMin(date);\n      const shortp = this.weekdaysShort(date);\n      const longp = this.weekdays(date);\n      minPieces.push(minp);\n      shortPieces.push(shortp);\n      longPieces.push(longp);\n      mixedPieces.push(minp);\n      mixedPieces.push(shortp);\n      mixedPieces.push(longp);\n    }\n    // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n    // will match the longer piece.\n    minPieces.sort(cmpLenRev);\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n    for (i = 0; i < 7; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n    this._weekdaysRegex = new RegExp(`^(${mixedPieces.join('|')})`, 'i');\n    this._weekdaysShortRegex = this._weekdaysRegex;\n    this._weekdaysMinRegex = this._weekdaysRegex;\n    this._weekdaysStrictRegex = new RegExp(`^(${longPieces.join('|')})`, 'i');\n    this._weekdaysShortStrictRegex = new RegExp(`^(${shortPieces.join('|')})`, 'i');\n    this._weekdaysMinStrictRegex = new RegExp(`^(${minPieces.join('|')})`, 'i');\n  }\n}\nfunction cmpLenRev(a, b) {\n  return b.length - a.length;\n}\nconst defaultCalendar = {\n  sameDay: '[Today at] LT',\n  nextDay: '[Tomorrow at] LT',\n  nextWeek: 'dddd [at] LT',\n  lastDay: '[Yesterday at] LT',\n  lastWeek: '[Last] dddd [at] LT',\n  sameElse: 'L'\n};\nconst defaultInvalidDate = 'Invalid date';\nconst defaultLocaleWeek = {\n  dow: 0,\n  // Sunday is the first day of the week.\n  doy: 6 // The week that contains Jan 1st is the first week of the year.\n};\nconst defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\nconst defaultRelativeTime = {\n  future: 'in %s',\n  past: '%s ago',\n  s: 'a few seconds',\n  ss: '%d seconds',\n  m: 'a minute',\n  mm: '%d minutes',\n  h: 'an hour',\n  hh: '%d hours',\n  d: 'a day',\n  dd: '%d days',\n  M: 'a month',\n  MM: '%d months',\n  y: 'a year',\n  yy: '%d years'\n};\nconst baseConfig = {\n  calendar: defaultCalendar,\n  longDateFormat: defaultLongDateFormat,\n  invalidDate: defaultInvalidDate,\n  ordinal: defaultOrdinal,\n  dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n  relativeTime: defaultRelativeTime,\n  months: defaultLocaleMonths,\n  monthsShort: defaultLocaleMonthsShort,\n  week: defaultLocaleWeek,\n  weekdays: defaultLocaleWeekdays,\n  weekdaysMin: defaultLocaleWeekdaysMin,\n  weekdaysShort: defaultLocaleWeekdaysShort,\n  meridiemParse: defaultLocaleMeridiemParse\n};\n\n// compare two arrays, return the number of differences\nfunction compareArrays(array1, array2, dontConvert) {\n  const len = Math.min(array1.length, array2.length);\n  const lengthDiff = Math.abs(array1.length - array2.length);\n  let diffs = 0;\n  let i;\n  for (i = 0; i < len; i++) {\n    if (dontConvert && array1[i] !== array2[i] || !dontConvert && toInt(array1[i]) !== toInt(array2[i])) {\n      diffs++;\n    }\n  }\n  return diffs + lengthDiff;\n}\n\n// FORMATTING\nfunction initWeek() {\n  addFormatToken('w', ['ww', 2, false], 'wo', function (date, opts) {\n    return getWeek(date, opts.locale).toString(10);\n  });\n  addFormatToken('W', ['WW', 2, false], 'Wo', function (date) {\n    return getISOWeek(date).toString(10);\n  });\n  // ALIASES\n  addUnitAlias('week', 'w');\n  addUnitAlias('isoWeek', 'W');\n  // PRIORITIES\n  addUnitPriority('week', 5);\n  addUnitPriority('isoWeek', 5);\n  // PARSING\n  addRegexToken('w', match1to2);\n  addRegexToken('ww', match1to2, match2);\n  addRegexToken('W', match1to2);\n  addRegexToken('WW', match1to2, match2);\n  addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n    week[token.substr(0, 1)] = toInt(input);\n    return config;\n  });\n  // export function getSetWeek (input) {\n  //   var week = this.localeData().week(this);\n  //   return input == null ? week : this.add((input - week) * 7, 'd');\n  // }\n}\nfunction setWeek(date, input, locale = getLocale()) {\n  const week = getWeek(date, locale);\n  return add(date, (input - week) * 7, 'day');\n}\nfunction getWeek(date, locale = getLocale(), isUTC) {\n  return locale.week(date, isUTC);\n}\n// export function getSetISOWeek (input) {\n//   var week = weekOfYear(this, 1, 4).week;\n//   return input == null ? week : this.add((input - week) * 7, 'd');\n// }\nfunction setISOWeek(date, input) {\n  const week = getISOWeek(date);\n  return add(date, (input - week) * 7, 'day');\n}\nfunction getISOWeek(date, isUTC) {\n  return weekOfYear(date, 1, 4, isUTC).week;\n}\n\n// FORMATTING\nfunction initWeekYear() {\n  addFormatToken(null, ['gg', 2, false], null, function (date, opts) {\n    // return this.weekYear() % 100;\n    return (getWeekYear(date, opts.locale) % 100).toString();\n  });\n  addFormatToken(null, ['GG', 2, false], null, function (date) {\n    // return this.isoWeekYear() % 100;\n    return (getISOWeekYear(date) % 100).toString();\n  });\n  addWeekYearFormatToken('gggg', _getWeekYearFormatCb);\n  addWeekYearFormatToken('ggggg', _getWeekYearFormatCb);\n  addWeekYearFormatToken('GGGG', _getISOWeekYearFormatCb);\n  addWeekYearFormatToken('GGGGG', _getISOWeekYearFormatCb);\n  // ALIASES\n  addUnitAlias('weekYear', 'gg');\n  addUnitAlias('isoWeekYear', 'GG');\n  // PRIORITY\n  addUnitPriority('weekYear', 1);\n  addUnitPriority('isoWeekYear', 1);\n  // PARSING\n  addRegexToken('G', matchSigned);\n  addRegexToken('g', matchSigned);\n  addRegexToken('GG', match1to2, match2);\n  addRegexToken('gg', match1to2, match2);\n  addRegexToken('GGGG', match1to4, match4);\n  addRegexToken('gggg', match1to4, match4);\n  addRegexToken('GGGGG', match1to6, match6);\n  addRegexToken('ggggg', match1to6, match6);\n  addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n    week[token.substr(0, 2)] = toInt(input);\n    return config;\n  });\n  addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n    week[token] = parseTwoDigitYear(input);\n    return config;\n  });\n}\nfunction addWeekYearFormatToken(token, getter) {\n  addFormatToken(null, [token, token.length, false], null, getter);\n}\nfunction _getWeekYearFormatCb(date, opts) {\n  return getWeekYear(date, opts.locale).toString();\n}\nfunction _getISOWeekYearFormatCb(date) {\n  return getISOWeekYear(date).toString();\n}\n// MOMENTS\nfunction getSetWeekYear(date, input, locale = getLocale(), isUTC) {\n  return getSetWeekYearHelper(date, input,\n  // this.week(),\n  getWeek(date, locale, isUTC),\n  // this.weekday(),\n  getLocaleDayOfWeek(date, locale, isUTC), locale.firstDayOfWeek(), locale.firstDayOfYear(), isUTC);\n}\nfunction getWeekYear(date, locale = getLocale(), isUTC) {\n  return weekOfYear(date, locale.firstDayOfWeek(), locale.firstDayOfYear(), isUTC).year;\n}\nfunction getSetISOWeekYear(date, input, isUTC) {\n  return getSetWeekYearHelper(date, input, getISOWeek(date, isUTC), getISODayOfWeek(date, isUTC), 1, 4);\n}\nfunction getISOWeekYear(date, isUTC) {\n  return weekOfYear(date, 1, 4, isUTC).year;\n}\nfunction getISOWeeksInYear(date, isUTC) {\n  return weeksInYear(getFullYear(date, isUTC), 1, 4);\n}\nfunction getWeeksInYear(date, isUTC, locale = getLocale()) {\n  return weeksInYear(getFullYear(date, isUTC), locale.firstDayOfWeek(), locale.firstDayOfYear());\n}\nfunction getSetWeekYearHelper(date, input, week, weekday, dow, doy, isUTC) {\n  if (!input) {\n    return getWeekYear(date, void 0, isUTC);\n  }\n  const weeksTarget = weeksInYear(input, dow, doy);\n  const _week = week > weeksTarget ? weeksTarget : week;\n  return setWeekAll(date, input, _week, weekday, dow, doy);\n}\nfunction setWeekAll(date, weekYear, week, weekday, dow, doy) {\n  const dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n  const _date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n  setFullYear(date, getFullYear(_date, true), true);\n  setMonth(date, getMonth(_date, true), true);\n  setDate(date, getDate(_date, true), true);\n  return date;\n}\n\n// todo: add support for timezones\nfunction initTimezone() {\n  // FORMATTING\n  addFormatToken('z', null, null, function (date, opts) {\n    return opts.isUTC ? 'UTC' : '';\n  });\n  addFormatToken('zz', null, null, function (date, opts) {\n    return opts.isUTC ? 'Coordinated Universal Time' : '';\n  });\n}\n// MOMENTS\nfunction getZoneAbbr(isUTC) {\n  return isUTC ? 'UTC' : '';\n}\nfunction getZoneName(isUTC) {\n  return isUTC ? 'Coordinated Universal Time' : '';\n}\nfunction initTimestamp() {\n  // FORMATTING\n  addFormatToken('X', null, null, function (date) {\n    return unix(date).toString(10);\n  });\n  addFormatToken('x', null, null, function (date) {\n    return date.valueOf().toString(10);\n  });\n  // PARSING\n  addRegexToken('x', matchSigned);\n  addRegexToken('X', matchTimestamp);\n  addParseToken('X', function (input, array, config) {\n    config._d = new Date(parseFloat(input) * 1000);\n    return config;\n  });\n  addParseToken('x', function (input, array, config) {\n    config._d = new Date(toInt(input));\n    return config;\n  });\n}\nfunction initSecond() {\n  // FORMATTING\n  addFormatToken('s', ['ss', 2, false], null, function (date, opts) {\n    return getSeconds(date, opts.isUTC).toString(10);\n  });\n  // ALIASES\n  addUnitAlias('second', 's');\n  // PRIORITY\n  addUnitPriority('second', 15);\n  // PARSING\n  addRegexToken('s', match1to2);\n  addRegexToken('ss', match1to2, match2);\n  addParseToken(['s', 'ss'], SECOND);\n}\nfunction initQuarter() {\n  // FORMATTING\n  addFormatToken('Q', null, 'Qo', function (date, opts) {\n    return getQuarter(date, opts.isUTC).toString(10);\n  });\n  // ALIASES\n  addUnitAlias('quarter', 'Q');\n  // PRIORITY\n  addUnitPriority('quarter', 7);\n  // PARSING\n  addRegexToken('Q', match1);\n  addParseToken('Q', function (input, array, config) {\n    array[MONTH] = (toInt(input) - 1) * 3;\n    return config;\n  });\n}\n// MOMENTS\nfunction getQuarter(date, isUTC = false) {\n  return Math.ceil((getMonth(date, isUTC) + 1) / 3);\n}\nfunction setQuarter(date, quarter, isUTC) {\n  return setMonth(date, (quarter - 1) * 3 + getMonth(date, isUTC) % 3, isUTC);\n}\n// export function getSetQuarter(input) {\n//   return input == null\n//     ? Math.ceil((this.month() + 1) / 3)\n//     : this.month((input - 1) * 3 + this.month() % 3);\n// }\n\n// FORMATTING\nfunction addOffsetFormatToken(token, separator) {\n  addFormatToken(token, null, null, function (date, config) {\n    let offset = getUTCOffset(date, {\n      _isUTC: config.isUTC,\n      _offset: config.offset\n    });\n    let sign = '+';\n    if (offset < 0) {\n      offset = -offset;\n      sign = '-';\n    }\n    return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~offset % 60, 2);\n  });\n}\nfunction initOffset() {\n  addOffsetFormatToken('Z', ':');\n  addOffsetFormatToken('ZZ', '');\n  // PARSING\n  addRegexToken('Z', matchShortOffset);\n  addRegexToken('ZZ', matchShortOffset);\n  addParseToken(['Z', 'ZZ'], function (input, array, config) {\n    config._useUTC = true;\n    config._tzm = offsetFromString(matchShortOffset, input);\n    return config;\n  });\n}\n// HELPERS\n// timezone chunker\n// '+10:00' > ['10',  '00']\n// '-1530'  > ['-15', '30']\nconst chunkOffset = /([\\+\\-]|\\d\\d)/gi;\nfunction offsetFromString(matcher, str) {\n  const matches = (str || '').match(matcher);\n  if (matches === null) {\n    return null;\n  }\n  const chunk = matches[matches.length - 1];\n  const parts = chunk.match(chunkOffset) || ['-', '0', '0'];\n  const minutes = parseInt(parts[1], 10) * 60 + toInt(parts[2]);\n  const _min = parts[0] === '+' ? minutes : -minutes;\n  return minutes === 0 ? 0 : _min;\n}\n// Return a moment from input, that is local/utc/zone equivalent to model.\nfunction cloneWithOffset(input, date, config = {}) {\n  if (!config._isUTC) {\n    return input;\n  }\n  const res = cloneDate(date);\n  // todo: input._d - res._d + ((res._offset || 0) - (input._offset || 0))*60000\n  const offsetDiff = (config._offset || 0) * 60000;\n  const diff = input.valueOf() - res.valueOf() + offsetDiff;\n  // Use low-level api, because this fn is low-level api.\n  res.setTime(res.valueOf() + diff);\n  // todo: add timezone handling\n  // hooks.updateOffset(res, false);\n  return res;\n}\nfunction getDateOffset(date) {\n  // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n  // https://github.com/moment/moment/pull/1871\n  return -Math.round(date.getTimezoneOffset() / 15) * 15;\n}\n// HOOKS\n// This function will be called whenever a moment is mutated.\n// It is intended to keep the offset in sync with the timezone.\n// todo: it's from moment timezones\n// hooks.updateOffset = function () {\n// };\n// MOMENTS\n// keepLocalTime = true means only change the timezone, without\n// affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n// 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n// +0200, so we adjust the time as needed, to be valid.\n//\n// Keeping the time actually adds/subtracts (one hour)\n// from the actual represented time. That is why we call updateOffset\n// a second time. In case it wants us to change the offset again\n// _changeInProgress == true case, then we have to adjust, because\n// there is no such time in the given timezone.\nfunction getUTCOffset(date, config = {}) {\n  const _offset = config._offset || 0;\n  return config._isUTC ? _offset : getDateOffset(date);\n}\nfunction setUTCOffset(date, input, keepLocalTime, keepMinutes, config = {}) {\n  const offset = config._offset || 0;\n  let localAdjust;\n  let _input = input;\n  let _date = date;\n  if (isString(_input)) {\n    _input = offsetFromString(matchShortOffset, _input);\n    if (_input === null) {\n      return _date;\n    }\n  } else if (isNumber(_input) && Math.abs(_input) < 16 && !keepMinutes) {\n    _input = _input * 60;\n  }\n  if (!config._isUTC && keepLocalTime) {\n    localAdjust = getDateOffset(_date);\n  }\n  config._offset = _input;\n  config._isUTC = true;\n  if (localAdjust != null) {\n    _date = add(_date, localAdjust, 'minutes');\n  }\n  if (offset !== _input) {\n    if (!keepLocalTime || config._changeInProgress) {\n      _date = add(_date, _input - offset, 'minutes', config._isUTC);\n      // addSubtract(this, createDuration(_input - offset, 'm'), 1, false);\n    } else if (!config._changeInProgress) {\n      config._changeInProgress = true;\n      // todo: add timezone handling\n      // hooks.updateOffset(this, true);\n      config._changeInProgress = null;\n    }\n  }\n  return _date;\n}\n/*\nexport function getSetZone(input, keepLocalTime) {\n  if (input != null) {\n    if (typeof input !== 'string') {\n      input = -input;\n    }\n\n    this.utcOffset(input, keepLocalTime);\n\n    return this;\n  } else {\n    return -this.utcOffset();\n  }\n}\n*/\nfunction setOffsetToUTC(date, keepLocalTime) {\n  return setUTCOffset(date, 0, keepLocalTime);\n}\nfunction isDaylightSavingTime(date) {\n  return getUTCOffset(date) > getUTCOffset(setMonth(cloneDate(date), 0)) || getUTCOffset(date) > getUTCOffset(setMonth(cloneDate(date), 5));\n}\n/*export function setOffsetToLocal(date: Date, isUTC?: boolean, keepLocalTime?: boolean) {\n  if (this._isUTC) {\n    this.utcOffset(0, keepLocalTime);\n    this._isUTC = false;\n\n    if (keepLocalTime) {\n      this.subtract(getDateOffset(this), 'm');\n    }\n  }\n  return this;\n}*/\nfunction setOffsetToParsedOffset(date, input, config = {}) {\n  if (config._tzm != null) {\n    return setUTCOffset(date, config._tzm, false, true, config);\n  }\n  if (isString(input)) {\n    const tZone = offsetFromString(matchOffset, input);\n    if (tZone != null) {\n      return setUTCOffset(date, tZone, false, false, config);\n    }\n    return setUTCOffset(date, 0, true, false, config);\n  }\n  return date;\n}\nfunction hasAlignedHourOffset(date, input) {\n  const _input = input ? getUTCOffset(input, {\n    _isUTC: false\n  }) : 0;\n  return (getUTCOffset(date) - _input) % 60 === 0;\n}\n// DEPRECATED\n/*export function isDaylightSavingTimeShifted() {\n  if (!isUndefined(this._isDSTShifted)) {\n    return this._isDSTShifted;\n  }\n\n  const c = {};\n\n  copyConfig(c, this);\n  c = prepareConfig(c);\n\n  if (c._a) {\n    const other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n    this._isDSTShifted = this.isValid() &&\n      compareArrays(c._a, other.toArray()) > 0;\n  } else {\n    this._isDSTShifted = false;\n  }\n\n  return this._isDSTShifted;\n}*/\n// in Khronos\n/*export function isLocal() {\n  return this.isValid() ? !this._isUTC : false;\n}\n\nexport function isUtcOffset() {\n  return this.isValid() ? this._isUTC : false;\n}\n\nexport function isUtc() {\n  return this.isValid() ? this._isUTC && this._offset === 0 : false;\n}*/\n\nfunction initMinute() {\n  // FORMATTING\n  addFormatToken('m', ['mm', 2, false], null, function (date, opts) {\n    return getMinutes(date, opts.isUTC).toString(10);\n  });\n  // ALIASES\n  addUnitAlias('minute', 'm');\n  // PRIORITY\n  addUnitPriority('minute', 14);\n  // PARSING\n  addRegexToken('m', match1to2);\n  addRegexToken('mm', match1to2, match2);\n  addParseToken(['m', 'mm'], MINUTE);\n}\n\n// FORMATTING\nfunction initMillisecond() {\n  addFormatToken('S', null, null, function (date, opts) {\n    return (~~(getMilliseconds(date, opts.isUTC) / 100)).toString(10);\n  });\n  addFormatToken(null, ['SS', 2, false], null, function (date, opts) {\n    return (~~(getMilliseconds(date, opts.isUTC) / 10)).toString(10);\n  });\n  addFormatToken(null, ['SSS', 3, false], null, function (date, opts) {\n    return getMilliseconds(date, opts.isUTC).toString(10);\n  });\n  addFormatToken(null, ['SSSS', 4, false], null, function (date, opts) {\n    return (getMilliseconds(date, opts.isUTC) * 10).toString(10);\n  });\n  addFormatToken(null, ['SSSSS', 5, false], null, function (date, opts) {\n    return (getMilliseconds(date, opts.isUTC) * 100).toString(10);\n  });\n  addFormatToken(null, ['SSSSSS', 6, false], null, function (date, opts) {\n    return (getMilliseconds(date, opts.isUTC) * 1000).toString(10);\n  });\n  addFormatToken(null, ['SSSSSSS', 7, false], null, function (date, opts) {\n    return (getMilliseconds(date, opts.isUTC) * 10000).toString(10);\n  });\n  addFormatToken(null, ['SSSSSSSS', 8, false], null, function (date, opts) {\n    return (getMilliseconds(date, opts.isUTC) * 100000).toString(10);\n  });\n  addFormatToken(null, ['SSSSSSSSS', 9, false], null, function (date, opts) {\n    return (getMilliseconds(date, opts.isUTC) * 1000000).toString(10);\n  });\n  // ALIASES\n  addUnitAlias('millisecond', 'ms');\n  // PRIORITY\n  addUnitPriority('millisecond', 16);\n  // PARSING\n  addRegexToken('S', match1to3, match1);\n  addRegexToken('SS', match1to3, match2);\n  addRegexToken('SSS', match1to3, match3);\n  let token;\n  for (token = 'SSSS'; token.length <= 9; token += 'S') {\n    addRegexToken(token, matchUnsigned);\n  }\n  function parseMs(input, array, config) {\n    array[MILLISECOND] = toInt(parseFloat(`0.${input}`) * 1000);\n    return config;\n  }\n  for (token = 'S'; token.length <= 9; token += 'S') {\n    addParseToken(token, parseMs);\n  }\n  // MOMENTS\n}\nfunction initHour() {\n  // FORMATTING\n  function hFormat(date, isUTC) {\n    return getHours(date, isUTC) % 12 || 12;\n  }\n  function kFormat(date, isUTC) {\n    return getHours(date, isUTC) || 24;\n  }\n  addFormatToken('H', ['HH', 2, false], null, function (date, opts) {\n    return getHours(date, opts.isUTC).toString(10);\n  });\n  addFormatToken('h', ['hh', 2, false], null, function (date, opts) {\n    return hFormat(date, opts.isUTC).toString(10);\n  });\n  addFormatToken('k', ['kk', 2, false], null, function (date, opts) {\n    return kFormat(date, opts.isUTC).toString(10);\n  });\n  addFormatToken('hmm', null, null, function (date, opts) {\n    const _h = hFormat(date, opts.isUTC);\n    const _mm = zeroFill(getMinutes(date, opts.isUTC), 2);\n    return `${_h}${_mm}`;\n  });\n  addFormatToken('hmmss', null, null, function (date, opts) {\n    const _h = hFormat(date, opts.isUTC);\n    const _mm = zeroFill(getMinutes(date, opts.isUTC), 2);\n    const _ss = zeroFill(getSeconds(date, opts.isUTC), 2);\n    return `${_h}${_mm}${_ss}`;\n  });\n  addFormatToken('Hmm', null, null, function (date, opts) {\n    const _H = getHours(date, opts.isUTC);\n    const _mm = zeroFill(getMinutes(date, opts.isUTC), 2);\n    return `${_H}${_mm}`;\n  });\n  addFormatToken('Hmmss', null, null, function (date, opts) {\n    const _H = getHours(date, opts.isUTC);\n    const _mm = zeroFill(getMinutes(date, opts.isUTC), 2);\n    const _ss = zeroFill(getSeconds(date, opts.isUTC), 2);\n    return `${_H}${_mm}${_ss}`;\n  });\n  function meridiem(token, lowercase) {\n    addFormatToken(token, null, null, function (date, opts) {\n      return opts.locale.meridiem(getHours(date, opts.isUTC), getMinutes(date, opts.isUTC), lowercase);\n    });\n  }\n  meridiem('a', true);\n  meridiem('A', false);\n  // ALIASES\n  addUnitAlias('hour', 'h');\n  // PRIORITY\n  addUnitPriority('hour', 13);\n  // PARSING\n  function matchMeridiem(isStrict, locale) {\n    return locale._meridiemParse;\n  }\n  addRegexToken('a', matchMeridiem);\n  addRegexToken('A', matchMeridiem);\n  addRegexToken('H', match1to2);\n  addRegexToken('h', match1to2);\n  addRegexToken('k', match1to2);\n  addRegexToken('HH', match1to2, match2);\n  addRegexToken('hh', match1to2, match2);\n  addRegexToken('kk', match1to2, match2);\n  addRegexToken('hmm', match3to4);\n  addRegexToken('hmmss', match5to6);\n  addRegexToken('Hmm', match3to4);\n  addRegexToken('Hmmss', match5to6);\n  addParseToken(['H', 'HH'], HOUR);\n  addParseToken(['k', 'kk'], function (input, array, config) {\n    const kInput = toInt(input);\n    array[HOUR] = kInput === 24 ? 0 : kInput;\n    return config;\n  });\n  addParseToken(['a', 'A'], function (input, array, config) {\n    config._isPm = config._locale.isPM(input);\n    config._meridiem = input;\n    return config;\n  });\n  addParseToken(['h', 'hh'], function (input, array, config) {\n    array[HOUR] = toInt(input);\n    getParsingFlags(config).bigHour = true;\n    return config;\n  });\n  addParseToken('hmm', function (input, array, config) {\n    const pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n    getParsingFlags(config).bigHour = true;\n    return config;\n  });\n  addParseToken('hmmss', function (input, array, config) {\n    const pos1 = input.length - 4;\n    const pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n    getParsingFlags(config).bigHour = true;\n    return config;\n  });\n  addParseToken('Hmm', function (input, array, config) {\n    const pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n    return config;\n  });\n  addParseToken('Hmmss', function (input, array, config) {\n    const pos1 = input.length - 4;\n    const pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n    return config;\n  });\n}\n\n// internal storage for locale config files\nconst locales = {};\nconst localeFamilies = {};\nlet globalLocale;\nfunction normalizeLocale(key) {\n  return key ? key.toLowerCase().replace('_', '-') : key;\n}\n// pick the locale from the array\n// try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n// substring from most specific to least,\n// but move to the next array item if it's a more specific variant than the current root\nfunction chooseLocale(names) {\n  let next;\n  let locale;\n  let i = 0;\n  while (i < names.length) {\n    const split = normalizeLocale(names[i]).split('-');\n    let j = split.length;\n    next = normalizeLocale(names[i + 1]);\n    next = next ? next.split('-') : null;\n    while (j > 0) {\n      locale = loadLocale(split.slice(0, j).join('-'));\n      if (locale) {\n        return locale;\n      }\n      if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n        // the next array item is better than a shallower substring of this one\n        break;\n      }\n      j--;\n    }\n    i++;\n  }\n  return null;\n}\nfunction mergeConfigs(parentConfig, childConfig) {\n  const res = Object.assign({}, parentConfig);\n  for (const childProp in childConfig) {\n    if (!hasOwnProp(childConfig, childProp)) {\n      continue;\n    }\n    if (isObject(parentConfig[childProp]) && isObject(childConfig[childProp])) {\n      res[childProp] = {};\n      Object.assign(res[childProp], parentConfig[childProp]);\n      Object.assign(res[childProp], childConfig[childProp]);\n    } else if (childConfig[childProp] != null) {\n      res[childProp] = childConfig[childProp];\n    } else {\n      delete res[childProp];\n    }\n  }\n  for (const parentProp in parentConfig) {\n    if (hasOwnProp(parentConfig, parentProp) && !hasOwnProp(childConfig, parentProp) && isObject(parentConfig[parentProp])) {\n      // make sure changes to properties don't modify parent config\n      res[parentProp] = Object.assign({}, res[parentProp]);\n    }\n  }\n  return res;\n}\nfunction loadLocale(name) {\n  // no way!\n  /* var oldLocale = null;\n   // TODO: Find a better way to register and load all the locales in Node\n   if (!locales[name] && (typeof module !== 'undefined') &&\n     module && module.exports) {\n     try {\n       oldLocale = globalLocale._abbr;\n       var aliasedRequire = require;\n       aliasedRequire('./locale/' + name);\n       getSetGlobalLocale(oldLocale);\n     } catch (e) {}\n   }*/\n  if (!locales[name]) {\n    console.error(`Khronos locale error: please load locale \"${name}\" before using it`);\n    // throw new Error(`Khronos locale error: please load locale \"${name}\" before using it`);\n  }\n  return locales[name];\n}\n// This function will load locale and then set the global locale.  If\n// no arguments are passed in, it will simply return the current global\n// locale key.\nfunction getSetGlobalLocale(key, values) {\n  let data;\n  if (key) {\n    if (isUndefined(values)) {\n      data = getLocale(key);\n    } else if (isString(key)) {\n      data = defineLocale(key, values);\n    }\n    if (data) {\n      globalLocale = data;\n    }\n  }\n  return globalLocale && globalLocale._abbr;\n}\nfunction defineLocale(name, config) {\n  if (config === null) {\n    // useful for testing\n    delete locales[name];\n    globalLocale = getLocale('en');\n    return null;\n  }\n  if (!config) {\n    return;\n  }\n  let parentConfig = baseConfig;\n  config.abbr = name;\n  if (config.parentLocale != null) {\n    if (locales[config.parentLocale] != null) {\n      parentConfig = locales[config.parentLocale]._config;\n    } else {\n      if (!localeFamilies[config.parentLocale]) {\n        localeFamilies[config.parentLocale] = [];\n      }\n      localeFamilies[config.parentLocale].push({\n        name,\n        config\n      });\n      return null;\n    }\n  }\n  locales[name] = new Locale(mergeConfigs(parentConfig, config));\n  if (localeFamilies[name]) {\n    localeFamilies[name].forEach(function (x) {\n      defineLocale(x.name, x.config);\n    });\n  }\n  // backwards compat for now: also set the locale\n  // make sure we set the locale AFTER all child locales have been\n  // created, so we won't end up with the child locale set.\n  getSetGlobalLocale(name);\n  return locales[name];\n}\nfunction updateLocale(name, config) {\n  let _config = config;\n  if (_config != null) {\n    let parentConfig = baseConfig;\n    // MERGE\n    const tmpLocale = loadLocale(name);\n    if (tmpLocale != null) {\n      parentConfig = tmpLocale._config;\n    }\n    _config = mergeConfigs(parentConfig, _config);\n    const locale = new Locale(_config);\n    locale.parentLocale = locales[name];\n    locales[name] = locale;\n    // backwards compat for now: also set the locale\n    getSetGlobalLocale(name);\n  } else {\n    // pass null for config to unupdate, useful for tests\n    if (locales[name] != null) {\n      if (locales[name].parentLocale != null) {\n        locales[name] = locales[name].parentLocale;\n      } else if (locales[name] != null) {\n        delete locales[name];\n      }\n    }\n  }\n  return locales[name];\n}\n// returns locale data\nfunction getLocale(key) {\n  setDefaultLocale();\n  if (!key) {\n    return globalLocale;\n  }\n  // let locale;\n  const _key = isArray(key) ? key : [key];\n  return chooseLocale(_key);\n}\nfunction listLocales() {\n  return Object.keys(locales);\n}\nfunction setDefaultLocale() {\n  if (locales[`en`]) {\n    return undefined;\n  }\n  getSetGlobalLocale('en', {\n    dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n    ordinal(num) {\n      const b = num % 10;\n      const output = toInt(num % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n      return num + output;\n    }\n  });\n  initWeek();\n  initWeekYear();\n  initYear();\n  initTimezone();\n  initTimestamp();\n  initSecond();\n  initQuarter();\n  initOffset();\n  initMonth();\n  initMinute();\n  initMillisecond();\n  initHour();\n  initDayOfYear();\n  initDayOfWeek();\n  initDayOfMonth();\n}\nconst ordering = ['year', 'quarter', 'month', 'week', 'day', 'hours', 'minutes', 'seconds', 'milliseconds'];\nconst orderingHash = ordering.reduce((mem, order) => {\n  mem[order] = true;\n  return mem;\n}, {});\nfunction isDurationValid(duration) {\n  const durationKeys = Object.keys(duration);\n  if (durationKeys.some(key => {\n    return key in orderingHash && duration[key] === null || isNaN(duration[key]);\n  })) {\n    return false;\n  }\n  // for (let key in duration) {\n  //   if (!(indexOf.call(ordering, key) !== -1 && (duration[key] == null || !isNaN(duration[key])))) {\n  //     return false;\n  //   }\n  // }\n  let unitHasDecimal = false;\n  for (let i = 0; i < ordering.length; ++i) {\n    if (duration[ordering[i]]) {\n      // only allow non-integers for smallest unit\n      if (unitHasDecimal) {\n        return false;\n      }\n      if (duration[ordering[i]] !== toInt(duration[ordering[i]])) {\n        unitHasDecimal = true;\n      }\n    }\n  }\n  return true;\n}\n// export function isValid() {\n//   return this._isValid;\n// }\n//\n// export function createInvalid(): Duration {\n//   return createDuration(NaN);\n// }\n\nfunction absCeil(number) {\n  return number < 0 ? Math.floor(number) : Math.ceil(number);\n}\nfunction bubble(dur) {\n  let milliseconds = dur._milliseconds;\n  let days = dur._days;\n  let months = dur._months;\n  const data = dur._data;\n  // if we have a mix of positive and negative values, bubble down first\n  // check: https://github.com/moment/moment/issues/2166\n  if (!(milliseconds >= 0 && days >= 0 && months >= 0 || milliseconds <= 0 && days <= 0 && months <= 0)) {\n    milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n    days = 0;\n    months = 0;\n  }\n  // The following code bubbles up values, see the tests for\n  // examples of what that means.\n  data.milliseconds = milliseconds % 1000;\n  const seconds = absFloor(milliseconds / 1000);\n  data.seconds = seconds % 60;\n  const minutes = absFloor(seconds / 60);\n  data.minutes = minutes % 60;\n  const hours = absFloor(minutes / 60);\n  data.hours = hours % 24;\n  days += absFloor(hours / 24);\n  // convert days to months\n  const monthsFromDays = absFloor(daysToMonths(days));\n  months += monthsFromDays;\n  days -= absCeil(monthsToDays(monthsFromDays));\n  // 12 months -> 1 year\n  const years = absFloor(months / 12);\n  months %= 12;\n  data.day = days;\n  data.month = months;\n  data.year = years;\n  return dur;\n}\nfunction daysToMonths(day) {\n  // 400 years have 146097 days (taking into account leap year rules)\n  // 400 years have 12 months === 4800\n  return day * 4800 / 146097;\n}\nfunction monthsToDays(month) {\n  // the reverse of daysToMonths\n  return month * 146097 / 4800;\n}\nlet round = Math.round;\nconst thresholds = {\n  ss: 44,\n  // a few seconds to seconds\n  s: 45,\n  // seconds to minute\n  m: 45,\n  // minutes to hour\n  h: 22,\n  // hours to day\n  d: 26,\n  // days to month\n  M: 11 // months to year\n};\n// helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\nfunction substituteTimeAgo(str, num, withoutSuffix, isFuture, locale) {\n  return locale.relativeTime(num || 1, !!withoutSuffix, str, isFuture);\n}\nfunction relativeTime(posNegDuration, withoutSuffix, locale) {\n  const duration = createDuration(posNegDuration).abs();\n  const seconds = round(duration.as('s'));\n  const minutes = round(duration.as('m'));\n  const hours = round(duration.as('h'));\n  const days = round(duration.as('d'));\n  const months = round(duration.as('M'));\n  const years = round(duration.as('y'));\n  const a = seconds <= thresholds[\"ss\"] && ['s', seconds] || seconds < thresholds[\"s\"] && ['ss', seconds] || minutes <= 1 && ['m'] || minutes < thresholds[\"m\"] && ['mm', minutes] || hours <= 1 && ['h'] || hours < thresholds[\"h\"] && ['hh', hours] || days <= 1 && ['d'] || days < thresholds[\"d\"] && ['dd', days] || months <= 1 && ['M'] || months < thresholds[\"M\"] && ['MM', months] || years <= 1 && ['y'] || ['yy', years];\n  const b = [a[0], a[1], withoutSuffix, +posNegDuration > 0, locale];\n  // a[2] = withoutSuffix;\n  // a[3] = +posNegDuration > 0;\n  // a[4] = locale;\n  return substituteTimeAgo.apply(null, b);\n}\n// This function allows you to set the rounding function for relative time strings\nfunction getSetRelativeTimeRounding(roundingFunction) {\n  if (roundingFunction === undefined) {\n    return round;\n  }\n  if (typeof roundingFunction === 'function') {\n    round = roundingFunction;\n    return true;\n  }\n  return false;\n}\n// This function allows you to set a threshold for relative time strings\nfunction getSetRelativeTimeThreshold(threshold, limit) {\n  if (thresholds[threshold] === undefined) {\n    return false;\n  }\n  if (limit === undefined) {\n    return thresholds[threshold];\n  }\n  thresholds[threshold] = limit;\n  if (threshold === 's') {\n    thresholds[\"ss\"] = limit - 1;\n  }\n  return true;\n}\n// export function humanize(withSuffix) {\n//   if (!this.isValid()) {\n//     return this.localeData().invalidDate();\n//   }\n//\n//   const locale = this.localeData();\n//   let output = relativeTime(this, !withSuffix, locale);\n//\n//   if (withSuffix) {\n//     output = locale.pastFuture(+this, output);\n//   }\n//\n//   return locale.postformat(output);\n// }\n\nclass Duration {\n  constructor(duration, config = {}) {\n    this._data = {};\n    this._locale = getLocale();\n    this._locale = config && config._locale || getLocale();\n    // const normalizedInput = normalizeObjectUnits(duration);\n    const normalizedInput = duration;\n    const years = normalizedInput.year || 0;\n    const quarters = normalizedInput.quarter || 0;\n    const months = normalizedInput.month || 0;\n    const weeks = normalizedInput.week || 0;\n    const days = normalizedInput.day || 0;\n    const hours = normalizedInput.hours || 0;\n    const minutes = normalizedInput.minutes || 0;\n    const seconds = normalizedInput.seconds || 0;\n    const milliseconds = normalizedInput.milliseconds || 0;\n    this._isValid = isDurationValid(normalizedInput);\n    // representation for dateAddRemove\n    this._milliseconds = +milliseconds + seconds * 1000 + minutes * 60 * 1000 +\n    // 1000 * 60\n    hours * 1000 * 60 * 60; // using 1000 * 60 * 60\n    // instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n    // Because of dateAddRemove treats 24 hours as different from a\n    // day when working around DST, we need to store them separately\n    this._days = +days + weeks * 7;\n    // It is impossible to translate months into days without knowing\n    // which months you are are talking about, so we have to store\n    // it separately.\n    this._months = +months + quarters * 3 + years * 12;\n    // this._data = {};\n    // this._locale = getLocale();\n    // this._bubble();\n    return bubble(this);\n  }\n  isValid() {\n    return this._isValid;\n  }\n  humanize(withSuffix) {\n    // throw new Error(`TODO: implement`);\n    if (!this.isValid()) {\n      return this.localeData().invalidDate;\n    }\n    const locale = this.localeData();\n    let output = relativeTime(this, !withSuffix, locale);\n    if (withSuffix) {\n      output = locale.pastFuture(+this, output);\n    }\n    return locale.postformat(output);\n  }\n  localeData() {\n    return this._locale;\n  }\n  locale(localeKey) {\n    if (!localeKey) {\n      return this._locale._abbr;\n    }\n    this._locale = getLocale(localeKey) || this._locale;\n    return this;\n  }\n  abs() {\n    const mathAbs = Math.abs;\n    const data = this._data;\n    this._milliseconds = mathAbs(this._milliseconds);\n    this._days = mathAbs(this._days);\n    this._months = mathAbs(this._months);\n    data.milliseconds = mathAbs(data.milliseconds);\n    data.seconds = mathAbs(data.seconds);\n    data.minutes = mathAbs(data.minutes);\n    data.hours = mathAbs(data.hours);\n    data.month = mathAbs(data.month);\n    data.year = mathAbs(data.year);\n    return this;\n  }\n  as(_units) {\n    if (!this.isValid()) {\n      return NaN;\n    }\n    let days;\n    let months;\n    const milliseconds = this._milliseconds;\n    const units = normalizeUnits(_units);\n    if (units === 'month' || units === 'year') {\n      days = this._days + milliseconds / 864e5;\n      months = this._months + daysToMonths(days);\n      return units === 'month' ? months : months / 12;\n    }\n    // handle milliseconds separately because of floating point math errors (issue #1867)\n    days = this._days + Math.round(monthsToDays(this._months));\n    switch (units) {\n      case 'week':\n        return days / 7 + milliseconds / 6048e5;\n      case 'day':\n        return days + milliseconds / 864e5;\n      case 'hours':\n        return days * 24 + milliseconds / 36e5;\n      case 'minutes':\n        return days * 1440 + milliseconds / 6e4;\n      case 'seconds':\n        return days * 86400 + milliseconds / 1000;\n      // Math.floor prevents floating point math errors here\n      case 'milliseconds':\n        return Math.floor(days * 864e5) + milliseconds;\n      default:\n        throw new Error(`Unknown unit ${units}`);\n    }\n  }\n  valueOf() {\n    if (!this.isValid()) {\n      return NaN;\n    }\n    return this._milliseconds + this._days * 864e5 + this._months % 12 * 2592e6 + toInt(this._months / 12) * 31536e6;\n  }\n}\nfunction isDuration(obj) {\n  return obj instanceof Duration;\n}\nfunction isValid(config) {\n  if (config._isValid == null) {\n    const flags = getParsingFlags(config);\n    const parsedParts = Array.prototype.some.call(flags.parsedDateParts, function (i) {\n      return i != null;\n    });\n    let isNowValid = !isNaN(config._d && config._d.getTime()) && flags.overflow < 0 && !flags.empty && !flags.invalidMonth && !flags.invalidWeekday && !flags.weekdayMismatch && !flags.nullInput && !flags.invalidFormat && !flags.userInvalidated && (!flags.meridiem || flags.meridiem && parsedParts);\n    if (config._strict) {\n      isNowValid = isNowValid && flags.charsLeftOver === 0 && flags.unusedTokens.length === 0 && flags.bigHour === undefined;\n    }\n    if (Object.isFrozen == null || !Object.isFrozen(config)) {\n      config._isValid = isNowValid;\n    } else {\n      return isNowValid;\n    }\n  }\n  return config._isValid;\n}\nfunction createInvalid(config, flags) {\n  config._d = new Date(NaN);\n  Object.assign(getParsingFlags(config), flags || {\n    userInvalidated: true\n  });\n  return config;\n}\nfunction markInvalid(config) {\n  config._isValid = false;\n  return config;\n}\n\n// iso 8601 regex\n// 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\nconst extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\nconst basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\nconst tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\nconst isoDates = [['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/, true], ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/, true], ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/, true], ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false], ['YYYY-DDD', /\\d{4}-\\d{3}/, true], ['YYYY-MM', /\\d{4}-\\d\\d/, false], ['YYYYYYMMDD', /[+-]\\d{10}/, true], ['YYYYMMDD', /\\d{8}/, true],\n// YYYYMM is NOT allowed by the standard\n['GGGG[W]WWE', /\\d{4}W\\d{3}/, true], ['GGGG[W]WW', /\\d{4}W\\d{2}/, false], ['YYYYDDD', /\\d{7}/, true]];\n// iso time formats and regexes\nconst isoTimes = [['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/], ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/], ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/], ['HH:mm', /\\d\\d:\\d\\d/], ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/], ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/], ['HHmmss', /\\d\\d\\d\\d\\d\\d/], ['HHmm', /\\d\\d\\d\\d/], ['HH', /\\d\\d/]];\nconst aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i;\nconst obsOffsets = {\n  UT: 0,\n  GMT: 0,\n  EDT: -4 * 60,\n  EST: -5 * 60,\n  CDT: -5 * 60,\n  CST: -6 * 60,\n  MDT: -6 * 60,\n  MST: -7 * 60,\n  PDT: -7 * 60,\n  PST: -8 * 60\n};\n// RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\nconst rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n// date from iso format\nfunction configFromISO(config) {\n  if (!isString(config._i)) {\n    return config;\n  }\n  const input = config._i;\n  const match = extendedIsoRegex.exec(input) || basicIsoRegex.exec(input);\n  let allowTime;\n  let dateFormat;\n  let timeFormat;\n  let tzFormat;\n  if (!match) {\n    config._isValid = false;\n    return config;\n  }\n  // getParsingFlags(config).iso = true;\n  let i;\n  let l;\n  for (i = 0, l = isoDates.length; i < l; i++) {\n    if (isoDates[i][1].exec(match[1])) {\n      dateFormat = isoDates[i][0];\n      allowTime = isoDates[i][2] !== false;\n      break;\n    }\n  }\n  if (dateFormat == null) {\n    config._isValid = false;\n    return config;\n  }\n  if (match[3]) {\n    for (i = 0, l = isoTimes.length; i < l; i++) {\n      if (isoTimes[i][1].exec(match[3])) {\n        // match[2] should be 'T' or space\n        timeFormat = (match[2] || ' ') + isoTimes[i][0];\n        break;\n      }\n    }\n    if (timeFormat == null) {\n      config._isValid = false;\n      return config;\n    }\n  }\n  if (!allowTime && timeFormat != null) {\n    config._isValid = false;\n    return config;\n  }\n  if (match[4]) {\n    if (tzRegex.exec(match[4])) {\n      tzFormat = 'Z';\n    } else {\n      config._isValid = false;\n      return config;\n    }\n  }\n  config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n  return configFromStringAndFormat(config);\n}\nfunction extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n  const result = [untruncateYear(yearStr), defaultLocaleMonthsShort.indexOf(monthStr), parseInt(dayStr, 10), parseInt(hourStr, 10), parseInt(minuteStr, 10)];\n  if (secondStr) {\n    result.push(parseInt(secondStr, 10));\n  }\n  return result;\n}\nfunction untruncateYear(yearStr) {\n  const year = parseInt(yearStr, 10);\n  return year <= 49 ? year + 2000 : year;\n}\nfunction preprocessRFC2822(str) {\n  // Remove comments and folding whitespace and replace multiple-spaces with a single space\n  return str.replace(/\\([^)]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').trim();\n}\nfunction checkWeekday(weekdayStr, parsedInput, config) {\n  if (weekdayStr) {\n    // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n    const weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr);\n    const weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n    if (weekdayProvided !== weekdayActual) {\n      getParsingFlags(config).weekdayMismatch = true;\n      config._isValid = false;\n      return false;\n    }\n  }\n  return true;\n}\nfunction calculateOffset(obsOffset, militaryOffset, numOffset) {\n  if (obsOffset) {\n    return obsOffsets[obsOffset];\n  } else if (militaryOffset) {\n    // the only allowed military tz is Z\n    return 0;\n  } else {\n    const hm = parseInt(numOffset, 10);\n    const m = hm % 100;\n    const h = (hm - m) / 100;\n    return h * 60 + m;\n  }\n}\n// date and time from ref 2822 format\nfunction configFromRFC2822(config) {\n  if (!isString(config._i)) {\n    return config;\n  }\n  const match = rfc2822.exec(preprocessRFC2822(config._i));\n  if (!match) {\n    return markInvalid(config);\n  }\n  const parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n  if (!checkWeekday(match[1], parsedArray, config)) {\n    return config;\n  }\n  config._a = parsedArray;\n  config._tzm = calculateOffset(match[8], match[9], match[10]);\n  config._d = createUTCDate.apply(null, config._a);\n  config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n  getParsingFlags(config).rfc2822 = true;\n  return config;\n}\n// date from iso format or fallback\nfunction configFromString(config) {\n  if (!isString(config._i)) {\n    return config;\n  }\n  const matched = aspNetJsonRegex.exec(config._i);\n  if (matched !== null) {\n    config._d = new Date(+matched[1]);\n    return config;\n  }\n  // todo: update logic processing\n  // isISO -> configFromISO\n  // isRFC -> configFromRFC\n  configFromISO(config);\n  if (config._isValid === false) {\n    delete config._isValid;\n  } else {\n    return config;\n  }\n  configFromRFC2822(config);\n  if (config._isValid === false) {\n    delete config._isValid;\n  } else {\n    return config;\n  }\n  // Final attempt, use Input Fallback\n  // hooks.createFromInputFallback(config);\n  return createInvalid(config);\n}\n// hooks.createFromInputFallback = deprecate(\n//     'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\n//     'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\n//     'discouraged and will be removed in an upcoming major release. Please refer to ' +\n//     'http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n//     function (config) {\n//         config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n//     }\n// );\n\n// moment.js\n// version : 2.18.1\n// authors : Tim Wood, Iskren Chernev, Moment.js contributors\n// license : MIT\n// momentjs.com\nfunction formatDate(date, format, locale, isUTC, offset = 0) {\n  const _locale = getLocale(locale || 'en');\n  if (!_locale) {\n    throw new Error(`Locale \"${locale}\" is not defined, please add it with \"defineLocale(...)\"`);\n  }\n  const _format = format || (isUTC ? 'YYYY-MM-DDTHH:mm:ss[Z]' : 'YYYY-MM-DDTHH:mm:ssZ');\n  const output = formatMoment(date, _format, _locale, isUTC, offset);\n  if (!output) {\n    return output;\n  }\n  return _locale.postformat(output);\n}\n// format date using native date object\nfunction formatMoment(date, _format, locale, isUTC, offset = 0) {\n  if (!isDateValid(date)) {\n    return locale.invalidDate;\n  }\n  const format = expandFormat(_format, locale);\n  formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n  return formatFunctions[format](date, locale, isUTC, offset);\n}\nfunction expandFormat(_format, locale) {\n  let format = _format;\n  let i = 5;\n  const localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n  const replaceLongDateFormatTokens = input => {\n    return locale.formatLongDate(input) || input;\n  };\n  localFormattingTokens.lastIndex = 0;\n  while (i >= 0 && localFormattingTokens.test(format)) {\n    format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n    localFormattingTokens.lastIndex = 0;\n    i -= 1;\n  }\n  return format;\n}\n\n// Pick the first defined of two or three arguments.\nfunction defaults(a, b, c) {\n  if (a != null) {\n    return a;\n  }\n  if (b != null) {\n    return b;\n  }\n  return c;\n}\nfunction currentDateArray(config) {\n  const nowValue = new Date();\n  if (config._useUTC) {\n    return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n  }\n  return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n}\n// convert an array to a date.\n// the array should mirror the parameters below\n// note: all values past the year are optional and will default to the lowest possible value.\n// [year, month, day , hour, minute, second, millisecond]\nfunction configFromArray(config) {\n  const input = [];\n  let i;\n  let date;\n  let yearToUse;\n  if (config._d) {\n    return config;\n  }\n  const currentDate = currentDateArray(config);\n  // compute day of the year from weeks and weekdays\n  if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n    dayOfYearFromWeekInfo(config);\n  }\n  // if the day of the year is set, figure out what it is\n  if (config._dayOfYear != null) {\n    yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n    if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n      getParsingFlags(config)._overflowDayOfYear = true;\n    }\n    date = new Date(Date.UTC(yearToUse, 0, config._dayOfYear));\n    config._a[MONTH] = date.getUTCMonth();\n    config._a[DATE] = date.getUTCDate();\n  }\n  // Default to current date.\n  // * if no year, month, day of month are given, default to today\n  // * if day of month is given, default month and year\n  // * if month is given, default only year\n  // * if year is given, don't default anything\n  for (i = 0; i < 3 && config._a[i] == null; ++i) {\n    config._a[i] = input[i] = currentDate[i];\n  }\n  // Zero out whatever was not defaulted, including time\n  for (; i < 7; i++) {\n    config._a[i] = input[i] = config._a[i] == null ? i === 2 ? 1 : 0 : config._a[i];\n  }\n  // Check for 24:00:00.000\n  if (config._a[HOUR] === 24 && config._a[MINUTE] === 0 && config._a[SECOND] === 0 && config._a[MILLISECOND] === 0) {\n    config._nextDay = true;\n    config._a[HOUR] = 0;\n  }\n  // eslint-disable-next-line prefer-spread\n  config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n  const expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay();\n  // Apply timezone offset from input. The actual utcOffset can be changed\n  // with parseZone.\n  if (config._tzm != null) {\n    config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n  }\n  if (config._nextDay) {\n    config._a[HOUR] = 24;\n  }\n  // check for mismatching day of week\n  if (config._w && typeof config._w[\"d\"] !== 'undefined' && config._w[\"d\"] !== expectedWeekday) {\n    getParsingFlags(config).weekdayMismatch = true;\n  }\n  return config;\n}\nfunction dayOfYearFromWeekInfo(config) {\n  let weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n  const w = config._w;\n  if (w[\"GG\"] != null || w[\"W\"] != null || w[\"E\"] != null) {\n    dow = 1;\n    doy = 4;\n    // TODO: We need to take the current isoWeekYear, but that depends on\n    // how we interpret now (local, utc, fixed offset). So create\n    // a now version of current config (take local/utc/offset flags, and\n    // create now).\n    weekYear = defaults(w[\"GG\"], config._a[YEAR], weekOfYear(new Date(), 1, 4).year);\n    week = defaults(w[\"W\"], 1);\n    weekday = defaults(w[\"E\"], 1);\n    if (weekday < 1 || weekday > 7) {\n      weekdayOverflow = true;\n    }\n  } else {\n    dow = config._locale._week.dow;\n    doy = config._locale._week.doy;\n    const curWeek = weekOfYear(new Date(), dow, doy);\n    weekYear = defaults(w[\"gg\"], config._a[YEAR], curWeek.year);\n    // Default to current week.\n    week = defaults(w[\"w\"], curWeek.week);\n    if (w[\"d\"] != null) {\n      // weekday -- low day numbers are considered next week\n      weekday = w[\"d\"];\n      if (weekday < 0 || weekday > 6) {\n        weekdayOverflow = true;\n      }\n    } else if (w[\"e\"] != null) {\n      // local weekday -- counting starts from beginning of week\n      weekday = w[\"e\"] + dow;\n      if (w[\"e\"] < 0 || w[\"e\"] > 6) {\n        weekdayOverflow = true;\n      }\n    } else {\n      // default to beginning of week\n      weekday = dow;\n    }\n  }\n  if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n    getParsingFlags(config)._overflowWeeks = true;\n  } else if (weekdayOverflow != null) {\n    getParsingFlags(config)._overflowWeekday = true;\n  } else {\n    temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n    config._a[YEAR] = temp.year;\n    config._dayOfYear = temp.dayOfYear;\n  }\n  return config;\n}\nfunction checkOverflow(config) {\n  let overflow;\n  const a = config._a;\n  if (a && getParsingFlags(config).overflow === -2) {\n    // todo: fix this sh*t\n    overflow = a[MONTH] < 0 || a[MONTH] > 11 ? MONTH : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH]) ? DATE : a[HOUR] < 0 || a[HOUR] > 24 || a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0) ? HOUR : a[MINUTE] < 0 || a[MINUTE] > 59 ? MINUTE : a[SECOND] < 0 || a[SECOND] > 59 ? SECOND : a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND : -1;\n    if (getParsingFlags(config)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n      overflow = DATE;\n    }\n    if (getParsingFlags(config)._overflowWeeks && overflow === -1) {\n      overflow = WEEK;\n    }\n    if (getParsingFlags(config)._overflowWeekday && overflow === -1) {\n      overflow = WEEKDAY;\n    }\n    getParsingFlags(config).overflow = overflow;\n  }\n  return config;\n}\n\n// constant that refers to the ISO standard\n// hooks.ISO_8601 = function () {};\nconst ISO_8601 = 'ISO_8601';\n// constant that refers to the RFC 2822 form\n// hooks.RFC_2822 = function () {};\nconst RFC_2822 = 'RFC_2822';\n// date from string and format string\nfunction configFromStringAndFormat(config) {\n  // TODO: Move this to another part of the creation flow to prevent circular deps\n  if (config._f === ISO_8601) {\n    return configFromISO(config);\n  }\n  if (config._f === RFC_2822) {\n    return configFromRFC2822(config);\n  }\n  config._a = [];\n  getParsingFlags(config).empty = true;\n  if (isArray(config._f) || !config._i && config._i !== 0) {\n    return config;\n  }\n  // This array is used to make a Date, either with `new Date` or `Date.UTC`\n  let input = config._i.toString();\n  let totalParsedInputLength = 0;\n  const inputLength = input.length;\n  const tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n  let i;\n  let token;\n  let parsedInput;\n  let skipped;\n  for (i = 0; i < tokens.length; i++) {\n    token = tokens[i];\n    parsedInput = (input.match(getParseRegexForToken(token, config._locale)) || [])[0];\n    if (parsedInput) {\n      skipped = input.substr(0, input.indexOf(parsedInput));\n      if (skipped.length > 0) {\n        getParsingFlags(config).unusedInput.push(skipped);\n      }\n      input = input.slice(input.indexOf(parsedInput) + parsedInput.length);\n      totalParsedInputLength += parsedInput.length;\n    }\n    // don't parse if it's not a known token\n    if (formatTokenFunctions[token]) {\n      if (parsedInput) {\n        getParsingFlags(config).empty = false;\n      } else {\n        getParsingFlags(config).unusedTokens.push(token);\n      }\n      addTimeToArrayFromToken(token, parsedInput, config);\n    } else if (config._strict && !parsedInput) {\n      getParsingFlags(config).unusedTokens.push(token);\n    }\n  }\n  // add remaining unparsed input length to the string\n  getParsingFlags(config).charsLeftOver = inputLength - totalParsedInputLength;\n  if (input.length > 0) {\n    getParsingFlags(config).unusedInput.push(input);\n  }\n  // clear _12h flag if hour is <= 12\n  if (config._a[HOUR] <= 12 && getParsingFlags(config).bigHour === true && config._a[HOUR] > 0) {\n    getParsingFlags(config).bigHour = void 0;\n  }\n  getParsingFlags(config).parsedDateParts = config._a.slice(0);\n  getParsingFlags(config).meridiem = config._meridiem;\n  // handle meridiem\n  config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n  configFromArray(config);\n  return checkOverflow(config);\n}\nfunction meridiemFixWrap(locale, _hour, meridiem) {\n  let hour = _hour;\n  if (meridiem == null) {\n    // nothing to do\n    return hour;\n  }\n  if (locale.meridiemHour != null) {\n    return locale.meridiemHour(hour, meridiem);\n  }\n  if (locale.isPM == null) {\n    // this is not supposed to happen\n    return hour;\n  }\n  // Fallback\n  const isPm = locale.isPM(meridiem);\n  if (isPm && hour < 12) {\n    hour += 12;\n  }\n  if (!isPm && hour === 12) {\n    hour = 0;\n  }\n  return hour;\n}\n\n// date from string and array of format strings\nfunction configFromStringAndArray(config) {\n  let tempConfig;\n  let bestMoment;\n  let scoreToBeat;\n  let currentScore;\n  if (!config._f || config._f.length === 0) {\n    getParsingFlags(config).invalidFormat = true;\n    return createInvalid(config);\n  }\n  let i;\n  for (i = 0; i < config._f.length; i++) {\n    currentScore = 0;\n    tempConfig = Object.assign({}, config);\n    if (config._useUTC != null) {\n      tempConfig._useUTC = config._useUTC;\n    }\n    tempConfig._f = config._f[i];\n    configFromStringAndFormat(tempConfig);\n    if (!isValid(tempConfig)) {\n      continue;\n    }\n    // if there is any input that was not parsed add a penalty for that format\n    currentScore += getParsingFlags(tempConfig).charsLeftOver;\n    // or tokens\n    currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n    getParsingFlags(tempConfig).score = currentScore;\n    if (scoreToBeat == null || currentScore < scoreToBeat) {\n      scoreToBeat = currentScore;\n      bestMoment = tempConfig;\n    }\n  }\n  return Object.assign(config, bestMoment || tempConfig);\n}\nfunction configFromObject(config) {\n  if (config._d) {\n    return config;\n  }\n  const input = config._i;\n  if (isObject(input)) {\n    const i = normalizeObjectUnits(input);\n    config._a = [i.year, i.month, i.day, i.hours, i.minutes, i.seconds, i.milliseconds]\n    // todo: obsolete -> remove it\n    .map(obj => isString(obj) ? parseInt(obj, 10) : obj);\n  }\n  return configFromArray(config);\n}\nfunction createFromConfig(config) {\n  const res = checkOverflow(prepareConfig(config));\n  // todo: remove, in moment.js it's never called cuz of moment constructor\n  res._d = new Date(res._d != null ? res._d.getTime() : NaN);\n  if (!isValid(Object.assign({}, res, {\n    _isValid: null\n  }))) {\n    res._d = new Date(NaN);\n  }\n  // todo: update offset\n  /*if (res._nextDay) {\n    // Adding is smart enough around DST\n    res._d = add(res._d, 1, 'day');\n    res._nextDay = undefined;\n  }*/\n  return res;\n}\nfunction prepareConfig(config) {\n  let input = config._i;\n  const format = config._f;\n  config._locale = config._locale || getLocale(config._l);\n  if (input === null || format === undefined && input === '') {\n    return createInvalid(config, {\n      nullInput: true\n    });\n  }\n  if (isString(input)) {\n    config._i = input = config._locale.preparse(input, format);\n  }\n  if (isDate(input)) {\n    config._d = cloneDate(input);\n    return config;\n  }\n  // todo: add check for recursion\n  if (isArray(format)) {\n    configFromStringAndArray(config);\n  } else if (format) {\n    configFromStringAndFormat(config);\n  } else {\n    configFromInput(config);\n  }\n  if (!isValid(config)) {\n    config._d = null;\n  }\n  return config;\n}\nfunction configFromInput(config) {\n  const input = config._i;\n  if (isUndefined(input)) {\n    config._d = new Date();\n  } else if (isDate(input)) {\n    config._d = cloneDate(input);\n  } else if (isString(input)) {\n    configFromString(config);\n  } else if (isArray(input) && input.length) {\n    const _arr = input.slice(0);\n    config._a = _arr.map(obj => isString(obj) ? parseInt(obj, 10) : obj);\n    configFromArray(config);\n  } else if (isObject(input)) {\n    configFromObject(config);\n  } else if (isNumber(input)) {\n    // from milliseconds\n    config._d = new Date(input);\n  } else {\n    //   hooks.createFromInputFallback(config);\n    return createInvalid(config);\n  }\n  return config;\n}\nfunction createLocalOrUTC(input, format, localeKey, strict, isUTC) {\n  const config = {};\n  let _input = input;\n  // params switch -> skip; testing it well\n  // if (localeKey === true || localeKey === false) {\n  //     strict = localeKey;\n  //     localeKey = undefined;\n  // }\n  // todo: fail fast and return not valid date\n  if (isObject(_input) && isObjectEmpty(_input) || isArray(_input) && _input.length === 0) {\n    _input = undefined;\n  }\n  // object construction must be done this way.\n  // https://github.com/moment/moment/issues/1423\n  // config._isAMomentObject = true;\n  config._useUTC = config._isUTC = isUTC;\n  config._l = localeKey;\n  config._i = _input;\n  config._f = format;\n  config._strict = strict;\n  return createFromConfig(config);\n}\nfunction parseDate(input, format, localeKey, strict, isUTC) {\n  if (isDate(input)) {\n    return input;\n  }\n  const config = createLocalOrUTC(input, format, localeKey, strict, isUTC);\n  return config._d;\n}\nfunction utcAsLocal(date) {\n  if (!(date instanceof Date)) {\n    return null;\n  }\n  return new Date(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(), date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), date.getUTCMilliseconds());\n}\nfunction absRound(num) {\n  return num < 0 ? Math.round(num * -1) * -1 : Math.round(num);\n}\nfunction isAfter(date1, date2, units = 'milliseconds') {\n  if (!date1 || !date2) {\n    return false;\n  }\n  if (units === 'milliseconds') {\n    return date1.valueOf() > date2.valueOf();\n  }\n  return date2.valueOf() < startOf(date1, units).valueOf();\n}\nfunction isBefore(date1, date2, units = 'milliseconds') {\n  if (!date1 || !date2) {\n    return false;\n  }\n  if (units === 'milliseconds') {\n    return date1.valueOf() < date2.valueOf();\n  }\n  return endOf(date1, units).valueOf() < date2.valueOf();\n}\nfunction isDisabledDay(date, daysDisabled) {\n  if (typeof daysDisabled === 'undefined' || !daysDisabled || !daysDisabled.length) {\n    return false;\n  }\n  return daysDisabled.some(day => day === date.getDay());\n}\nfunction isBetween(date, from, to, units, inclusivity = '()') {\n  const leftBound = inclusivity[0] === '(' ? isAfter(date, from, units) : !isBefore(date, from, units);\n  const rightBound = inclusivity[1] === ')' ? isBefore(date, to, units) : !isAfter(date, to, units);\n  return leftBound && rightBound;\n}\nfunction isSame(date1, date2, units = 'milliseconds') {\n  if (!date1 || !date2) {\n    return false;\n  }\n  if (units === 'milliseconds') {\n    return date1.valueOf() === date2.valueOf();\n  }\n  const inputMs = date2.valueOf();\n  return startOf(date1, units).valueOf() <= inputMs && inputMs <= endOf(date1, units).valueOf();\n}\nfunction isSameDay(date1, date2) {\n  return date1.getDay() == date2.getDay();\n}\nfunction isSameOrAfter(date1, date2, units) {\n  return isSame(date1, date2, units) || isAfter(date1, date2, units);\n}\nfunction isSameOrBefore(date1, date2, units) {\n  return isSame(date1, date2, units) || isBefore(date1, date2, units);\n}\n\n// ASP.NET json date format regex\nconst aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/;\n// from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n// somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n// and further modified to allow for strings containing both week and day\nconst isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\nfunction createDuration(input, key, config = {}) {\n  const duration = convertDuration(input, key);\n  // matching against regexp is expensive, do it on demand\n  return new Duration(duration, config);\n}\nfunction convertDuration(input, key) {\n  // checks for null or undefined\n  if (input == null) {\n    return {};\n  }\n  if (isDuration(input)) {\n    return {\n      milliseconds: input._milliseconds,\n      day: input._days,\n      month: input._months\n    };\n  }\n  if (isNumber(input)) {\n    // duration = {};\n    return key ? {\n      [key]: input\n    } : {\n      milliseconds: input\n    };\n  }\n  if (isString(input)) {\n    let match = aspNetRegex.exec(input);\n    if (match) {\n      const sign = match[1] === '-' ? -1 : 1;\n      return {\n        year: 0,\n        day: toInt(match[DATE]) * sign,\n        hours: toInt(match[HOUR]) * sign,\n        minutes: toInt(match[MINUTE]) * sign,\n        seconds: toInt(match[SECOND]) * sign,\n        // the millisecond decimal point is included in the match\n        milliseconds: toInt(absRound(toInt(match[MILLISECOND]) * 1000)) * sign\n      };\n    }\n    match = isoRegex.exec(input);\n    if (match) {\n      const sign = match[1] === '-' ? -1 : match[1] === '+' ? 1 : 1;\n      return {\n        year: parseIso(match[2], sign),\n        month: parseIso(match[3], sign),\n        week: parseIso(match[4], sign),\n        day: parseIso(match[5], sign),\n        hours: parseIso(match[6], sign),\n        minutes: parseIso(match[7], sign),\n        seconds: parseIso(match[8], sign)\n      };\n    }\n  }\n  if (isObject(input) && ('from' in input || 'to' in input)) {\n    const diffRes = momentsDifference(parseDate(input.from), parseDate(input.to));\n    return {\n      milliseconds: diffRes.milliseconds,\n      month: diffRes.months\n    };\n  }\n  return input;\n}\n// createDuration.fn = Duration.prototype;\n// createDuration.invalid = invalid;\nfunction parseIso(inp, sign) {\n  // We'd normally use ~~inp for this, but unfortunately it also\n  // converts floats to ints.\n  // inp may be undefined, so careful calling replace on it.\n  const res = inp && parseFloat(inp.replace(',', '.'));\n  // apply sign while we're at it\n  return (isNaN(res) ? 0 : res) * sign;\n}\nfunction positiveMomentsDifference(base, other) {\n  const res = {\n    milliseconds: 0,\n    months: 0\n  };\n  res.months = getMonth(other) - getMonth(base) + (getFullYear(other) - getFullYear(base)) * 12;\n  const _basePlus = add(cloneDate(base), res.months, 'month');\n  if (isAfter(_basePlus, other)) {\n    --res.months;\n  }\n  res.milliseconds = +other - +add(cloneDate(base), res.months, 'month');\n  return res;\n}\nfunction momentsDifference(base, other) {\n  if (!(isDateValid(base) && isDateValid(other))) {\n    return {\n      milliseconds: 0,\n      months: 0\n    };\n  }\n  let res;\n  const _other = cloneWithOffset(other, base, {\n    _offset: base.getTimezoneOffset()\n  });\n  if (isBefore(base, _other)) {\n    res = positiveMomentsDifference(base, _other);\n  } else {\n    res = positiveMomentsDifference(_other, base);\n    res.milliseconds = -res.milliseconds;\n    res.months = -res.months;\n  }\n  return res;\n}\nfunction add(date, val, period, isUTC) {\n  const dur = createDuration(val, period);\n  return addSubtract(date, dur, 1, isUTC);\n}\nfunction subtract(date, val, period, isUTC) {\n  const dur = createDuration(val, period);\n  return addSubtract(date, dur, -1, isUTC);\n}\nfunction addSubtract(date, duration, isAdding, isUTC) {\n  const milliseconds = duration._milliseconds;\n  const days = absRound(duration._days);\n  const months = absRound(duration._months);\n  // todo: add timezones support\n  // const _updateOffset = updateOffset == null ? true : updateOffset;\n  if (months) {\n    setMonth(date, getMonth(date, isUTC) + months * isAdding, isUTC);\n  }\n  if (days) {\n    setDate(date, getDate(date, isUTC) + days * isAdding, isUTC);\n  }\n  if (milliseconds) {\n    setTime(date, getTime(date) + milliseconds * isAdding);\n  }\n  return cloneDate(date);\n  // todo: add timezones support\n  // if (_updateOffset) {\n  //   hooks.updateOffset(date, days || months);\n  // }\n}\nfunction initDayOfWeek() {\n  // FORMATTING\n  addFormatToken('d', null, 'do', function (date, opts) {\n    return getDay(date, opts.isUTC).toString(10);\n  });\n  addFormatToken('dd', null, null, function (date, opts) {\n    return opts.locale.weekdaysMin(date, opts.format, opts.isUTC);\n  });\n  addFormatToken('ddd', null, null, function (date, opts) {\n    return opts.locale.weekdaysShort(date, opts.format, opts.isUTC);\n  });\n  addFormatToken('dddd', null, null, function (date, opts) {\n    return opts.locale.weekdays(date, opts.format, opts.isUTC);\n  });\n  addFormatToken('e', null, null, function (date, opts) {\n    return getLocaleDayOfWeek(date, opts.locale, opts.isUTC).toString(10);\n    // return getDay(date, opts.isUTC).toString(10);\n  });\n  addFormatToken('E', null, null, function (date, opts) {\n    return getISODayOfWeek(date, opts.isUTC).toString(10);\n  });\n  // ALIASES\n  addUnitAlias('day', 'd');\n  addUnitAlias('weekday', 'e');\n  addUnitAlias('isoWeekday', 'E');\n  // PRIORITY\n  addUnitPriority('day', 11);\n  addUnitPriority('weekday', 11);\n  addUnitPriority('isoWeekday', 11);\n  // PARSING\n  addRegexToken('d', match1to2);\n  addRegexToken('e', match1to2);\n  addRegexToken('E', match1to2);\n  addRegexToken('dd', function (isStrict, locale) {\n    return locale.weekdaysMinRegex(isStrict);\n  });\n  addRegexToken('ddd', function (isStrict, locale) {\n    return locale.weekdaysShortRegex(isStrict);\n  });\n  addRegexToken('dddd', function (isStrict, locale) {\n    return locale.weekdaysRegex(isStrict);\n  });\n  addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n    const weekday = config._locale.weekdaysParse(input, token, config._strict);\n    // if we didn't get a weekday name, mark the date as invalid\n    if (weekday != null) {\n      week[\"d\"] = weekday;\n    } else {\n      getParsingFlags(config).invalidWeekday = !!input;\n    }\n    return config;\n  });\n  addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n    week[token] = toInt(input);\n    return config;\n  });\n}\n// HELPERS\nfunction parseWeekday(input, locale) {\n  if (!isString(input)) {\n    return input;\n  }\n  const _num = parseInt(input, 10);\n  if (!isNaN(_num)) {\n    return _num;\n  }\n  const _weekDay = locale.weekdaysParse(input);\n  if (isNumber(_weekDay)) {\n    return _weekDay;\n  }\n  return null;\n}\nfunction parseIsoWeekday(input, locale = getLocale()) {\n  if (isString(input)) {\n    return locale.weekdaysParse(input) % 7 || 7;\n  }\n  return isNumber(input) && isNaN(input) ? null : input;\n}\n// MOMENTS\nfunction getSetDayOfWeek(date, input, opts) {\n  if (!input) {\n    return getDayOfWeek(date, opts.isUTC);\n  }\n  return setDayOfWeek(date, input, opts.locale, opts.isUTC);\n}\nfunction setDayOfWeek(date, input, locale = getLocale(), isUTC) {\n  const day = getDay(date, isUTC);\n  const _input = parseWeekday(input, locale);\n  return add(date, _input - day, 'day');\n}\nfunction getDayOfWeek(date, isUTC) {\n  return getDay(date, isUTC);\n}\n/********************************************/\n// todo: utc\n// getSetLocaleDayOfWeek\nfunction getLocaleDayOfWeek(date, locale = getLocale(), isUTC) {\n  return (getDay(date, isUTC) + 7 - locale.firstDayOfWeek()) % 7;\n}\nfunction setLocaleDayOfWeek(date, input, opts = {}) {\n  const weekday = getLocaleDayOfWeek(date, opts.locale, opts.isUTC);\n  return add(date, input - weekday, 'day');\n}\n// getSetISODayOfWeek\nfunction getISODayOfWeek(date, isUTC) {\n  return getDay(date, isUTC) || 7;\n}\nfunction setISODayOfWeek(date, input, opts = {}) {\n  // behaves the same as moment#day except\n  // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n  // as a setter, sunday should belong to the previous week.\n  const weekday = parseIsoWeekday(input, opts.locale);\n  return setDayOfWeek(date, getDayOfWeek(date) % 7 ? weekday : weekday - 7);\n}\n\n//! moment.js locale configuration\n//! locale : Arabic [ar]\n//! author : Abdel Said: https://github.com/abdelsaid\n//! author : Ahmed Elkhatib\n//! author : forabi https://github.com/forabi\nconst symbolMap$1 = {\n  1: '١',\n  2: '٢',\n  3: '٣',\n  4: '٤',\n  5: '٥',\n  6: '٦',\n  7: '٧',\n  8: '٨',\n  9: '٩',\n  0: '٠'\n};\nconst numberMap$1 = {\n  '١': '1',\n  '٢': '2',\n  '٣': '3',\n  '٤': '4',\n  '٥': '5',\n  '٦': '6',\n  '٧': '7',\n  '٨': '8',\n  '٩': '9',\n  '٠': '0'\n};\nconst pluralForm = function (num) {\n  return num === 0 ? 0 : num === 1 ? 1 : num === 2 ? 2 : num % 100 >= 3 && num % 100 <= 10 ? 3 : num % 100 >= 11 ? 4 : 5;\n};\nconst plurals = {\n  s: ['أقل من ثانية', 'ثانية واحدة', ['ثانيتان', 'ثانيتين'], '%d ثوان', '%d ثانية', '%d ثانية'],\n  m: ['أقل من دقيقة', 'دقيقة واحدة', ['دقيقتان', 'دقيقتين'], '%d دقائق', '%d دقيقة', '%d دقيقة'],\n  h: ['أقل من ساعة', 'ساعة واحدة', ['ساعتان', 'ساعتين'], '%d ساعات', '%d ساعة', '%d ساعة'],\n  d: ['أقل من يوم', 'يوم واحد', ['يومان', 'يومين'], '%d أيام', '%d يومًا', '%d يوم'],\n  M: ['أقل من شهر', 'شهر واحد', ['شهران', 'شهرين'], '%d أشهر', '%d شهرا', '%d شهر'],\n  y: ['أقل من عام', 'عام واحد', ['عامان', 'عامين'], '%d أعوام', '%d عامًا', '%d عام']\n};\nconst pluralize = function (u) {\n  return function (num, withoutSuffix) {\n    const f = pluralForm(num);\n    let str = plurals[u][pluralForm(num)];\n    if (f === 2) {\n      str = str[withoutSuffix ? 0 : 1];\n    }\n    return str.replace(/%d/i, num.toString());\n  };\n};\nconst months$2 = ['يناير', 'فبراير', 'مارس', 'أبريل', 'مايو', 'يونيو', 'يوليو', 'أغسطس', 'سبتمبر', 'أكتوبر', 'نوفمبر', 'ديسمبر'];\nconst arLocale = {\n  abbr: 'ar',\n  months: months$2,\n  monthsShort: months$2,\n  weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n  weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),\n  weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'D/\\u200FM/\\u200FYYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd D MMMM YYYY HH:mm'\n  },\n  meridiemParse: /ص|م/,\n  isPM(input) {\n    return 'م' === input;\n  },\n  meridiem(hour, minute, isLower) {\n    if (hour < 12) {\n      return 'ص';\n    } else {\n      return 'م';\n    }\n  },\n  calendar: {\n    sameDay: '[اليوم عند الساعة] LT',\n    nextDay: '[غدًا عند الساعة] LT',\n    nextWeek: 'dddd [عند الساعة] LT',\n    lastDay: '[أمس عند الساعة] LT',\n    lastWeek: 'dddd [عند الساعة] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'بعد %s',\n    past: 'منذ %s',\n    s: pluralize('s'),\n    ss: pluralize('s'),\n    m: pluralize('m'),\n    mm: pluralize('m'),\n    h: pluralize('h'),\n    hh: pluralize('h'),\n    d: pluralize('d'),\n    dd: pluralize('d'),\n    M: pluralize('M'),\n    MM: pluralize('M'),\n    y: pluralize('y'),\n    yy: pluralize('y')\n  },\n  preparse(str) {\n    return str.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {\n      return numberMap$1[match];\n    }).replace(/،/g, ',');\n  },\n  postformat(str) {\n    return str.replace(/\\d/g, function (match) {\n      return symbolMap$1[match];\n    }).replace(/,/g, '،');\n  },\n  week: {\n    dow: 6,\n    // Saturday is the first day of the week.\n    doy: 12 // The week that contains Jan 1st is the first week of the year.\n  }\n};\n\n//! moment.js locale configuration\n//! locale : Bulgarian [bg]\n//! author : Iskren Ivov Chernev : https://github.com/ichernev\n//! author : Kunal Marwaha : https://github.com/marwahaha\n//! author : Matt Grande : https://github.com/mattgrande\n//! author : Isaac Cambron : https://github.com/icambron\n//! author : Venelin Manchev : https://github.com/vmanchev\nconst bgLocale = {\n  abbr: 'bg',\n  months: 'януари_февруари_март_април_май_юни_юли_август_септември_октомври_ноември_декември'.split('_'),\n  monthsShort: 'янр_фев_мар_апр_май_юни_юли_авг_сеп_окт_ное_дек'.split('_'),\n  weekdays: 'неделя_понеделник_вторник_сряда_четвъртък_петък_събота'.split('_'),\n  weekdaysShort: 'нед_пон_вто_сря_чет_пет_съб'.split('_'),\n  weekdaysMin: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'D.MM.YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY H:mm',\n    LLLL: 'dddd, D MMMM YYYY H:mm'\n  },\n  calendar: {\n    sameDay: '[Днес в] LT',\n    nextDay: '[Утре в] LT',\n    nextWeek: 'dddd [в] LT',\n    lastDay: '[Вчера в] LT',\n    lastWeek: function (d) {\n      switch (d) {\n        case 0:\n        case 3:\n        case 6:\n          return '[В изминалата] dddd [в] LT';\n        case 1:\n        case 2:\n        case 4:\n        case 5:\n          return '[В изминалия] dddd [в] LT';\n      }\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'след %s',\n    past: 'преди %s',\n    s: 'няколко секунди',\n    ss: '%d секунди',\n    m: 'минута',\n    mm: '%d минути',\n    h: 'час',\n    hh: '%d часа',\n    d: 'ден',\n    dd: '%d дни',\n    M: 'месец',\n    MM: '%d месеца',\n    y: 'година',\n    yy: '%d години'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}-(ев|ен|ти|ви|ри|ми)/,\n  ordinal: function (_num) {\n    const number = Number(_num);\n    let lastDigit = number % 10,\n      last2Digits = number % 100;\n    if (number === 0) {\n      return number + '-ев';\n    } else if (last2Digits === 0) {\n      return number + '-ен';\n    } else if (last2Digits > 10 && last2Digits < 20) {\n      return number + '-ти';\n    } else if (lastDigit === 1) {\n      return number + '-ви';\n    } else if (lastDigit === 2) {\n      return number + '-ри';\n    } else if (lastDigit === 7 || lastDigit === 8) {\n      return number + '-ми';\n    } else {\n      return number + '-ти';\n    }\n  },\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 7 // The week that contains Jan 1st is the first week of the year.\n  }\n};\n\n//! moment.js locale configuration\n//! locale : Catalan [ca]\n//! author : Xavier Arbat : https://github.com/XavisaurusRex\nlet monthsShortDot$5 = 'gen._feb._mar._abr._mai._jun._jul._ago._set._oct._nov._des.'.split('_'),\n  monthsShort$7 = 'ene_feb_mar_abr_mai_jun_jul_ago_set_oct_nov_des'.split('_');\nlet monthsParse$6 = [/^gen/i, /^feb/i, /^mar/i, /^abr/i, /^mai/i, /^jun/i, /^jul/i, /^ago/i, /^set/i, /^oct/i, /^nov/i, /^des/i];\nlet monthsRegex$5 = /^(gener|febrer|març|abril|maig|juny|juliol|agost|setembre|octubre|novembre|desembre|gen\\.?|feb\\.?|mar\\.?|abr\\.?|mai\\.?|jun\\.?|jul\\.?|ago\\.?|set\\.?|oct\\.?|nov\\.?|des\\.?)/i;\nconst caLocale = {\n  abbr: 'ca',\n  months: 'gener_febrer_març_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre'.split('_'),\n  monthsShort(date, format, isUTC) {\n    if (!date) {\n      return monthsShortDot$5;\n    }\n    if (/-MMM-/.test(format)) {\n      return monthsShort$7[getMonth(date, isUTC)];\n    }\n    return monthsShortDot$5[getMonth(date, isUTC)];\n  },\n  monthsRegex: monthsRegex$5,\n  monthsShortRegex: monthsRegex$5,\n  monthsStrictRegex: /^(gener|febrer|març|abril|maig|juny|juliol|agost|setembre|octubre|novembre|desembre)/i,\n  monthsShortStrictRegex: /^(gen\\.?|feb\\.?|mar\\.?|abr\\.?|mai\\.?|jun\\.?|jul\\.?|ago\\.?|set\\.?|oct\\.?|nov\\.?|des\\.?)/i,\n  monthsParse: monthsParse$6,\n  longMonthsParse: monthsParse$6,\n  shortMonthsParse: monthsParse$6,\n  weekdays: 'diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte'.split('_'),\n  weekdaysShort: 'diu._dil._dim._dix._dij._div._dis.'.split('_'),\n  weekdaysMin: 'dg_dl_dt_dc_dj_dv_ds'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D [de] MMMM [de] YYYY',\n    LLL: 'D [de] MMMM [de] YYYY H:mm',\n    LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm'\n  },\n  calendar: {\n    sameDay(date) {\n      return '[avui a ' + ('la' + (getHours(date) !== 1) ? 'les' : '') + '] LT';\n    },\n    nextDay(date) {\n      return '[dema a ' + ('la' + (getHours(date) !== 1) ? 'les' : '') + '] LT';\n    },\n    nextWeek(date) {\n      return 'dddd [a ' + ('la' + (getHours(date) !== 1) ? 'les' : '') + '] LT';\n    },\n    lastDay(date) {\n      return '[ahir a ' + ('la' + (getHours(date) !== 1) ? 'les' : '') + '] LT';\n    },\n    lastWeek(date) {\n      return '[el] dddd [' + ('passada la ' + (getHours(date) !== 1) ? 'passades les' : '') + '] LT';\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'en %s',\n    past: 'fa %s',\n    s: 'uns segons',\n    ss: '%d segons',\n    m: 'un minut',\n    mm: '%d minuts',\n    h: 'una hora',\n    hh: '%d hores',\n    d: 'un dia',\n    dd: '%d dies',\n    M: 'un mes',\n    MM: '%d mesos',\n    y: 'un any',\n    yy: '%d anys'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(er|on|er|rt|é)/,\n  ordinal(_num) {\n    const num = Number(_num);\n    const output = num > 4 ? 'é' : num === 1 || num === 3 ? 'r' : num === 2 ? 'n' : num === 4 ? 't' : 'é';\n    return num + output;\n  },\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n  }\n};\n\n//! moment.js locale configuration\n//! locale : Czech [cs]\n//! author : petrbela : https://github.com/petrbela\nconst months$1 = 'leden_únor_březen_duben_květen_červen_červenec_srpen_září_říjen_listopad_prosinec'.split('_');\nconst monthsShort$6 = 'led_úno_bře_dub_kvě_čvn_čvc_srp_zář_říj_lis_pro'.split('_');\nfunction plural$4(num) {\n  return num > 1 && num < 5 && ~~(num / 10) !== 1;\n}\nfunction translate$6(num, withoutSuffix, key, isFuture) {\n  const result = num + ' ';\n  switch (key) {\n    case 's':\n      // a few seconds / in a few seconds / a few seconds ago\n      return withoutSuffix || isFuture ? 'pár sekund' : 'pár sekundami';\n    case 'ss':\n      // 9 seconds / in 9 seconds / 9 seconds ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural$4(num) ? 'sekundy' : 'sekund');\n      } else {\n        return result + 'sekundami';\n      }\n    // break;\n    case 'm':\n      // a minute / in a minute / a minute ago\n      return withoutSuffix ? 'minuta' : isFuture ? 'minutu' : 'minutou';\n    case 'mm':\n      // 9 minutes / in 9 minutes / 9 minutes ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural$4(num) ? 'minuty' : 'minut');\n      } else {\n        return result + 'minutami';\n      }\n    // break;\n    case 'h':\n      // an hour / in an hour / an hour ago\n      return withoutSuffix ? 'hodina' : isFuture ? 'hodinu' : 'hodinou';\n    case 'hh':\n      // 9 hours / in 9 hours / 9 hours ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural$4(num) ? 'hodiny' : 'hodin');\n      } else {\n        return result + 'hodinami';\n      }\n    // break;\n    case 'd':\n      // a day / in a day / a day ago\n      return withoutSuffix || isFuture ? 'den' : 'dnem';\n    case 'dd':\n      // 9 days / in 9 days / 9 days ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural$4(num) ? 'dny' : 'dní');\n      } else {\n        return result + 'dny';\n      }\n    // break;\n    case 'M':\n      // a month / in a month / a month ago\n      return withoutSuffix || isFuture ? 'měsíc' : 'měsícem';\n    case 'MM':\n      // 9 months / in 9 months / 9 months ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural$4(num) ? 'měsíce' : 'měsíců');\n      } else {\n        return result + 'měsíci';\n      }\n    // break;\n    case 'y':\n      // a year / in a year / a year ago\n      return withoutSuffix || isFuture ? 'rok' : 'rokem';\n    case 'yy':\n      // 9 years / in 9 years / 9 years ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural$4(num) ? 'roky' : 'let');\n      } else {\n        return result + 'lety';\n      }\n    // break;\n  }\n}\nconst csLocale = {\n  abbr: 'cs',\n  months: months$1,\n  monthsShort: monthsShort$6,\n  monthsParse: function (months, monthsShort) {\n    let i,\n      _monthsParse = [];\n    for (i = 0; i < 12; i++) {\n      // use custom parser to solve problem with July (červenec)\n      _monthsParse[i] = new RegExp('^' + months[i] + '$|^' + monthsShort[i] + '$', 'i');\n    }\n    return _monthsParse;\n  }(months$1, monthsShort$6),\n  shortMonthsParse: function (monthsShort) {\n    let i,\n      _shortMonthsParse = [];\n    for (i = 0; i < 12; i++) {\n      _shortMonthsParse[i] = new RegExp('^' + monthsShort[i] + '$', 'i');\n    }\n    return _shortMonthsParse;\n  }(monthsShort$6),\n  longMonthsParse: function (months) {\n    let i,\n      _longMonthsParse = [];\n    for (i = 0; i < 12; i++) {\n      _longMonthsParse[i] = new RegExp('^' + months[i] + '$', 'i');\n    }\n    return _longMonthsParse;\n  }(months$1),\n  weekdays: 'neděle_pondělí_úterý_středa_čtvrtek_pátek_sobota'.split('_'),\n  weekdaysShort: 'ne_po_út_st_čt_pá_so'.split('_'),\n  weekdaysMin: 'ne_po_út_st_čt_pá_so'.split('_'),\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D. MMMM YYYY',\n    LLL: 'D. MMMM YYYY H:mm',\n    LLLL: 'dddd D. MMMM YYYY H:mm',\n    l: 'D. M. YYYY'\n  },\n  calendar: {\n    sameDay: '[dnes v] LT',\n    nextDay: '[zítra v] LT',\n    nextWeek(date) {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[v neděli v] LT';\n        case 1:\n        case 2:\n          return '[v] dddd [v] LT';\n        case 3:\n          return '[ve středu v] LT';\n        case 4:\n          return '[ve čtvrtek v] LT';\n        case 5:\n          return '[v pátek v] LT';\n        case 6:\n          return '[v sobotu v] LT';\n      }\n    },\n    lastDay: '[včera v] LT',\n    lastWeek(date) {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[minulou neděli v] LT';\n        case 1:\n        case 2:\n          return '[minulé] dddd [v] LT';\n        case 3:\n          return '[minulou středu v] LT';\n        case 4:\n        case 5:\n          return '[minulý] dddd [v] LT';\n        case 6:\n          return '[minulou sobotu v] LT';\n      }\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'za %s',\n    past: 'před %s',\n    s: translate$6,\n    ss: translate$6,\n    m: translate$6,\n    mm: translate$6,\n    h: translate$6,\n    hh: translate$6,\n    d: translate$6,\n    dd: translate$6,\n    M: translate$6,\n    MM: translate$6,\n    y: translate$6,\n    yy: translate$6\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n  }\n};\n\n//! moment.js locale configuration\n//! locale : Danish (Denmark) [da]\n//! author : Per Hansen : https://github.com/perhp\nconst daLocale = {\n  abbr: 'da',\n  months: 'Januar_Februar_Marts_April_Maj_Juni_Juli_August_September_Oktober_November_December'.split('_'),\n  monthsShort: 'Jan_Feb_Mar_Apr_Maj_Jun_Jul_Aug_Sep_Okt_Nov_Dec'.split('_'),\n  weekdays: 'Søndag_Mandag_Tirsdag_Onsdag_Torsdag_Fredag_Lørdag'.split('_'),\n  weekdaysShort: 'Søn_Man_Tir_Ons_Tor_Fre_Lør'.split('_'),\n  weekdaysMin: 'Sø_Ma_Ti_On_To_Fr_Lø'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D. MMMM YYYY',\n    LLL: 'D. MMMM YYYY HH:mm',\n    LLLL: 'dddd [d.] D. MMMM YYYY [kl.] HH:mm'\n  },\n  calendar: {\n    sameDay: '[i dag kl.] LT',\n    nextDay: '[i morgen kl.] LT',\n    nextWeek: 'på dddd [kl.] LT',\n    lastDay: '[i går kl.] LT',\n    lastWeek: '[i] dddd[s kl.] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'om %s',\n    past: '%s siden',\n    s: 'få sekunder',\n    m: 'et minut',\n    mm: '%d minutter',\n    h: 'en time',\n    hh: '%d timer',\n    d: 'en dag',\n    dd: '%d dage',\n    M: 'en måned',\n    MM: '%d måneder',\n    y: 'et år',\n    yy: '%d år'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n  }\n};\n\n//! moment.js locale configuration\n//! locale : German [de]\n//! author : lluchs : https://github.com/lluchs\n//! author: Menelion Elensúle: https://github.com/Oire\n//! author : Mikolaj Dadela : https://github.com/mik01aj\nfunction processRelativeTime$2(num, withoutSuffix, key, isFuture) {\n  const format = {\n    'm': ['eine Minute', 'einer Minute'],\n    'h': ['eine Stunde', 'einer Stunde'],\n    'd': ['ein Tag', 'einem Tag'],\n    'dd': [num + ' Tage', num + ' Tagen'],\n    'M': ['ein Monat', 'einem Monat'],\n    'MM': [num + ' Monate', num + ' Monaten'],\n    'y': ['ein Jahr', 'einem Jahr'],\n    'yy': [num + ' Jahre', num + ' Jahren']\n  };\n  return withoutSuffix ? format[key][0] : format[key][1];\n}\nconst deLocale = {\n  abbr: 'de',\n  months: 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),\n  monthsShort: 'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),\n  weekdaysShort: 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),\n  weekdaysMin: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D. MMMM YYYY',\n    LLL: 'D. MMMM YYYY HH:mm',\n    LLLL: 'dddd, D. MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[heute um] LT [Uhr]',\n    sameElse: 'L',\n    nextDay: '[morgen um] LT [Uhr]',\n    nextWeek: 'dddd [um] LT [Uhr]',\n    lastDay: '[gestern um] LT [Uhr]',\n    lastWeek: '[letzten] dddd [um] LT [Uhr]'\n  },\n  relativeTime: {\n    future: 'in %s',\n    past: 'vor %s',\n    s: 'ein paar Sekunden',\n    ss: '%d Sekunden',\n    m: processRelativeTime$2,\n    mm: '%d Minuten',\n    h: processRelativeTime$2,\n    hh: '%d Stunden',\n    d: processRelativeTime$2,\n    dd: processRelativeTime$2,\n    M: processRelativeTime$2,\n    MM: processRelativeTime$2,\n    y: processRelativeTime$2,\n    yy: processRelativeTime$2\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n  }\n};\n\n//! moment.js locale configuration\n//! locale : English (United Kingdom) [en-gb]\n//! author : Chris Gedrim : https://github.com/chrisgedrim\nconst enGbLocale = {\n  abbr: 'en-gb',\n  months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n  monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n  weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n  weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n  weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd, D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[Today at] LT',\n    nextDay: '[Tomorrow at] LT',\n    nextWeek: 'dddd [at] LT',\n    lastDay: '[Yesterday at] LT',\n    lastWeek: '[Last] dddd [at] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'in %s',\n    past: '%s ago',\n    s: 'a few seconds',\n    ss: '%d seconds',\n    m: 'a minute',\n    mm: '%d minutes',\n    h: 'an hour',\n    hh: '%d hours',\n    d: 'a day',\n    dd: '%d days',\n    M: 'a month',\n    MM: '%d months',\n    y: 'a year',\n    yy: '%d years'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n  ordinal(_num) {\n    const num = Number(_num);\n    const b = num % 10,\n      output = ~~(num % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n    return num + output;\n  },\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n  }\n};\n\n//! moment.js locale configuration\n//! locale : Spanish (Dominican Republic) [es-do]\nlet monthsShortDot$4 = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'),\n  monthsShort$5 = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');\nlet monthsParse$5 = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i];\nlet monthsRegex$4 = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i;\nconst esDoLocale = {\n  abbr: 'es-do',\n  months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\n  monthsShort(date, format, isUTC) {\n    if (!date) {\n      return monthsShortDot$4;\n    } else if (/-MMM-/.test(format)) {\n      return monthsShort$5[getMonth(date, isUTC)];\n    } else {\n      return monthsShortDot$4[getMonth(date, isUTC)];\n    }\n  },\n  monthsRegex: monthsRegex$4,\n  monthsShortRegex: monthsRegex$4,\n  monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,\n  monthsShortStrictRegex: /^(ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i,\n  monthsParse: monthsParse$5,\n  longMonthsParse: monthsParse$5,\n  shortMonthsParse: monthsParse$5,\n  weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\n  weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\n  weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'h:mm A',\n    LTS: 'h:mm:ss A',\n    L: 'DD/MM/YYYY',\n    LL: 'D [de] MMMM [de] YYYY',\n    LLL: 'D [de] MMMM [de] YYYY h:mm A',\n    LLLL: 'dddd, D [de] MMMM [de] YYYY h:mm A'\n  },\n  calendar: {\n    sameDay(date) {\n      return '[hoy a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n    nextDay(date) {\n      return '[mañana a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n    nextWeek(date) {\n      return 'dddd [a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n    lastDay(date) {\n      return '[ayer a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n    lastWeek(date) {\n      return '[el] dddd [pasado a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'en %s',\n    past: 'hace %s',\n    s: 'unos segundos',\n    ss: '%d segundos',\n    m: 'un minuto',\n    mm: '%d minutos',\n    h: 'una hora',\n    hh: '%d horas',\n    d: 'un día',\n    dd: '%d días',\n    M: 'un mes',\n    MM: '%d meses',\n    y: 'un año',\n    yy: '%d años'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}º/,\n  ordinal: '%dº',\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n  }\n};\n\n//! moment.js locale configuration\n//! locale : Spanish [es]\n//! author : Julio Napurí : https://github.com/julionc\nlet monthsShortDot$3 = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'),\n  monthsShort$4 = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');\nlet monthsParse$4 = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i];\nlet monthsRegex$3 = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i;\nconst esLocale = {\n  abbr: 'es',\n  months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\n  monthsShort(date, format, isUTC) {\n    if (!date) {\n      return monthsShortDot$3;\n    }\n    if (/-MMM-/.test(format)) {\n      return monthsShort$4[getMonth(date, isUTC)];\n    }\n    return monthsShortDot$3[getMonth(date, isUTC)];\n  },\n  monthsRegex: monthsRegex$3,\n  monthsShortRegex: monthsRegex$3,\n  monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,\n  monthsShortStrictRegex: /^(ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i,\n  monthsParse: monthsParse$4,\n  longMonthsParse: monthsParse$4,\n  shortMonthsParse: monthsParse$4,\n  weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\n  weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\n  weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D [de] MMMM [de] YYYY',\n    LLL: 'D [de] MMMM [de] YYYY H:mm',\n    LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm'\n  },\n  calendar: {\n    sameDay(date) {\n      return '[hoy a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n    nextDay(date) {\n      return '[mañana a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n    nextWeek(date) {\n      return 'dddd [a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n    lastDay(date) {\n      return '[ayer a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n    lastWeek(date) {\n      return '[el] dddd [pasado a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'en %s',\n    past: 'hace %s',\n    s: 'unos segundos',\n    ss: '%d segundos',\n    m: 'un minuto',\n    mm: '%d minutos',\n    h: 'una hora',\n    hh: '%d horas',\n    d: 'un día',\n    dd: '%d días',\n    M: 'un mes',\n    MM: '%d meses',\n    y: 'un año',\n    yy: '%d años'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}º/,\n  ordinal: '%dº',\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n  }\n};\n\n//! moment.js locale configuration\n//! locale : Spanish (Puerto Rico) [es-pr]\nlet monthsShortDot$2 = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_');\nlet monthsShort$3 = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');\nconst esPrLocale = {\n  abbr: 'es-pr',\n  months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\n  monthsShort(date, format, isUTC) {\n    if (!date) {\n      return monthsShortDot$2;\n    } else if (/-MMM-/.test(format)) {\n      return monthsShort$3[getMonth(date, isUTC)];\n    } else {\n      return monthsShortDot$2[getMonth(date, isUTC)];\n    }\n  },\n  monthsParseExact: true,\n  weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\n  weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\n  weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'h:mm A',\n    LTS: 'h:mm:ss A',\n    L: 'MM/DD/YYYY',\n    LL: 'D [de] MMMM [de] YYYY',\n    LLL: 'D [de] MMMM [de] YYYY h:mm A',\n    LLLL: 'dddd, D [de] MMMM [de] YYYY h:mm A'\n  },\n  calendar: {\n    sameDay(date) {\n      return '[hoy a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n    nextDay(date) {\n      return '[mañana a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n    nextWeek(date) {\n      return 'dddd [a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n    lastDay(date) {\n      return '[ayer a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n    lastWeek(date) {\n      return '[el] dddd [pasado a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'en %s',\n    past: 'hace %s',\n    s: 'unos segundos',\n    ss: '%d segundos',\n    m: 'un minuto',\n    mm: '%d minutos',\n    h: 'una hora',\n    hh: '%d horas',\n    d: 'un día',\n    dd: '%d días',\n    M: 'un mes',\n    MM: '%d meses',\n    y: 'un año',\n    yy: '%d años'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}º/,\n  ordinal: '%dº',\n  week: {\n    dow: 0,\n    // Sunday is the first day of the week.\n    doy: 6 // The week that contains Jan 1st is the first week of the year.\n  }\n};\n\n//! moment.js locale configuration\n//! locale : Spanish (United States) [es-us]\n//! author : bustta : https://github.com/bustta\nlet monthsShortDot$1 = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_');\nlet monthsShort$2 = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');\nconst esUsLocale = {\n  abbr: 'es-us',\n  months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\n  monthsShort(date, format, isUTC) {\n    if (!date) {\n      return monthsShortDot$1;\n    } else if (/-MMM-/.test(format)) {\n      return monthsShort$2[getMonth(date, isUTC)];\n    } else {\n      return monthsShortDot$1[getMonth(date, isUTC)];\n    }\n  },\n  monthsParseExact: true,\n  weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\n  weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\n  weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'h:mm A',\n    LTS: 'h:mm:ss A',\n    L: 'MM/DD/YYYY',\n    LL: 'MMMM [de] D [de] YYYY',\n    LLL: 'MMMM [de] D [de] YYYY h:mm A',\n    LLLL: 'dddd, MMMM [de] D [de] YYYY h:mm A'\n  },\n  calendar: {\n    sameDay(date) {\n      return '[hoy a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n    nextDay(date) {\n      return '[mañana a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n    nextWeek(date) {\n      return 'dddd [a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n    lastDay(date) {\n      return '[ayer a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n    lastWeek(date) {\n      return '[el] dddd [pasado a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'en %s',\n    past: 'hace %s',\n    s: 'unos segundos',\n    ss: '%d segundos',\n    m: 'un minuto',\n    mm: '%d minutos',\n    h: 'una hora',\n    hh: '%d horas',\n    d: 'un día',\n    dd: '%d días',\n    M: 'un mes',\n    MM: '%d meses',\n    y: 'un año',\n    yy: '%d años'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}º/,\n  ordinal: '%dº',\n  week: {\n    dow: 0,\n    // Sunday is the first day of the week.\n    doy: 6 // The week that contains Jan 1st is the first week of the year.\n  }\n};\n\n//! moment.js locale configuration\n//! locale : Estonian [et]\n//! author : Chris Gedrim : https://github.com/a90machado\nconst processRelativeTime$1 = function (num, withoutSuffix, key, isFuture) {\n  const format = {\n    s: ['mõne sekundi', 'mõni sekund', 'paar sekundit'],\n    ss: [num + 'sekundi', num + 'sekundit'],\n    m: ['ühe minuti', 'üks minut'],\n    mm: [num + ' minuti', num + ' minutit'],\n    h: ['ühe tunni', 'tund aega', 'üks tund'],\n    hh: [num + ' tunni', num + ' tundi'],\n    d: ['ühe päeva', 'üks päev'],\n    M: ['kuu aja', 'kuu aega', 'üks kuu'],\n    MM: [num + ' kuu', num + ' kuud'],\n    y: ['ühe aasta', 'aasta', 'üks aasta'],\n    yy: [num + ' aasta', num + ' aastat']\n  };\n  if (withoutSuffix) {\n    return format[key][2] ? format[key][2] : format[key][1];\n  }\n  return isFuture ? format[key][0] : format[key][1];\n};\nconst etLocale = {\n  abbr: 'et',\n  months: 'jaanuar_veebruar_märts_aprill_mai_juuni_juuli_august_september_oktoober_november_detsember'.split('_'),\n  monthsShort: 'jaan_veebr_märts_apr_mai_juuni_juuli_aug_sept_okt_nov_dets'.split('_'),\n  weekdays: 'pühapäev_esmaspäev_teisipäev_kolmapäev_neljapäev_reede_laupäev'.split('_'),\n  weekdaysShort: 'P_E_T_K_N_R_L'.split('_'),\n  weekdaysMin: 'P_E_T_K_N_R_L'.split('_'),\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D. MMMM YYYY',\n    LLL: 'D. MMMM YYYY H:mm',\n    LLLL: 'dddd, D. MMMM YYYY H:mm'\n  },\n  calendar: {\n    sameDay: '[Täna,] LT',\n    nextDay: '[Homme,] LT',\n    nextWeek: '[Järgmine] dddd LT',\n    lastDay: '[Eile,] LT',\n    lastWeek: '[Eelmine] dddd LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: '%s pärast',\n    past: '%s tagasi',\n    s: processRelativeTime$1,\n    ss: processRelativeTime$1,\n    m: processRelativeTime$1,\n    mm: processRelativeTime$1,\n    h: processRelativeTime$1,\n    hh: processRelativeTime$1,\n    d: processRelativeTime$1,\n    dd: '%d päeva',\n    M: processRelativeTime$1,\n    MM: processRelativeTime$1,\n    y: processRelativeTime$1,\n    yy: processRelativeTime$1\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}./,\n  ordinal: '%d.',\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n  }\n};\n\n//! moment.js locale configuration\n// https://github.com/moment/moment/blob/develop/locale/fi.js\nvar numbersPast = 'nolla yksi kaksi kolme neljä viisi kuusi seitsemän kahdeksan yhdeksän'.split(' '),\n  numbersFuture = ['nolla', 'yhden', 'kahden', 'kolmen', 'neljän', 'viiden', 'kuuden', numbersPast[7], numbersPast[8], numbersPast[9]];\nfunction translate$5(num, withoutSuffix, key, isFuture) {\n  var result = '';\n  switch (key) {\n    case 's':\n      return isFuture ? 'muutaman sekunnin' : 'muutama sekunti';\n    case 'ss':\n      return isFuture ? 'sekunnin' : 'sekuntia';\n    case 'm':\n      return isFuture ? 'minuutin' : 'minuutti';\n    case 'mm':\n      result = isFuture ? 'minuutin' : 'minuuttia';\n      break;\n    case 'h':\n      return isFuture ? 'tunnin' : 'tunti';\n    case 'hh':\n      result = isFuture ? 'tunnin' : 'tuntia';\n      break;\n    case 'd':\n      return isFuture ? 'päivän' : 'päivä';\n    case 'dd':\n      result = isFuture ? 'päivän' : 'päivää';\n      break;\n    case 'M':\n      return isFuture ? 'kuukauden' : 'kuukausi';\n    case 'MM':\n      result = isFuture ? 'kuukauden' : 'kuukautta';\n      break;\n    case 'y':\n      return isFuture ? 'vuoden' : 'vuosi';\n    case 'yy':\n      result = isFuture ? 'vuoden' : 'vuotta';\n      break;\n  }\n  result = verbalNumber(num, isFuture) + ' ' + result;\n  return result;\n}\nfunction verbalNumber(num, isFuture) {\n  return num < 10 ? isFuture ? numbersFuture[num] : numbersPast[num] : num;\n}\nconst fiLocale = {\n  abbr: 'fi',\n  months: 'tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kesäkuu_heinäkuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu'.split('_'),\n  monthsShort: 'tammi_helmi_maalis_huhti_touko_kesä_heinä_elo_syys_loka_marras_joulu'.split('_'),\n  weekdays: 'sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai'.split('_'),\n  weekdaysShort: 'su_ma_ti_ke_to_pe_la'.split('_'),\n  weekdaysMin: 'su_ma_ti_ke_to_pe_la'.split('_'),\n  longDateFormat: {\n    LT: 'HH.mm',\n    LTS: 'HH.mm.ss',\n    L: 'DD.MM.YYYY',\n    LL: 'Do MMMM[ta] YYYY',\n    LLL: 'Do MMMM[ta] YYYY, [klo] HH.mm',\n    LLLL: 'dddd, Do MMMM[ta] YYYY, [klo] HH.mm',\n    l: 'D.M.YYYY',\n    ll: 'Do MMM YYYY',\n    lll: 'Do MMM YYYY, [klo] HH.mm',\n    llll: 'ddd, Do MMM YYYY, [klo] HH.mm'\n  },\n  calendar: {\n    sameDay: '[tänään] [klo] LT',\n    nextDay: '[huomenna] [klo] LT',\n    nextWeek: 'dddd [klo] LT',\n    lastDay: '[eilen] [klo] LT',\n    lastWeek: '[viime] dddd[na] [klo] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: '%s päästä',\n    past: '%s sitten',\n    s: translate$5,\n    ss: translate$5,\n    m: translate$5,\n    mm: translate$5,\n    h: translate$5,\n    hh: translate$5,\n    d: translate$5,\n    dd: translate$5,\n    M: translate$5,\n    MM: translate$5,\n    y: translate$5,\n    yy: translate$5\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n  }\n};\n\n//! moment.js locale configuration\n//! locale : French [fr]\n//! author : John Fischer : https://github.com/jfroffice\nconst frLocale = {\n  abbr: 'fr',\n  months: 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),\n  monthsShort: 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),\n  weekdaysShort: 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),\n  weekdaysMin: 'di_lu_ma_me_je_ve_sa'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[Aujourd’hui à] LT',\n    nextDay: '[Demain à] LT',\n    nextWeek: 'dddd [à] LT',\n    lastDay: '[Hier à] LT',\n    lastWeek: 'dddd [dernier à] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'dans %s',\n    past: 'il y a %s',\n    s: 'quelques secondes',\n    ss: '%d secondes',\n    m: 'une minute',\n    mm: '%d minutes',\n    h: 'une heure',\n    hh: '%d heures',\n    d: 'un jour',\n    dd: '%d jours',\n    M: 'un mois',\n    MM: '%d mois',\n    y: 'un an',\n    yy: '%d ans'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(er|)/,\n  ordinal(_num, period) {\n    const num = Number(_num);\n    switch (period) {\n      // TODO: Return 'e' when day of month > 1. Move this case inside\n      // block for masculine words below.\n      // See https://github.com/moment/moment/issues/3375\n      case 'D':\n        return num + (num === 1 ? 'er' : '');\n      // Words with masculine grammatical gender: mois, trimestre, jour\n      default:\n      case 'M':\n      case 'Q':\n      case 'DDD':\n      case 'd':\n        return num + (num === 1 ? 'er' : 'e');\n      // Words with feminine grammatical gender: semaine\n      case 'w':\n      case 'W':\n        return num + (num === 1 ? 're' : 'e');\n    }\n  },\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n  }\n};\n\n//! moment.js locale configuration\n//! locale : Galician [gl]\n//! author : Darío Beiró : https://github.com/quinobravo\nlet monthsShortDot = 'xan._feb._mar._abr._mai._xuñ._xul._ago._set._out._nov._dec.'.split('_'),\n  monthsShort$1 = 'xan_feb_mar_abr_mai_xuñ_xul_ago_set_out_nov_dec'.split('_');\nlet monthsParse$3 = [/^xan/i, /^feb/i, /^mar/i, /^abr/i, /^mai/i, /^xuñ/i, /^xul/i, /^ago/i, /^set/i, /^out/i, /^nov/i, /^dec/i];\nlet monthsRegex$2 = /^(xaneiro|febreiro|marzo|abril|maio|xuño|xullo|agosto|setembro|outubro|novembro|decembro|xan\\.?|feb\\.?|mar\\.?|abr\\.?|mai\\.?|xuñ\\.?|xul\\.?|ago\\.?|set\\.?|out\\.?|nov\\.?|dec\\.?)/i;\nconst glLocale = {\n  abbr: 'gl',\n  months: 'xaneiro_febreiro_marzo_abril_maio_xuño_xullo_agosto_setembro_outubro_novembro_decembro'.split('_'),\n  monthsShort(date, format, isUTC) {\n    if (!date) {\n      return monthsShortDot;\n    }\n    if (/-MMM-/.test(format)) {\n      return monthsShort$1[getMonth(date, isUTC)];\n    }\n    return monthsShortDot[getMonth(date, isUTC)];\n  },\n  monthsRegex: monthsRegex$2,\n  monthsShortRegex: monthsRegex$2,\n  monthsStrictRegex: /^(xaneiro|febreiro|marzo|abril|maio|xuño|xullo|agosto|setembro|outubro|novembro|decembro)/i,\n  monthsShortStrictRegex: /^(xan\\.?|feb\\.?|mar\\.?|abr\\.?|mai\\.?|xuñ\\.?|xul\\.?|ago\\.?|set\\.?|out\\.?|nov\\.?|dec\\.?)/i,\n  monthsParse: monthsParse$3,\n  longMonthsParse: monthsParse$3,\n  shortMonthsParse: monthsParse$3,\n  weekdays: 'domingo_luns_martes_mércores_xoves_venres_sábado'.split('_'),\n  weekdaysShort: 'dom._lun._mar._mér._xov._ven._sáb.'.split('_'),\n  weekdaysMin: 'do_lu_ma_mé_xo_ve_sá'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D [de] MMMM [de] YYYY',\n    LLL: 'D [de] MMMM [de] YYYY H:mm',\n    LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm'\n  },\n  calendar: {\n    sameDay(date) {\n      return '[hoxe á' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n    nextDay(date) {\n      return '[mañan á' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n    nextWeek(date) {\n      return 'dddd [á' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n    lastDay(date) {\n      return '[onte á' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n    lastWeek(date) {\n      return '[o] dddd [pasado á' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'en %s',\n    past: 'fai %s',\n    s: 'uns segundos',\n    ss: '%d segundos',\n    m: 'un minuto',\n    mm: '%d minutos',\n    h: 'unha hora',\n    hh: '%d horas',\n    d: 'un día',\n    dd: '%d días',\n    M: 'un mes',\n    MM: '%d meses',\n    y: 'un ano',\n    yy: '%d anos'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}º/,\n  ordinal: '%dº',\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n  }\n};\n\n//! moment.js locale configuration\n//! locale : Hebrew [he]\n//! author : Tomer Cohen : https://github.com/tomer\n//! author : Moshe Simantov : https://github.com/DevelopmentIL\n//! author : Tal Ater : https://github.com/TalAter\nconst heLocale = {\n  abbr: 'he',\n  months: 'ינואר_פברואר_מרץ_אפריל_מאי_יוני_יולי_אוגוסט_ספטמבר_אוקטובר_נובמבר_דצמבר'.split('_'),\n  monthsShort: 'ינו׳_פבר׳_מרץ_אפר׳_מאי_יוני_יולי_אוג׳_ספט׳_אוק׳_נוב׳_דצמ׳'.split('_'),\n  weekdays: 'ראשון_שני_שלישי_רביעי_חמישי_שישי_שבת'.split('_'),\n  weekdaysShort: 'א׳_ב׳_ג׳_ד׳_ה׳_ו׳_ש׳'.split('_'),\n  weekdaysMin: 'א_ב_ג_ד_ה_ו_ש'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D [ב]MMMM YYYY',\n    LLL: 'D [ב]MMMM YYYY HH:mm',\n    LLLL: 'dddd, D [ב]MMMM YYYY HH:mm',\n    l: 'D/M/YYYY',\n    ll: 'D MMM YYYY',\n    lll: 'D MMM YYYY HH:mm',\n    llll: 'ddd, D MMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[היום ב־]LT',\n    nextDay: '[מחר ב־]LT',\n    nextWeek: 'dddd [בשעה] LT',\n    lastDay: '[אתמול ב־]LT',\n    lastWeek: '[ביום] dddd [האחרון בשעה] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'בעוד %s',\n    past: 'לפני %s',\n    s: 'מספר שניות',\n    ss: '%d שניות',\n    m: 'דקה',\n    mm: '%d דקות',\n    h: 'שעה',\n    hh(num) {\n      if (num === 2) {\n        return 'שעתיים';\n      }\n      return num + ' שעות';\n    },\n    d: 'יום',\n    dd(num) {\n      if (num === 2) {\n        return 'יומיים';\n      }\n      return num + ' ימים';\n    },\n    M: 'חודש',\n    MM(num) {\n      if (num === 2) {\n        return 'חודשיים';\n      }\n      return num + ' חודשים';\n    },\n    y: 'שנה',\n    yy(num) {\n      if (num === 2) {\n        return 'שנתיים';\n      } else if (num % 10 === 0 && num !== 10) {\n        return num + ' שנה';\n      }\n      return num + ' שנים';\n    }\n  },\n  meridiemParse: /אחה\"צ|לפנה\"צ|אחרי הצהריים|לפני הצהריים|לפנות בוקר|בבוקר|בערב/i,\n  isPM(input) {\n    return /^(אחה\"צ|אחרי הצהריים|בערב)$/.test(input);\n  },\n  meridiem(hour, minute, isLower) {\n    if (hour < 5) {\n      return 'לפנות בוקר';\n    } else if (hour < 10) {\n      return 'בבוקר';\n    } else if (hour < 12) {\n      return isLower ? 'לפנה\"צ' : 'לפני הצהריים';\n    } else if (hour < 18) {\n      return isLower ? 'אחה\"צ' : 'אחרי הצהריים';\n    } else {\n      return 'בערב';\n    }\n  }\n};\n\n//! moment.js locale configuration\n//! locale : Hindi [hi]\n//! author : Mayank Singhal : https://github.com/mayanksinghal\nlet symbolMap = {\n    1: '१',\n    2: '२',\n    3: '३',\n    4: '४',\n    5: '५',\n    6: '६',\n    7: '७',\n    8: '८',\n    9: '९',\n    0: '०'\n  },\n  numberMap = {\n    '१': '1',\n    '२': '2',\n    '३': '3',\n    '४': '4',\n    '५': '5',\n    '६': '6',\n    '७': '7',\n    '८': '8',\n    '९': '9',\n    '०': '0'\n  };\nconst hiLocale = {\n  abbr: 'hi',\n  months: 'जनवरी_फ़रवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितम्बर_अक्टूबर_नवम्बर_दिसम्बर'.split('_'),\n  monthsShort: 'जन._फ़र._मार्च_अप्रै._मई_जून_जुल._अग._सित._अक्टू._नव._दिस.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'रविवार_सोमवार_मंगलवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),\n  weekdaysShort: 'रवि_सोम_मंगल_बुध_गुरू_शुक्र_शनि'.split('_'),\n  weekdaysMin: 'र_सो_मं_बु_गु_शु_श'.split('_'),\n  longDateFormat: {\n    LT: 'A h:mm बजे',\n    LTS: 'A h:mm:ss बजे',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY, A h:mm बजे',\n    LLLL: 'dddd, D MMMM YYYY, A h:mm बजे'\n  },\n  calendar: {\n    sameDay: '[आज] LT',\n    nextDay: '[कल] LT',\n    nextWeek: 'dddd, LT',\n    lastDay: '[कल] LT',\n    lastWeek: '[पिछले] dddd, LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: '%s में',\n    past: '%s पहले',\n    s: 'कुछ ही क्षण',\n    ss: '%d सेकंड',\n    m: 'एक मिनट',\n    mm: '%d मिनट',\n    h: 'एक घंटा',\n    hh: '%d घंटे',\n    d: 'एक दिन',\n    dd: '%d दिन',\n    M: 'एक महीने',\n    MM: '%d महीने',\n    y: 'एक वर्ष',\n    yy: '%d वर्ष'\n  },\n  preparse(str) {\n    return str.replace(/[१२३४५६७८९०]/g, function (match) {\n      return numberMap[match];\n    });\n  },\n  postformat(str) {\n    return str.replace(/\\d/g, function (match) {\n      return symbolMap[match];\n    });\n  },\n  // Hindi notation for meridiems are quite fuzzy in practice. While there exists\n  // a rigid notion of a 'Pahar' it is not used as rigidly in modern Hindi.\n  meridiemParse: /रात|सुबह|दोपहर|शाम/,\n  meridiemHour(hour, meridiem) {\n    if (hour === 12) {\n      hour = 0;\n    }\n    if (meridiem === 'रात') {\n      return hour < 4 ? hour : hour + 12;\n    } else if (meridiem === 'सुबह') {\n      return hour;\n    } else if (meridiem === 'दोपहर') {\n      return hour >= 10 ? hour : hour + 12;\n    } else if (meridiem === 'शाम') {\n      return hour + 12;\n    }\n  },\n  meridiem(hour, minute, isLower) {\n    if (hour < 4) {\n      return 'रात';\n    } else if (hour < 10) {\n      return 'सुबह';\n    } else if (hour < 17) {\n      return 'दोपहर';\n    } else if (hour < 20) {\n      return 'शाम';\n    } else {\n      return 'रात';\n    }\n  },\n  week: {\n    dow: 0,\n    // Sunday is the first day of the week.\n    doy: 6 // The week that contains Jan 1st is the first week of the year.\n  }\n};\n\n//! moment.js locale configuration\n//! locale : Hungarian [hu]\n//! author : Adam Brunner : https://github.com/adambrunner\nlet weekEndings = 'vasárnap hétfőn kedden szerdán csütörtökön pénteken szombaton'.split(' ');\nfunction translate$4(num, withoutSuffix, key, isFuture) {\n  switch (key) {\n    case 's':\n      return isFuture || withoutSuffix ? 'néhány másodperc' : 'néhány másodperce';\n    case 'ss':\n      return num + (isFuture || withoutSuffix ? ' másodperc' : ' másodperce');\n    case 'm':\n      return 'egy' + (isFuture || withoutSuffix ? ' perc' : ' perce');\n    case 'mm':\n      return num + (isFuture || withoutSuffix ? ' perc' : ' perce');\n    case 'h':\n      return 'egy' + (isFuture || withoutSuffix ? ' óra' : ' órája');\n    case 'hh':\n      return num + (isFuture || withoutSuffix ? ' óra' : ' órája');\n    case 'd':\n      return 'egy' + (isFuture || withoutSuffix ? ' nap' : ' napja');\n    case 'dd':\n      return num + (isFuture || withoutSuffix ? ' nap' : ' napja');\n    case 'M':\n      return 'egy' + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');\n    case 'MM':\n      return num + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');\n    case 'y':\n      return 'egy' + (isFuture || withoutSuffix ? ' év' : ' éve');\n    case 'yy':\n      return num + (isFuture || withoutSuffix ? ' év' : ' éve');\n  }\n  return '';\n}\nfunction week(date, isFuture) {\n  return (isFuture ? '' : '[múlt] ') + '[' + weekEndings[getDayOfWeek(date)] + '] LT[-kor]';\n}\nconst huLocale = {\n  abbr: 'hu',\n  months: 'január_február_március_április_május_június_július_augusztus_szeptember_október_november_december'.split('_'),\n  monthsShort: 'jan_feb_márc_ápr_máj_jún_júl_aug_szept_okt_nov_dec'.split('_'),\n  weekdays: 'vasárnap_hétfő_kedd_szerda_csütörtök_péntek_szombat'.split('_'),\n  weekdaysShort: 'vas_hét_kedd_sze_csüt_pén_szo'.split('_'),\n  weekdaysMin: 'v_h_k_sze_cs_p_szo'.split('_'),\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'YYYY.MM.DD.',\n    LL: 'YYYY. MMMM D.',\n    LLL: 'YYYY. MMMM D. H:mm',\n    LLLL: 'YYYY. MMMM D., dddd H:mm'\n  },\n  meridiemParse: /de|du/i,\n  isPM(input) {\n    return input.charAt(1).toLowerCase() === 'u';\n  },\n  meridiem(hours, minutes, isLower) {\n    if (hours < 12) {\n      return isLower === true ? 'de' : 'DE';\n    } else {\n      return isLower === true ? 'du' : 'DU';\n    }\n  },\n  calendar: {\n    sameDay: '[ma] LT[-kor]',\n    nextDay: '[holnap] LT[-kor]',\n    nextWeek(date) {\n      return week(date, true);\n    },\n    lastDay: '[tegnap] LT[-kor]',\n    lastWeek(date) {\n      return week(date, false);\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: '%s múlva',\n    past: '%s',\n    s: translate$4,\n    ss: translate$4,\n    m: translate$4,\n    mm: translate$4,\n    h: translate$4,\n    hh: translate$4,\n    d: translate$4,\n    dd: translate$4,\n    M: translate$4,\n    MM: translate$4,\n    y: translate$4,\n    yy: translate$4\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n  }\n};\n\n//! moment.js locale configuration\n//! locale : Croatian [hr]\n//! author : Danijel Grmec : https://github.com/cobaltsis\nconst hrLocale = {\n  abbr: 'hr',\n  months: 'Siječanj_Veljača_Ožujak_Travanj_Svibanj_Lipanj_Srpanj_Kolovoz_Rujan_Listopad_Studeni_Prosinac'.split('_'),\n  monthsShort: 'Sij_Velj_Ožu_Tra_Svi_Lip_Srp_Kol_Ruj_Lis_Stu_Pro'.split('_'),\n  weekdays: 'Nedjelja_Ponedjeljak_Utorak_Srijeda_Četvrtak_Petak_Subota'.split('_'),\n  weekdaysShort: 'Ned_Pon_Uto_Sri_Čet_Pet_Sub'.split('_'),\n  weekdaysMin: 'Ne_Po_Ut_Sr_Če_Pe_Su'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd, D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[Danas u] LT',\n    nextDay: '[Sutra u] LT',\n    nextWeek: 'dddd [u] LT',\n    lastDay: '[Jučer u] LT',\n    lastWeek: '[Zadnji] dddd [u] LT',\n    sameElse: 'L'\n  },\n  invalidDate: 'Neispravan datum',\n  relativeTime: {\n    future: 'za %s',\n    past: '%s prije',\n    s: 'nekoliko sekundi',\n    ss: '%d sekundi',\n    m: 'minuta',\n    mm: '%d minuta',\n    h: 'sat',\n    hh: '%d sati',\n    d: 'dan',\n    dd: '%d dana',\n    M: 'mjesec',\n    MM: '%d mjeseci',\n    y: 'godina',\n    yy: '%d godina'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n  ordinal(_num) {\n    const num = Number(_num);\n    const b = num % 10,\n      output = ~~(num % 100 / 10) === 1 ? '.' : b === 1 ? '.' : b === 2 ? '.' : b === 3 ? '.' : '.';\n    return num + output;\n  },\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n  }\n};\n\n//! moment.js locale configuration\n//! locale : Indonesia [id]\n//! author : Romy Kusuma : https://github.com/rkusuma\n//! reference: https://github.com/moment/moment/blob/develop/locale/id.js\nconst idLocale = {\n  abbr: 'id',\n  months: 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember'.split('_'),\n  monthsShort: 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nov_Des'.split('_'),\n  weekdays: 'Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu'.split('_'),\n  weekdaysShort: 'Min_Sen_Sel_Rab_Kam_Jum_Sab'.split('_'),\n  weekdaysMin: 'Mg_Sn_Sl_Rb_Km_Jm_Sb'.split('_'),\n  longDateFormat: {\n    LT: 'HH.mm',\n    LTS: 'HH.mm.ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY [pukul] HH.mm',\n    LLLL: 'dddd, D MMMM YYYY [pukul] HH.mm'\n  },\n  meridiemParse: /pagi|siang|sore|malam/,\n  meridiemHour(hour, meridiem) {\n    if (hour === 12) {\n      hour = 0;\n    }\n    if (meridiem === 'pagi') {\n      return hour;\n    } else if (meridiem === 'siang') {\n      return hour >= 11 ? hour : hour + 12;\n    } else if (meridiem === 'sore' || meridiem === 'malam') {\n      return hour + 12;\n    }\n  },\n  meridiem(hours, minutes, isLower) {\n    if (hours < 11) {\n      return 'pagi';\n    } else if (hours < 15) {\n      return 'siang';\n    } else if (hours < 19) {\n      return 'sore';\n    } else {\n      return 'malam';\n    }\n  },\n  calendar: {\n    sameDay: '[Hari ini pukul] LT',\n    nextDay: '[Besok pukul] LT',\n    nextWeek: 'dddd [pukul] LT',\n    lastDay: '[Kemarin pukul] LT',\n    lastWeek: 'dddd [lalu pukul] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'dalam %s',\n    past: '%s yang lalu',\n    s: 'beberapa detik',\n    ss: '%d detik',\n    m: 'semenit',\n    mm: '%d menit',\n    h: 'sejam',\n    hh: '%d jam',\n    d: 'sehari',\n    dd: '%d hari',\n    M: 'sebulan',\n    MM: '%d bulan',\n    y: 'setahun',\n    yy: '%d tahun'\n  },\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 7 // The week that contains Jan 1st is the first week of the year.\n  }\n};\n\n//! moment.js locale configuration\n//! locale : Italian [it]\n//! author : Lorenzo : https://github.com/aliem\n//! author: Mattia Larentis: https://github.com/nostalgiaz\nconst itLocale = {\n  abbr: 'it',\n  months: 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split('_'),\n  monthsShort: 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),\n  weekdays: 'domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato'.split('_'),\n  weekdaysShort: 'dom_lun_mar_mer_gio_ven_sab'.split('_'),\n  weekdaysMin: 'do_lu_ma_me_gi_ve_sa'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[Oggi alle] LT',\n    nextDay: '[Domani alle] LT',\n    nextWeek: 'dddd [alle] LT',\n    lastDay: '[Ieri alle] LT',\n    lastWeek(date) {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[la scorsa] dddd [alle] LT';\n        default:\n          return '[lo scorso] dddd [alle] LT';\n      }\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future(num) {\n      return (/^[0-9].+$/.test(num.toString(10)) ? 'tra' : 'in') + ' ' + num;\n    },\n    past: '%s fa',\n    s: 'alcuni secondi',\n    ss: '%d secondi',\n    m: 'un minuto',\n    mm: '%d minuti',\n    h: 'un\\'ora',\n    hh: '%d ore',\n    d: 'un giorno',\n    dd: '%d giorni',\n    M: 'un mese',\n    MM: '%d mesi',\n    y: 'un anno',\n    yy: '%d anni'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}º/,\n  ordinal: '%dº',\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n  }\n};\n\n//! moment.js locale configuration\n//! locale : Japanese [ja]\n//! author : LI Long : https://github.com/baryon\nconst jaLocale = {\n  abbr: 'ja',\n  months: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n  monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n  weekdays: '日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日'.split('_'),\n  weekdaysShort: '日_月_火_水_木_金_土'.split('_'),\n  weekdaysMin: '日_月_火_水_木_金_土'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'YYYY/MM/DD',\n    LL: 'YYYY年M月D日',\n    LLL: 'YYYY年M月D日 HH:mm',\n    LLLL: 'YYYY年M月D日 HH:mm dddd',\n    l: 'YYYY/MM/DD',\n    ll: 'YYYY年M月D日',\n    lll: 'YYYY年M月D日 HH:mm',\n    llll: 'YYYY年M月D日 HH:mm dddd'\n  },\n  meridiemParse: /午前|午後/i,\n  isPM(input) {\n    return input === '午後';\n  },\n  meridiem(hour, minute, isLower) {\n    if (hour < 12) {\n      return '午前';\n    } else {\n      return '午後';\n    }\n  },\n  calendar: {\n    sameDay: '[今日] LT',\n    nextDay: '[明日] LT',\n    nextWeek: '[来週]dddd LT',\n    lastDay: '[昨日] LT',\n    lastWeek: '[前週]dddd LT',\n    sameElse: 'L'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}日/,\n  ordinal(num, period) {\n    switch (period) {\n      case 'd':\n      case 'D':\n      case 'DDD':\n        return num + '日';\n      default:\n        return num.toString(10);\n    }\n  },\n  relativeTime: {\n    future: '%s後',\n    past: '%s前',\n    s: '数秒',\n    ss: '%d秒',\n    m: '1分',\n    mm: '%d分',\n    h: '1時間',\n    hh: '%d時間',\n    d: '1日',\n    dd: '%d日',\n    M: '1ヶ月',\n    MM: '%dヶ月',\n    y: '1年',\n    yy: '%d年'\n  }\n};\n\n//! moment.js locale configuration\n//! locale : Georgian [ka]\n//! author : Irakli Janiashvili : https://github.com/irakli-janiashvili\n//! author : Levan Tskipuri : https://github.com/tskipa\nconst kaLocale = {\n  abbr: 'ka',\n  months: {\n    format: 'იანვარს_თებერვალს_მარტს_აპრილის_მაისს_ივნისს_ივლისს_აგვისტს_სექტემბერს_ოქტომბერს_ნოემბერს_დეკემბერს'.split('_'),\n    standalone: 'იანვარი_თებერვალი_მარტი_აპრილი_მაისი_ივნისი_ივლისი_აგვისტო_სექტემბერი_ოქტომბერი_ნოემბერი_დეკემბერი'.split('_')\n  },\n  monthsShort: 'იან_თებ_მარ_აპრ_მაი_ივნ_ივლ_აგვ_სექ_ოქტ_ნოე_დეკ'.split('_'),\n  weekdays: {\n    standalone: 'კვირა_ორშაბათი_სამშაბათი_ოთხშაბათი_ხუთშაბათი_პარასკევი_შაბათი'.split('_'),\n    format: 'კვირას_ორშაბათს_სამშაბათს_ოთხშაბათს_ხუთშაბათს_პარასკევს_შაბათს'.split('_'),\n    isFormat: /(წინა|შემდეგ)/\n  },\n  weekdaysShort: 'კვი_ორშ_სამ_ოთხ_ხუთ_პარ_შაბ'.split('_'),\n  weekdaysMin: 'კვ_ორ_სა_ოთ_ხუ_პა_შა'.split('_'),\n  longDateFormat: {\n    LT: 'h:mm A',\n    LTS: 'h:mm:ss A',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY h:mm A',\n    LLLL: 'dddd, D MMMM YYYY h:mm A'\n  },\n  calendar: {\n    sameDay: '[დღეს] LT[-ზე]',\n    nextDay: '[ხვალ] LT[-ზე]',\n    lastDay: '[გუშინ] LT[-ზე]',\n    nextWeek: '[შემდეგ] dddd LT[-ზე]',\n    lastWeek: '[წინა] dddd LT-ზე',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future(s) {\n      var st = s.toString();\n      return /(წამი|წუთი|საათი|წელი)/.test(st) ? st.replace(/ი$/, 'ში') : st + 'ში';\n    },\n    past(s) {\n      var st = s.toString();\n      if (/(წამი|წუთი|საათი|დღე|თვე)/.test(st)) {\n        return st.replace(/(ი|ე)$/, 'ის წინ');\n      }\n      if (/წელი/.test(st)) {\n        return st.replace(/წელი$/, 'წლის წინ');\n      }\n    },\n    s: 'რამდენიმე წამი',\n    ss: '%d წამი',\n    m: 'წუთი',\n    mm: '%d წუთი',\n    h: 'საათი',\n    hh: '%d საათი',\n    d: 'დღე',\n    dd: '%d დღე',\n    M: 'თვე',\n    MM: '%d თვე',\n    y: 'წელი',\n    yy: '%d წელი'\n  },\n  dayOfMonthOrdinalParse: /0|1-ლი|მე-\\d{1,2}|\\d{1,2}-ე/,\n  ordinal(_num, _period) {\n    const num = Number(_num);\n    if (num === 0) {\n      return num.toString();\n    }\n    if (num === 1) {\n      return num + '-ლი';\n    }\n    if (num < 20 || num <= 100 && num % 20 === 0 || num % 100 === 0) {\n      return 'მე-' + num;\n    }\n    return num + '-ე';\n  },\n  week: {\n    dow: 1,\n    doy: 4\n  }\n};\n\n// ! moment.js locale configuration\n// ! locale : Kazakh [kk]\n// ! authors : Nurlan Rakhimzhanov : https://github.com/nurlan\nconst suffixes$1 = {\n  0: '-ші',\n  1: '-ші',\n  2: '-ші',\n  3: '-ші',\n  4: '-ші',\n  5: '-ші',\n  6: '-шы',\n  7: '-ші',\n  8: '-ші',\n  9: '-шы',\n  10: '-шы',\n  20: '-шы',\n  30: '-шы',\n  40: '-шы',\n  50: '-ші',\n  60: '-шы',\n  70: '-ші',\n  80: '-ші',\n  90: '-шы',\n  100: '-ші'\n};\nconst kkLocale = {\n  abbr: 'kk',\n  months: 'қаңтар_ақпан_наурыз_сәуір_мамыр_маусым_шілде_тамыз_қыркүйек_қазан_қараша_желтоқсан'.split('_'),\n  monthsShort: 'қаң_ақп_нау_сәу_мам_мау_шіл_там_қыр_қаз_қар_жел'.split('_'),\n  weekdays: 'жексенбі_дүйсенбі_сейсенбі_сәрсенбі_бейсенбі_жұма_сенбі'.split('_'),\n  weekdaysShort: 'жек_дүй_сей_сәр_бей_жұм_сен'.split('_'),\n  weekdaysMin: 'жк_дй_сй_ср_бй_жм_сн'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd, D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[Бүгін сағат] LT',\n    nextDay: '[Ертең сағат] LT',\n    nextWeek: 'dddd [сағат] LT',\n    lastDay: '[Кеше сағат] LT',\n    lastWeek: '[Өткен аптаның] dddd [сағат] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: '%s ішінде',\n    past: '%s бұрын',\n    s: 'бірнеше секунд',\n    ss: '%d секунд',\n    m: 'бір минут',\n    mm: '%d минут',\n    h: 'бір сағат',\n    hh: '%d сағат',\n    d: 'бір күн',\n    dd: '%d күн',\n    M: 'бір ай',\n    MM: '%d ай',\n    y: 'бір жыл',\n    yy: '%d жыл'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}-(ші|шы)/,\n  ordinal(_num) {\n    const a = _num % 10;\n    const b = _num >= 100 ? 100 : null;\n    return _num + (suffixes$1[_num] || suffixes$1[a] || suffixes$1[b]);\n  },\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 7 // The week that contains Jan 7th is the first week of the year.\n  }\n};\n\n//! moment.js locale configuration\n//! locale : Korean [ko]\n//! author : Kyungwook, Park : https://github.com/kyungw00k\n//! author : Jeeeyul Lee <jeeeyul@gmail.com>\nconst koLocale = {\n  abbr: 'ko',\n  months: '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),\n  monthsShort: '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),\n  weekdays: '일요일_월요일_화요일_수요일_목요일_금요일_토요일'.split('_'),\n  weekdaysShort: '일_월_화_수_목_금_토'.split('_'),\n  weekdaysMin: '일_월_화_수_목_금_토'.split('_'),\n  longDateFormat: {\n    LT: 'A h:mm',\n    LTS: 'A h:mm:ss',\n    L: 'YYYY.MM.DD',\n    LL: 'YYYY년 MMMM D일',\n    LLL: 'YYYY년 MMMM D일 A h:mm',\n    LLLL: 'YYYY년 MMMM D일 dddd A h:mm',\n    l: 'YYYY.MM.DD',\n    ll: 'YYYY년 MMMM D일',\n    lll: 'YYYY년 MMMM D일 A h:mm',\n    llll: 'YYYY년 MMMM D일 dddd A h:mm'\n  },\n  calendar: {\n    sameDay: '오늘 LT',\n    nextDay: '내일 LT',\n    nextWeek: 'dddd LT',\n    lastDay: '어제 LT',\n    lastWeek: '지난주 dddd LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: '%s 후',\n    past: '%s 전',\n    s: '몇 초',\n    ss: '%d초',\n    m: '1분',\n    mm: '%d분',\n    h: '한 시간',\n    hh: '%d시간',\n    d: '하루',\n    dd: '%d일',\n    M: '한 달',\n    MM: '%d달',\n    y: '일 년',\n    yy: '%d년'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(일|월|주)/,\n  ordinal: function (num, period) {\n    switch (period) {\n      case 'd':\n      case 'D':\n      case 'DDD':\n        return num + '일';\n      case 'M':\n        return num + '월';\n      case 'w':\n      case 'W':\n        return num + '주';\n      default:\n        return num.toString(10);\n    }\n  },\n  meridiemParse: /오전|오후/,\n  isPM: function (token) {\n    return token === '오후';\n  },\n  meridiem: function (hour, minute, isUpper) {\n    return hour < 12 ? '오전' : '오후';\n  }\n};\n\n//! moment.js locale configuration\n//! locale : Lithuanian [lt]\n//! author : Stanislavas Guk : https://github.com/ixoster\nconst units = {\n  ss: 'sekundė_sekundžių_sekundes',\n  m: 'minutė_minutės_minutę',\n  mm: 'minutės_minučių_minutes',\n  h: 'valanda_valandos_valandą',\n  hh: 'valandos_valandų_valandas',\n  d: 'diena_dienos_dieną',\n  dd: 'dienos_dienų_dienas',\n  M: 'mėnuo_mėnesio_mėnesį',\n  MM: 'mėnesiai_mėnesių_mėnesius',\n  y: 'metai_metų_metus',\n  yy: 'metai_metų_metus'\n};\nfunction translateSeconds(num, withoutSuffix, key, isFuture) {\n  if (withoutSuffix) {\n    return 'kelios sekundės';\n  } else {\n    return isFuture ? 'kelių sekundžių' : 'kelias sekundes';\n  }\n}\nfunction translateSingular(num, withoutSuffix, key, isFuture) {\n  return withoutSuffix ? forms(key)[0] : isFuture ? forms(key)[1] : forms(key)[2];\n}\nfunction special(num) {\n  return num % 10 === 0 || num > 10 && num < 20;\n}\nfunction forms(key) {\n  return units[key].split('_');\n}\nfunction translate$3(num, withoutSuffix, key, isFuture) {\n  let result = num + ' ';\n  if (num === 1) {\n    return result + translateSingular(num, withoutSuffix, key[0], isFuture);\n  } else if (withoutSuffix) {\n    return result + (special(num) ? forms(key)[1] : forms(key)[0]);\n  } else {\n    if (isFuture) {\n      return result + forms(key)[1];\n    } else {\n      return result + (special(num) ? forms(key)[1] : forms(key)[2]);\n    }\n  }\n}\nconst ltLocale = {\n  abbr: 'lt',\n  months: {\n    format: 'sausio_vasario_kovo_balandžio_gegužės_birželio_liepos_rugpjūčio_rugsėjo_spalio_lapkričio_gruodžio'.split('_'),\n    standalone: 'sausis_vasaris_kovas_balandis_gegužė_birželis_liepa_rugpjūtis_rugsėjis_spalis_lapkritis_gruodis'.split('_'),\n    isFormat: /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?|MMMM?(\\[[^\\[\\]]*\\]|\\s)+D[oD]?/\n  },\n  monthsShort: 'sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd'.split('_'),\n  weekdays: {\n    format: 'sekmadienį_pirmadienį_antradienį_trečiadienį_ketvirtadienį_penktadienį_šeštadienį'.split('_'),\n    standalone: 'sekmadienis_pirmadienis_antradienis_trečiadienis_ketvirtadienis_penktadienis_šeštadienis'.split('_'),\n    isFormat: /dddd HH:mm/\n  },\n  weekdaysShort: 'Sek_Pir_Ant_Tre_Ket_Pen_Šeš'.split('_'),\n  weekdaysMin: 'S_P_A_T_K_Pn_Š'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'YYYY-MM-DD',\n    LL: 'YYYY [m.] MMMM D [d.]',\n    LLL: 'YYYY [m.] MMMM D [d.], HH:mm [val.]',\n    LLLL: 'YYYY [m.] MMMM D [d.], dddd, HH:mm [val.]',\n    l: 'YYYY-MM-DD',\n    ll: 'YYYY [m.] MMMM D [d.]',\n    lll: 'YYYY [m.] MMMM D [d.], HH:mm [val.]',\n    llll: 'YYYY [m.] MMMM D [d.], ddd, HH:mm [val.]'\n  },\n  calendar: {\n    sameDay: '[Šiandien] LT',\n    nextDay: '[Rytoj] LT',\n    nextWeek: 'dddd LT',\n    lastDay: '[Vakar] LT',\n    lastWeek: '[Praėjusį] dddd LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'po %s',\n    past: 'prieš %s',\n    s: translateSeconds,\n    ss: translate$3,\n    m: translateSingular,\n    mm: translate$3,\n    h: translateSingular,\n    hh: translate$3,\n    d: translateSingular,\n    dd: translate$3,\n    M: translateSingular,\n    MM: translate$3,\n    y: translateSingular,\n    yy: translate$3\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}-oji/,\n  ordinal(num) {\n    return num + '-oji';\n  },\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n  }\n};\n\n//! moment.js locale configuration\n//! locale : Latvian [lv]\n//! author : Matiss Janis Aboltins : https://github.com/matissjanis\nconst lvLocale = {\n  abbr: 'lv',\n  months: 'Janvāris_Februāris_Marts_Aprīlis_Maijs_Jūnijs_Jūlijs_Augusts_Septembris_Oktobris_Novembris_Decembris'.split('_'),\n  monthsShort: 'Jan_Feb_Mar_Apr_Mai_Jūn_Jūl_Aug_Sep_Okt_Nov_Dec'.split('_'),\n  weekdays: 'Svētdiena_Pirmdiena_Otrdiena_Trešdiena_Ceturtdiena_Piektdiena_Sestdiena'.split('_'),\n  weekdaysShort: 'Svētd_Pirmd_Otrd_Trešd_Ceturtd_Piektd_Sestd'.split('_'),\n  weekdaysMin: 'Sv_Pi_Ot_Tr_Ce_Pk_Se'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd, D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[Today at] LT',\n    nextDay: '[Tomorrow at] LT',\n    nextWeek: 'dddd [at] LT',\n    lastDay: '[Yesterday at] LT',\n    lastWeek: '[Last] dddd [at] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'pēc %s',\n    past: 'pirms %s',\n    s: 'dažām sekundēm',\n    ss: '%d sekundēm',\n    m: 'minūtes',\n    mm: '%d minūtēm',\n    h: 'stundas',\n    hh: '%d stundām',\n    d: 'dienas',\n    dd: '%d dienām',\n    M: 'mēneša',\n    MM: '%d mēnešiem',\n    y: 'gada',\n    yy: '%d gadiem'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal(num) {\n    return num + '.';\n  },\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n  }\n};\n\n//! moment.js locale configuration\n//! locale : Mongolian [mn]\n//! author : Javkhlantugs Nyamdorj : https://github.com/javkhaanj7\nfunction translate$2(num, withoutSuffix, key, isFuture) {\n  switch (key) {\n    case 's':\n      return withoutSuffix ? 'хэдхэн секунд' : 'хэдхэн секундын';\n    case 'ss':\n      return num + (withoutSuffix ? ' секунд' : ' секундын');\n    case 'm':\n    case 'mm':\n      return num + (withoutSuffix ? ' минут' : ' минутын');\n    case 'h':\n    case 'hh':\n      return num + (withoutSuffix ? ' цаг' : ' цагийн');\n    case 'd':\n    case 'dd':\n      return num + (withoutSuffix ? ' өдөр' : ' өдрийн');\n    case 'M':\n    case 'MM':\n      return num + (withoutSuffix ? ' сар' : ' сарын');\n    case 'y':\n    case 'yy':\n      return num + (withoutSuffix ? ' жил' : ' жилийн');\n    default:\n      return num.toString(10);\n  }\n}\nconst mnLocale = {\n  abbr: 'mn',\n  months: 'Нэгдүгээр сар_Хоёрдугаар сар_Гуравдугаар сар_Дөрөвдүгээр сар_Тавдугаар сар_Зургадугаар сар_Долдугаар сар_Наймдугаар сар_Есдүгээр сар_Аравдугаар сар_Арван нэгдүгээр сар_Арван хоёрдугаар сар'.split('_'),\n  monthsShort: '1 сар_2 сар_3 сар_4 сар_5 сар_6 сар_7 сар_8 сар_9 сар_10 сар_11 сар_12 сар'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'Ням_Даваа_Мягмар_Лхагва_Пүрэв_Баасан_Бямба'.split('_'),\n  weekdaysShort: 'Ням_Дав_Мяг_Лха_Пүр_Баа_Бям'.split('_'),\n  weekdaysMin: 'Ня_Да_Мя_Лх_Пү_Ба_Бя'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'YYYY-MM-DD',\n    LL: 'YYYY оны MMMMын D',\n    LLL: 'YYYY оны MMMMын D HH:mm',\n    LLLL: 'dddd, YYYY оны MMMMын D HH:mm'\n  },\n  meridiemParse: /ҮӨ|ҮХ/i,\n  isPM: function (input) {\n    return input === 'ҮХ';\n  },\n  meridiem: function (hour, minute, isLower) {\n    if (hour < 12) {\n      return 'ҮӨ';\n    } else {\n      return 'ҮХ';\n    }\n  },\n  calendar: {\n    sameDay: '[Өнөөдөр] LT',\n    nextDay: '[Маргааш] LT',\n    nextWeek: '[Ирэх] dddd LT',\n    lastDay: '[Өчигдөр] LT',\n    lastWeek: '[Өнгөрсөн] dddd LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: '%s дараа',\n    past: '%s өмнө',\n    s: translate$2,\n    ss: translate$2,\n    m: translate$2,\n    mm: translate$2,\n    h: translate$2,\n    hh: translate$2,\n    d: translate$2,\n    dd: translate$2,\n    M: translate$2,\n    MM: translate$2,\n    y: translate$2,\n    yy: translate$2\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2} өдөр/,\n  ordinal: function (num, period) {\n    switch (period) {\n      case 'd':\n      case 'D':\n      case 'DDD':\n        return num + ' өдөр';\n      default:\n        return num.toString(10);\n    }\n  }\n};\n\n//! moment.js locale configuration\n//! locale : Norwegian Bokmål [nb]\n//! authors : Espen Hovlandsdal : https://github.com/rexxars\n//!           Sigurd Gartmann : https://github.com/sigurdga\nconst nbLocale = {\n  abbr: 'nb',\n  months: 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),\n  monthsShort: 'jan._feb._mars_april_mai_juni_juli_aug._sep._okt._nov._des.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),\n  weekdaysShort: 'sø._ma._ti._on._to._fr._lø.'.split('_'),\n  weekdaysMin: 'sø_ma_ti_on_to_fr_lø'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D. MMMM YYYY',\n    LLL: 'D. MMMM YYYY [kl.] HH:mm',\n    LLLL: 'dddd D. MMMM YYYY [kl.] HH:mm'\n  },\n  calendar: {\n    sameDay: '[i dag kl.] LT',\n    nextDay: '[i morgen kl.] LT',\n    nextWeek: 'dddd [kl.] LT',\n    lastDay: '[i går kl.] LT',\n    lastWeek: '[forrige] dddd [kl.] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'om %s',\n    past: '%s siden',\n    s: 'noen sekunder',\n    ss: '%d sekunder',\n    m: 'ett minutt',\n    mm: '%d minutter',\n    h: 'en time',\n    hh: '%d timer',\n    d: 'en dag',\n    dd: '%d dager',\n    M: 'en måned',\n    MM: '%d måneder',\n    y: 'ett år',\n    yy: '%d år'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n  }\n};\n\n//! moment.js locale configuration\n//! locale : Dutch (Belgium) [nl-be]\n//! author : Joris Röling : https://github.com/jorisroling\n//! author : Jacob Middag : https://github.com/middagj\nlet monthsShortWithDots$1 = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_');\nlet monthsShortWithoutDots$1 = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');\nlet monthsParse$2 = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i];\nlet monthsRegex$1 = /^(januari|februari|maart|april|mei|april|ju[nl]i|augustus|september|oktober|november|december|jan\\.?|feb\\.?|mrt\\.?|apr\\.?|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i;\nconst nlBeLocale = {\n  abbr: 'nl-be',\n  months: 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),\n  monthsShort(date, format, isUTC) {\n    if (!date) {\n      return monthsShortWithDots$1;\n    } else if (/-MMM-/.test(format)) {\n      return monthsShortWithoutDots$1[getMonth(date, isUTC)];\n    } else {\n      return monthsShortWithDots$1[getMonth(date, isUTC)];\n    }\n  },\n  monthsRegex: monthsRegex$1,\n  monthsShortRegex: monthsRegex$1,\n  monthsStrictRegex: /^(januari|februari|maart|mei|ju[nl]i|april|augustus|september|oktober|november|december)/i,\n  monthsShortStrictRegex: /^(jan\\.?|feb\\.?|mrt\\.?|apr\\.?|mei|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i,\n  monthsParse: monthsParse$2,\n  longMonthsParse: monthsParse$2,\n  shortMonthsParse: monthsParse$2,\n  weekdays: 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),\n  weekdaysShort: 'zo._ma._di._wo._do._vr._za.'.split('_'),\n  weekdaysMin: 'zo_ma_di_wo_do_vr_za'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[vandaag om] LT',\n    nextDay: '[morgen om] LT',\n    nextWeek: 'dddd [om] LT',\n    lastDay: '[gisteren om] LT',\n    lastWeek: '[afgelopen] dddd [om] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'over %s',\n    past: '%s geleden',\n    s: 'een paar seconden',\n    ss: '%d seconden',\n    m: 'één minuut',\n    mm: '%d minuten',\n    h: 'één uur',\n    hh: '%d uur',\n    d: 'één dag',\n    dd: '%d dagen',\n    M: 'één maand',\n    MM: '%d maanden',\n    y: 'één jaar',\n    yy: '%d jaar'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(ste|de)/,\n  ordinal(_num) {\n    const num = Number(_num);\n    return num + (num === 1 || num === 8 || num >= 20 ? 'ste' : 'de');\n  },\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n  }\n};\n\n//! moment.js locale configuration\n//! locale : Dutch [nl]\n//! author : Joris Röling : https://github.com/jorisroling\n//! author : Jacob Middag : https://github.com/middagj\nlet monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_'),\n  monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');\nlet monthsParse$1 = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i];\nlet monthsRegex = /^(januari|februari|maart|april|mei|april|ju[nl]i|augustus|september|oktober|november|december|jan\\.?|feb\\.?|mrt\\.?|apr\\.?|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i;\nconst nlLocale = {\n  abbr: 'nl',\n  months: 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),\n  monthsShort(date, format, isUTC) {\n    if (!date) {\n      return monthsShortWithDots;\n    } else if (/-MMM-/.test(format)) {\n      return monthsShortWithoutDots[getMonth(date, isUTC)];\n    } else {\n      return monthsShortWithDots[getMonth(date, isUTC)];\n    }\n  },\n  monthsRegex,\n  monthsShortRegex: monthsRegex,\n  monthsStrictRegex: /^(januari|februari|maart|mei|ju[nl]i|april|augustus|september|oktober|november|december)/i,\n  monthsShortStrictRegex: /^(jan\\.?|feb\\.?|mrt\\.?|apr\\.?|mei|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i,\n  monthsParse: monthsParse$1,\n  longMonthsParse: monthsParse$1,\n  shortMonthsParse: monthsParse$1,\n  weekdays: 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),\n  weekdaysShort: 'zo._ma._di._wo._do._vr._za.'.split('_'),\n  weekdaysMin: 'zo_ma_di_wo_do_vr_za'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD-MM-YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[vandaag om] LT',\n    nextDay: '[morgen om] LT',\n    nextWeek: 'dddd [om] LT',\n    lastDay: '[gisteren om] LT',\n    lastWeek: '[afgelopen] dddd [om] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'over %s',\n    past: '%s geleden',\n    s: 'een paar seconden',\n    ss: '%d seconden',\n    m: 'één minuut',\n    mm: '%d minuten',\n    h: 'één uur',\n    hh: '%d uur',\n    d: 'één dag',\n    dd: '%d dagen',\n    M: 'één maand',\n    MM: '%d maanden',\n    y: 'één jaar',\n    yy: '%d jaar'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(ste|de)/,\n  ordinal(_num) {\n    const num = Number(_num);\n    return num + (num === 1 || num === 8 || num >= 20 ? 'ste' : 'de');\n  },\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n  }\n};\n\n//! moment.js locale configuration\n//! locale : Polish [pl]\n//! author : Rafal Hirsz : https://github.com/evoL\nlet monthsNominative = 'styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień'.split('_');\nlet monthsSubjective = 'stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia'.split('_');\nfunction plural$3(num) {\n  return num % 10 < 5 && num % 10 > 1 && ~~(num / 10) % 10 !== 1;\n}\nfunction translate$1(num, withoutSuffix, key) {\n  let result = num + ' ';\n  switch (key) {\n    case 'ss':\n      return result + (plural$3(num) ? 'sekundy' : 'sekund');\n    case 'm':\n      return withoutSuffix ? 'minuta' : 'minutę';\n    case 'mm':\n      return result + (plural$3(num) ? 'minuty' : 'minut');\n    case 'h':\n      return withoutSuffix ? 'godzina' : 'godzinę';\n    case 'hh':\n      return result + (plural$3(num) ? 'godziny' : 'godzin');\n    case 'MM':\n      return result + (plural$3(num) ? 'miesiące' : 'miesięcy');\n    case 'yy':\n      return result + (plural$3(num) ? 'lata' : 'lat');\n  }\n}\nconst plLocale = {\n  abbr: 'pl',\n  months(date, format, isUTC) {\n    if (!date) {\n      return monthsNominative;\n    } else if (format === '') {\n      // Hack: if format empty we know this is used to generate\n      // RegExp by moment. Give then back both valid forms of months\n      // in RegExp ready format.\n      return '(' + monthsSubjective[getMonth(date, isUTC)] + '|' + monthsNominative[getMonth(date, isUTC)] + ')';\n    } else if (/D MMMM/.test(format)) {\n      return monthsSubjective[getMonth(date, isUTC)];\n    } else {\n      return monthsNominative[getMonth(date, isUTC)];\n    }\n  },\n  monthsShort: 'sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru'.split('_'),\n  weekdays: 'niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota'.split('_'),\n  weekdaysShort: 'ndz_pon_wt_śr_czw_pt_sob'.split('_'),\n  weekdaysMin: 'Nd_Pn_Wt_Śr_Cz_Pt_So'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd, D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[Dziś o] LT',\n    nextDay: '[Jutro o] LT',\n    nextWeek(date) {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[W niedzielę o] LT';\n        case 2:\n          return '[We wtorek o] LT';\n        case 3:\n          return '[W środę o] LT';\n        case 5:\n          return '[W piątek o] LT';\n        case 6:\n          return '[W sobotę o] LT';\n        default:\n          return '[W] dddd [o] LT';\n      }\n    },\n    lastDay: '[Wczoraj o] LT',\n    lastWeek(date) {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[W zeszłą niedzielę o] LT';\n        case 3:\n          return '[W zeszłą środę o] LT';\n        case 4:\n          return '[W zeszłą czwartek o] LT';\n        case 5:\n          return '[W zeszłą piątek o] LT';\n        case 6:\n          return '[W zeszłą sobotę o] LT';\n        default:\n          return '[W zeszły] dddd [o] LT';\n      }\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'za %s',\n    past: '%s temu',\n    s: 'kilka sekund',\n    ss: translate$1,\n    m: translate$1,\n    mm: translate$1,\n    h: translate$1,\n    hh: translate$1,\n    d: '1 dzień',\n    dd: '%d dni',\n    M: 'miesiąc',\n    MM: translate$1,\n    y: 'rok',\n    yy: translate$1\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n  }\n};\n\n//! moment.js locale configuration\n//! locale : Portuguese (Brazil) [pt-br]\n//! author : Caio Ribeiro Pereira : https://github.com/caio-ribeiro-pereira\nconst ptBrLocale = {\n  abbr: 'pt-br',\n  months: 'Janeiro_Fevereiro_Março_Abril_Maio_Junho_Julho_Agosto_Setembro_Outubro_Novembro_Dezembro'.split('_'),\n  monthsShort: 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split('_'),\n  weekdays: 'Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado'.split('_'),\n  weekdaysShort: 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),\n  weekdaysMin: 'Do_2ª_3ª_4ª_5ª_6ª_Sá'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D [de] MMMM [de] YYYY',\n    LLL: 'D [de] MMMM [de] YYYY [às] HH:mm',\n    LLLL: 'dddd, D [de] MMMM [de] YYYY [às] HH:mm'\n  },\n  calendar: {\n    sameDay: '[Hoje às] LT',\n    nextDay: '[Amanhã às] LT',\n    nextWeek: 'dddd [às] LT',\n    lastDay: '[Ontem às] LT',\n    lastWeek(date) {\n      return getDayOfWeek(date) === 0 || getDayOfWeek(date) === 6 ? '[Último] dddd [às] LT' :\n      // Saturday + Sunday\n      '[Última] dddd [às] LT'; // Monday - Friday\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'em %s',\n    past: '%s atrás',\n    s: 'poucos segundos',\n    ss: '%d segundos',\n    m: 'um minuto',\n    mm: '%d minutos',\n    h: 'uma hora',\n    hh: '%d horas',\n    d: 'um dia',\n    dd: '%d dias',\n    M: 'um mês',\n    MM: '%d meses',\n    y: 'um ano',\n    yy: '%d anos'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}º/,\n  ordinal: '%dº'\n};\n\n// ! moment.js locale configuration\n// ! locale : Romanian [ro]\n//! author : Vlad Gurdiga : https://github.com/gurdiga\n//! author : Valentin Agachi : https://github.com/avaly\n// ! author : Earle white: https://github.com/5earle\nfunction relativeTimeWithPlural$2(num, withoutSuffix, key) {\n  let format = {\n    ss: 'secunde',\n    mm: 'minute',\n    hh: 'ore',\n    dd: 'zile',\n    MM: 'luni',\n    yy: 'ani'\n  };\n  let separator = ' ';\n  if (num % 100 >= 20 || num >= 100 && num % 100 === 0) {\n    separator = ' de ';\n  }\n  return num + separator + format[key];\n}\nconst roLocale = {\n  abbr: 'ro',\n  months: 'ianuarie_februarie_martie_aprilie_mai_iunie_iulie_august_septembrie_octombrie_noiembrie_decembrie'.split('_'),\n  monthsShort: 'ian._febr._mart._apr._mai_iun._iul._aug._sept._oct._nov._dec.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'duminică_luni_marți_miercuri_joi_vineri_sâmbătă'.split('_'),\n  weekdaysShort: 'Dum_Lun_Mar_Mie_Joi_Vin_Sâm'.split('_'),\n  weekdaysMin: 'Du_Lu_Ma_Mi_Jo_Vi_Sâ'.split('_'),\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY H:mm',\n    LLLL: 'dddd, D MMMM YYYY H:mm'\n  },\n  calendar: {\n    sameDay: '[azi la] LT',\n    nextDay: '[mâine la] LT',\n    nextWeek: 'dddd [la] LT',\n    lastDay: '[ieri la] LT',\n    lastWeek: '[fosta] dddd [la] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'peste %s',\n    past: '%s în urmă',\n    s: 'câteva secunde',\n    ss: relativeTimeWithPlural$2,\n    m: 'un minut',\n    mm: relativeTimeWithPlural$2,\n    h: 'o oră',\n    hh: relativeTimeWithPlural$2,\n    d: 'o zi',\n    dd: relativeTimeWithPlural$2,\n    M: 'o lună',\n    MM: relativeTimeWithPlural$2,\n    y: 'un an',\n    yy: relativeTimeWithPlural$2\n  },\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 7 // The week that contains Jan 1st is the first week of the year.\n  }\n};\n\n//! moment.js locale configuration\n//! locale : Russian [ru]\n//! author : Viktorminator : https://github.com/Viktorminator\n//! Author : Menelion Elensúle : https://github.com/Oire\n//! author : Коренберг Марк : https://github.com/socketpair\nfunction plural$2(word, num) {\n  let forms = word.split('_');\n  return num % 10 === 1 && num % 100 !== 11 ? forms[0] : num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2];\n}\nfunction relativeTimeWithPlural$1(num, withoutSuffix, key) {\n  let format = {\n    ss: withoutSuffix ? 'секунда_секунды_секунд' : 'секунду_секунды_секунд',\n    mm: withoutSuffix ? 'минута_минуты_минут' : 'минуту_минуты_минут',\n    hh: 'час_часа_часов',\n    dd: 'день_дня_дней',\n    MM: 'месяц_месяца_месяцев',\n    yy: 'год_года_лет'\n  };\n  if (key === 'm') {\n    return withoutSuffix ? 'минута' : 'минуту';\n  }\n  return num + ' ' + plural$2(format[key], +num);\n}\nlet monthsParse = [/^янв/i, /^фев/i, /^мар/i, /^апр/i, /^ма[йя]/i, /^июн/i, /^июл/i, /^авг/i, /^сен/i, /^окт/i, /^ноя/i, /^дек/i];\n// http://new.gramota.ru/spravka/rules/139-prop : § 103\n// Сокращения месяцев: http://new.gramota.ru/spravka/buro/search-answer?s=242637\n// CLDR data:          http://www.unicode.org/cldr/charts/28/summary/ru.html#1753\nconst ruLocale = {\n  abbr: 'ru',\n  months: {\n    format: 'января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря'.split('_'),\n    standalone: 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_')\n  },\n  monthsShort: {\n    // по CLDR именно \"июл.\" и \"июн.\", но какой смысл менять букву на точку ?\n    format: 'янв._февр._мар._апр._мая_июня_июля_авг._сент._окт._нояб._дек.'.split('_'),\n    standalone: 'янв._февр._март_апр._май_июнь_июль_авг._сент._окт._нояб._дек.'.split('_')\n  },\n  weekdays: {\n    standalone: 'воскресенье_понедельник_вторник_среда_четверг_пятница_суббота'.split('_'),\n    format: 'воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу'.split('_'),\n    isFormat: /\\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?\\] ?dddd/\n  },\n  weekdaysShort: 'вс_пн_вт_ср_чт_пт_сб'.split('_'),\n  weekdaysMin: 'вс_пн_вт_ср_чт_пт_сб'.split('_'),\n  monthsParse,\n  longMonthsParse: monthsParse,\n  shortMonthsParse: monthsParse,\n  // полные названия с падежами, по три буквы, для некоторых, по 4 буквы, сокращения с точкой и без точки\n  monthsRegex: /^(январ[ья]|янв\\.?|феврал[ья]|февр?\\.?|марта?|мар\\.?|апрел[ья]|апр\\.?|ма[йя]|июн[ья]|июн\\.?|июл[ья]|июл\\.?|августа?|авг\\.?|сентябр[ья]|сент?\\.?|октябр[ья]|окт\\.?|ноябр[ья]|нояб?\\.?|декабр[ья]|дек\\.?)/i,\n  // копия предыдущего\n  monthsShortRegex: /^(январ[ья]|янв\\.?|феврал[ья]|февр?\\.?|марта?|мар\\.?|апрел[ья]|апр\\.?|ма[йя]|июн[ья]|июн\\.?|июл[ья]|июл\\.?|августа?|авг\\.?|сентябр[ья]|сент?\\.?|октябр[ья]|окт\\.?|ноябр[ья]|нояб?\\.?|декабр[ья]|дек\\.?)/i,\n  // полные названия с падежами\n  monthsStrictRegex: /^(январ[яь]|феврал[яь]|марта?|апрел[яь]|ма[яй]|июн[яь]|июл[яь]|августа?|сентябр[яь]|октябр[яь]|ноябр[яь]|декабр[яь])/i,\n  // Выражение, которое соотвествует только сокращённым формам\n  monthsShortStrictRegex: /^(янв\\.|февр?\\.|мар[т.]|апр\\.|ма[яй]|июн[ья.]|июл[ья.]|авг\\.|сент?\\.|окт\\.|нояб?\\.|дек\\.)/i,\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D MMMM YYYY г.',\n    LLL: 'D MMMM YYYY г., H:mm',\n    LLLL: 'dddd, D MMMM YYYY г., H:mm'\n  },\n  calendar: {\n    sameDay: '[Сегодня в] LT',\n    nextDay: '[Завтра в] LT',\n    lastDay: '[Вчера в] LT',\n    nextWeek(date, now) {\n      if (getWeek(now) !== getWeek(date)) {\n        switch (getDayOfWeek(date)) {\n          case 0:\n            return '[В следующее] dddd [в] LT';\n          case 1:\n          case 2:\n          case 4:\n            return '[В следующий] dddd [в] LT';\n          case 3:\n          case 5:\n          case 6:\n            return '[В следующую] dddd [в] LT';\n        }\n      } else {\n        if (getDayOfWeek(date) === 2) {\n          return '[Во] dddd [в] LT';\n        } else {\n          return '[В] dddd [в] LT';\n        }\n      }\n    },\n    lastWeek(date, now) {\n      if (getWeek(now) !== getWeek(date)) {\n        switch (getDayOfWeek(date)) {\n          case 0:\n            return '[В прошлое] dddd [в] LT';\n          case 1:\n          case 2:\n          case 4:\n            return '[В прошлый] dddd [в] LT';\n          case 3:\n          case 5:\n          case 6:\n            return '[В прошлую] dddd [в] LT';\n        }\n      } else {\n        if (getDayOfWeek(date) === 2) {\n          return '[Во] dddd [в] LT';\n        } else {\n          return '[В] dddd [в] LT';\n        }\n      }\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'через %s',\n    past: '%s назад',\n    s: 'несколько секунд',\n    ss: relativeTimeWithPlural$1,\n    m: relativeTimeWithPlural$1,\n    mm: relativeTimeWithPlural$1,\n    h: 'час',\n    hh: relativeTimeWithPlural$1,\n    d: 'день',\n    dd: relativeTimeWithPlural$1,\n    M: 'месяц',\n    MM: relativeTimeWithPlural$1,\n    y: 'год',\n    yy: relativeTimeWithPlural$1\n  },\n  meridiemParse: /ночи|утра|дня|вечера/i,\n  isPM(input) {\n    return /^(дня|вечера)$/.test(input);\n  },\n  meridiem(hour, minute, isLower) {\n    if (hour < 4) {\n      return 'ночи';\n    } else if (hour < 12) {\n      return 'утра';\n    } else if (hour < 17) {\n      return 'дня';\n    } else {\n      return 'вечера';\n    }\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}-(й|го|я)/,\n  ordinal(_num, period) {\n    const num = Number(_num);\n    switch (period) {\n      case 'M':\n      case 'd':\n      case 'DDD':\n        return num + '-й';\n      case 'D':\n        return num + '-го';\n      case 'w':\n      case 'W':\n        return num + '-я';\n      default:\n        return num.toString(10);\n    }\n  },\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n  }\n};\n\n//! moment.js locale configuration\n//! locale : Slovak [sk]\n//! author : Jozef Pažin : https://github.com/atiris\nconst months = 'január_február_marec_apríl_máj_jún_júl_august_september_október_november_december'.split('_');\nconst monthsShort = 'jan_feb_mar_apr_máj_jún_júl_aug_sep_okt_nov_dec'.split('_');\nfunction plural$1(num) {\n  return num > 1 && num < 5 && ~~(num / 10) !== 1;\n}\nfunction translate(num, withoutSuffix, key, isFuture) {\n  const result = num + ' ';\n  switch (key) {\n    case 's':\n      // a few seconds / in a few seconds / a few seconds ago\n      return withoutSuffix || isFuture ? 'pár sekúnd' : 'pár sekundami';\n    case 'ss':\n      // 9 seconds / in 9 seconds / 9 seconds ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural$1(num) ? 'sekundy' : 'sekúnd');\n      } else {\n        return result + 'sekundami';\n      }\n    // break;\n    case 'm':\n      // a minute / in a minute / a minute ago\n      return withoutSuffix ? 'minúta' : isFuture ? 'minútu' : 'minútou';\n    case 'mm':\n      // 9 minutes / in 9 minutes / 9 minutes ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural$1(num) ? 'minúty' : 'minút');\n      } else {\n        return result + 'minútami';\n      }\n    // break;\n    case 'h':\n      // an hour / in an hour / an hour ago\n      return withoutSuffix ? 'hodina' : isFuture ? 'hodinu' : 'hodinou';\n    case 'hh':\n      // 9 hours / in 9 hours / 9 hours ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural$1(num) ? 'hodiny' : 'hodín');\n      } else {\n        return result + 'hodinami';\n      }\n    // break;\n    case 'd':\n      // a day / in a day / a day ago\n      return withoutSuffix || isFuture ? 'deň' : 'dňom';\n    case 'dd':\n      // 9 days / in 9 days / 9 days ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural$1(num) ? 'dni' : 'dní');\n      } else {\n        return result + 'dňami';\n      }\n    // break;\n    case 'M':\n      // a month / in a month / a month ago\n      return withoutSuffix || isFuture ? 'mesiac' : 'mesiacom';\n    case 'MM':\n      // 9 months / in 9 months / 9 months ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural$1(num) ? 'mesiace' : 'mesiacov');\n      } else {\n        return result + 'mesiacmi';\n      }\n    // break;\n    case 'y':\n      // a year / in a year / a year ago\n      return withoutSuffix || isFuture ? 'rok' : 'rokom';\n    case 'yy':\n      // 9 years / in 9 years / 9 years ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural$1(num) ? 'roky' : 'rokov');\n      } else {\n        return result + 'rokmi';\n      }\n    // break;\n  }\n}\nconst skLocale = {\n  abbr: 'sk',\n  months,\n  monthsShort,\n  weekdays: 'nedeľa_pondelok_utorok_streda_štvrtok_piatok_sobota'.split('_'),\n  weekdaysShort: 'ne_po_ut_st_št_pi_so'.split('_'),\n  weekdaysMin: 'ne_po_ut_st_št_pi_so'.split('_'),\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D. MMMM YYYY',\n    LLL: 'D. MMMM YYYY H:mm',\n    LLLL: 'dddd D. MMMM YYYY H:mm',\n    l: 'D. M. YYYY'\n  },\n  calendar: {\n    sameDay: '[dnes o] LT',\n    nextDay: '[zajtra o] LT',\n    nextWeek(date) {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[v nedeľu o] LT';\n        case 1:\n        case 2:\n          return '[v] dddd [o] LT';\n        case 3:\n          return '[v stredu o] LT';\n        case 4:\n          return '[vo štvrtok o] LT';\n        case 5:\n          return '[v piatok o] LT';\n        case 6:\n          return '[v sobotu o] LT';\n      }\n    },\n    lastDay: '[včera o] LT',\n    lastWeek(date) {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[minulú nedeľu o] LT';\n        case 1:\n        case 2:\n          return '[minulý] dddd [o] LT';\n        case 3:\n          return '[minulú stredu o] LT';\n        case 4:\n        case 5:\n          return '[minulý] dddd [o] LT';\n        case 6:\n          return '[minulú sobotu o] LT';\n      }\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'o %s',\n    past: 'pred %s',\n    s: translate,\n    ss: translate,\n    m: translate,\n    mm: translate,\n    h: translate,\n    hh: translate,\n    d: translate,\n    dd: translate,\n    M: translate,\n    MM: translate,\n    y: translate,\n    yy: translate\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n  }\n};\n\n//! moment.js locale configuration\n//! locale : Slovenian [sl]\n//! author : mihan : https://github.com/mihan\nfunction processRelativeTime(number, withoutSuffix, key, isFuture) {\n  var result = number + ' ';\n  switch (key) {\n    case 's':\n      return withoutSuffix || isFuture ? 'nekaj sekund' : 'nekaj sekundami';\n    case 'ss':\n      if (number === 1) {\n        result += withoutSuffix ? 'sekundo' : 'sekundi';\n      } else if (number === 2) {\n        result += withoutSuffix || isFuture ? 'sekundi' : 'sekundah';\n      } else if (number < 5) {\n        result += withoutSuffix || isFuture ? 'sekunde' : 'sekundah';\n      } else {\n        result += withoutSuffix || isFuture ? 'sekund' : 'sekund';\n      }\n      return result;\n    case 'm':\n      return withoutSuffix ? 'ena minuta' : 'eno minuto';\n    case 'mm':\n      if (number === 1) {\n        result += withoutSuffix ? 'minuta' : 'minuto';\n      } else if (number === 2) {\n        result += withoutSuffix || isFuture ? 'minuti' : 'minutama';\n      } else if (number < 5) {\n        result += withoutSuffix || isFuture ? 'minute' : 'minutami';\n      } else {\n        result += withoutSuffix || isFuture ? 'minut' : 'minutami';\n      }\n      return result;\n    case 'h':\n      return withoutSuffix ? 'ena ura' : 'eno uro';\n    case 'hh':\n      if (number === 1) {\n        result += withoutSuffix ? 'ura' : 'uro';\n      } else if (number === 2) {\n        result += withoutSuffix || isFuture ? 'uri' : 'urama';\n      } else if (number < 5) {\n        result += withoutSuffix || isFuture ? 'ure' : 'urami';\n      } else {\n        result += withoutSuffix || isFuture ? 'ur' : 'urami';\n      }\n      return result;\n    case 'd':\n      return withoutSuffix || isFuture ? 'en dan' : 'enim dnem';\n    case 'dd':\n      if (number === 1) {\n        result += withoutSuffix || isFuture ? 'dan' : 'dnem';\n      } else if (number === 2) {\n        result += withoutSuffix || isFuture ? 'dni' : 'dnevoma';\n      } else {\n        result += withoutSuffix || isFuture ? 'dni' : 'dnevi';\n      }\n      return result;\n    case 'M':\n      return withoutSuffix || isFuture ? 'en mesec' : 'enim mesecem';\n    case 'MM':\n      if (number === 1) {\n        result += withoutSuffix || isFuture ? 'mesec' : 'mesecem';\n      } else if (number === 2) {\n        result += withoutSuffix || isFuture ? 'meseca' : 'mesecema';\n      } else if (number < 5) {\n        result += withoutSuffix || isFuture ? 'mesece' : 'meseci';\n      } else {\n        result += withoutSuffix || isFuture ? 'mesecev' : 'meseci';\n      }\n      return result;\n    case 'y':\n      return withoutSuffix || isFuture ? 'eno leto' : 'enim letom';\n    case 'yy':\n      if (number === 1) {\n        result += withoutSuffix || isFuture ? 'leto' : 'letom';\n      } else if (number === 2) {\n        result += withoutSuffix || isFuture ? 'leti' : 'letoma';\n      } else if (number < 5) {\n        result += withoutSuffix || isFuture ? 'leta' : 'leti';\n      } else {\n        result += withoutSuffix || isFuture ? 'let' : 'leti';\n      }\n      return result;\n  }\n}\nconst slLocale = {\n  abbr: 'sl',\n  months: 'januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december'.split('_'),\n  monthsShort: 'jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'nedelja_ponedeljek_torek_sreda_četrtek_petek_sobota'.split('_'),\n  weekdaysShort: 'ned._pon._tor._sre._čet._pet._sob.'.split('_'),\n  weekdaysMin: 'ne_po_to_sr_če_pe_so'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D. MMMM YYYY',\n    LLL: 'D. MMMM YYYY H:mm',\n    LLLL: 'dddd, D. MMMM YYYY H:mm'\n  },\n  calendar: {\n    sameDay: '[danes ob] LT',\n    nextDay: '[jutri ob] LT',\n    nextWeek(date) {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[v] [nedeljo] [ob] LT';\n        case 3:\n          return '[v] [sredo] [ob] LT';\n        case 6:\n          return '[v] [soboto] [ob] LT';\n        case 1:\n        case 2:\n        case 4:\n        case 5:\n          return '[v] dddd [ob] LT';\n      }\n    },\n    lastDay: '[včeraj ob] LT',\n    lastWeek(date) {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[prejšnjo] [nedeljo] [ob] LT';\n        case 3:\n          return '[prejšnjo] [sredo] [ob] LT';\n        case 6:\n          return '[prejšnjo] [soboto] [ob] LT';\n        case 1:\n        case 2:\n        case 4:\n        case 5:\n          return '[prejšnji] dddd [ob] LT';\n      }\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'čez %s',\n    past: 'pred %s',\n    s: processRelativeTime,\n    ss: processRelativeTime,\n    m: processRelativeTime,\n    mm: processRelativeTime,\n    h: processRelativeTime,\n    hh: processRelativeTime,\n    d: processRelativeTime,\n    dd: processRelativeTime,\n    M: processRelativeTime,\n    MM: processRelativeTime,\n    y: processRelativeTime,\n    yy: processRelativeTime\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 7 // The week that contains Jan 1st is the first week of the year.\n  }\n};\n\n//! moment.js locale configuration\n//! locale : Albanian [sq]\n//! author : Agon Cecelia : https://github.com/agoncecelia\nconst sqLocale = {\n  abbr: 'sq',\n  months: 'Janar_Shkurt_Mars_Prill_Maj_Qershor_Korrik_Gusht_Shtator_Tetor_Nëntor_Dhjetor'.split('_'),\n  monthsShort: 'Jan_Shk_Mar_Pri_Maj_Qer_Kor_Gus_Sht_Tet_Nën_Dhj'.split('_'),\n  weekdays: 'E Dielë_E Hënë_E Martë_E Mërkurë_E Enjte_E Premte_E Shtunë'.split('_'),\n  weekdaysShort: 'Die_Hën_Mar_Mër_Enj_Pre_Sht'.split('_'),\n  weekdaysMin: 'Di_He_Ma_Me_En_Pr_Sh'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd, D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[Sot në] LT',\n    nextDay: '[Nesër në] LT',\n    nextWeek: 'dddd [në] LT',\n    lastDay: '[Dje në] LT',\n    lastWeek: 'dddd [e kaluar në] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'në %s',\n    past: 'para %sve',\n    s: 'disa sekonda',\n    ss: '%d sekonda',\n    m: 'një minut',\n    mm: '%d minuta',\n    h: 'një orë',\n    hh: '%d orë',\n    d: 'një ditë',\n    dd: '%d ditë',\n    M: 'një muaj',\n    MM: '%d muaj',\n    y: 'një vit',\n    yy: '%d vite'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  // need clarification\n  ordinal: '%d.',\n  // need clarification\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n  }\n};\n\n//! moment.js locale configuration\n//! locale : Swedish [sv]\n//! author : Jens Alm : https://github.com/ulmus\nconst svLocale = {\n  abbr: 'sv',\n  months: 'januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december'.split('_'),\n  monthsShort: 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),\n  weekdays: 'söndag_måndag_tisdag_onsdag_torsdag_fredag_lördag'.split('_'),\n  weekdaysShort: 'sön_mån_tis_ons_tor_fre_lör'.split('_'),\n  weekdaysMin: 'sö_må_ti_on_to_fr_lö'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'YYYY-MM-DD',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY [kl.] HH:mm',\n    LLLL: 'dddd D MMMM YYYY [kl.] HH:mm',\n    lll: 'D MMM YYYY HH:mm',\n    llll: 'ddd D MMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[Idag] LT',\n    nextDay: '[Imorgon] LT',\n    lastDay: '[Igår] LT',\n    nextWeek: '[På] dddd LT',\n    lastWeek: '[I] dddd[s] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'om %s',\n    past: 'för %s sedan',\n    s: 'några sekunder',\n    ss: '%d sekunder',\n    m: 'en minut',\n    mm: '%d minuter',\n    h: 'en timme',\n    hh: '%d timmar',\n    d: 'en dag',\n    dd: '%d dagar',\n    M: 'en månad',\n    MM: '%d månader',\n    y: 'ett år',\n    yy: '%d år'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(e|a)/,\n  ordinal(_num) {\n    const num = Number(_num);\n    let b = num % 10,\n      output = ~~(num % 100 / 10) === 1 ? 'e' : b === 1 ? 'a' : b === 2 ? 'a' : b === 3 ? 'e' : 'e';\n    return num + output;\n  },\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n  }\n};\n\n// moment.js locale configuration\n// locale : Thai [th]\n// author : Watcharapol Sanitwong : https://github.com/tumit\nconst thLocale = {\n  abbr: 'th',\n  months: 'มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม'.split('_'),\n  monthsShort: 'ม.ค._ก.พ._มี.ค._เม.ย._พ.ค._มิ.ย._ก.ค._ส.ค._ก.ย._ต.ค._พ.ย._ธ.ค.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์'.split('_'),\n  weekdaysShort: 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),\n  // yes, three characters difference\n  weekdaysMin: 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY เวลา H:mm',\n    LLLL: 'วันddddที่ D MMMM YYYY เวลา H:mm'\n  },\n  meridiemParse: /ก่อนเที่ยง|หลังเที่ยง/,\n  isPM(input) {\n    return input === 'หลังเที่ยง';\n  },\n  meridiem(hour, minute, isLower) {\n    if (hour < 12) {\n      return 'ก่อนเที่ยง';\n    } else {\n      return 'หลังเที่ยง';\n    }\n  },\n  calendar: {\n    sameDay: '[วันนี้ เวลา] LT',\n    nextDay: '[พรุ่งนี้ เวลา] LT',\n    nextWeek: 'dddd[หน้า เวลา] LT',\n    lastDay: '[เมื่อวานนี้ เวลา] LT',\n    lastWeek: '[วัน]dddd[ที่แล้ว เวลา] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'อีก %s',\n    past: '%sที่แล้ว',\n    s: 'ไม่กี่วินาที',\n    ss: '%d วินาที',\n    m: '1 นาที',\n    mm: '%d นาที',\n    h: '1 ชั่วโมง',\n    hh: '%d ชั่วโมง',\n    d: '1 วัน',\n    dd: '%d วัน',\n    M: '1 เดือน',\n    MM: '%d เดือน',\n    y: '1 ปี',\n    yy: '%d ปี'\n  }\n};\n\n// moment.js locale configuration\n// locale : Thai-Buddhist Era [th-be]\n// author : Watcharapol Sanitwong : https://github.com/tumit\nconst thBeLocale = {\n  abbr: 'th-be',\n  months: 'มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม'.split('_'),\n  monthsShort: 'ม.ค._ก.พ._มี.ค._เม.ย._พ.ค._มิ.ย._ก.ค._ส.ค._ก.ย._ต.ค._พ.ย._ธ.ค.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์'.split('_'),\n  weekdaysShort: 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),\n  weekdaysMin: 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY เวลา H:mm',\n    LLLL: 'วันddddที่ D MMMM YYYY เวลา H:mm'\n  },\n  meridiemParse: /ก่อนเที่ยง|หลังเที่ยง/,\n  isPM(input) {\n    return input === 'หลังเที่ยง';\n  },\n  meridiem(hour, minute, isLower) {\n    if (hour < 12) {\n      return 'ก่อนเที่ยง';\n    } else {\n      return 'หลังเที่ยง';\n    }\n  },\n  calendar: {\n    sameDay: '[วันนี้ เวลา] LT',\n    nextDay: '[พรุ่งนี้ เวลา] LT',\n    nextWeek: 'dddd[หน้า เวลา] LT',\n    lastDay: '[เมื่อวานนี้ เวลา] LT',\n    lastWeek: '[วัน]dddd[ที่แล้ว เวลา] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'อีก %s',\n    past: '%sที่แล้ว',\n    s: 'ไม่กี่วินาที',\n    ss: '%d วินาที',\n    m: '1 นาที',\n    mm: '%d นาที',\n    h: '1 ชั่วโมง',\n    hh: '%d ชั่วโมง',\n    d: '1 วัน',\n    dd: '%d วัน',\n    M: '1 เดือน',\n    MM: '%d เดือน',\n    y: '1 ปี',\n    yy: '%d ปี'\n  },\n  preparse(str, format) {\n    const _format = thBeLocale.longDateFormat[format] ? thBeLocale.longDateFormat[format] : format;\n    // endsWith('YYYY')\n    if (_format.indexOf('YYYY', _format.length - 'YYYY'.length) !== -1) {\n      const ddMM = str.substr(0, str.length - 4);\n      const yyyy = parseInt(str.substr(str.length - 4), 10) - 543;\n      return ddMM + yyyy;\n    }\n    return str;\n  },\n  getFullYear(date, isUTC = false) {\n    return 543 + (isUTC ? date.getUTCFullYear() : date.getFullYear());\n  }\n};\n\n//! moment.js locale configuration\n//! locale : Turkish [tr]\n//! authors : Erhan Gundogan : https://github.com/erhangundogan,\n//!           Burak Yiğit Kaya: https://github.com/BYK\nlet suffixes = {\n  1: '\\'inci',\n  5: '\\'inci',\n  8: '\\'inci',\n  70: '\\'inci',\n  80: '\\'inci',\n  2: '\\'nci',\n  7: '\\'nci',\n  20: '\\'nci',\n  50: '\\'nci',\n  3: '\\'üncü',\n  4: '\\'üncü',\n  100: '\\'üncü',\n  6: '\\'ncı',\n  9: '\\'uncu',\n  10: '\\'uncu',\n  30: '\\'uncu',\n  60: '\\'ıncı',\n  90: '\\'ıncı'\n};\nconst trLocale = {\n  abbr: 'tr',\n  months: 'Ocak_Şubat_Mart_Nisan_Mayıs_Haziran_Temmuz_Ağustos_Eylül_Ekim_Kasım_Aralık'.split('_'),\n  monthsShort: 'Oca_Şub_Mar_Nis_May_Haz_Tem_Ağu_Eyl_Eki_Kas_Ara'.split('_'),\n  weekdays: 'Pazar_Pazartesi_Salı_Çarşamba_Perşembe_Cuma_Cumartesi'.split('_'),\n  weekdaysShort: 'Paz_Pts_Sal_Çar_Per_Cum_Cts'.split('_'),\n  weekdaysMin: 'Pz_Pt_Sa_Ça_Pe_Cu_Ct'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd, D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[bugün saat] LT',\n    nextDay: '[yarın saat] LT',\n    nextWeek: '[gelecek] dddd [saat] LT',\n    lastDay: '[dün] LT',\n    lastWeek: '[geçen] dddd [saat] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: '%s sonra',\n    past: '%s önce',\n    s: 'birkaç saniye',\n    ss: '%d saniye',\n    m: 'bir dakika',\n    mm: '%d dakika',\n    h: 'bir saat',\n    hh: '%d saat',\n    d: 'bir gün',\n    dd: '%d gün',\n    M: 'bir ay',\n    MM: '%d ay',\n    y: 'bir yıl',\n    yy: '%d yıl'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}'(inci|nci|üncü|ncı|uncu|ıncı)/,\n  ordinal(_num) {\n    const num = Number(_num);\n    if (num === 0) {\n      // special case for zero\n      return num + '\\'ıncı';\n    }\n    let a = num % 10,\n      b = num % 100 - a,\n      c = num >= 100 ? 100 : null;\n    return num + (suffixes[a] || suffixes[b] || suffixes[c]);\n  },\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 7 // The week that contains Jan 1st is the first week of the year.\n  }\n};\n\n//! moment.js locale configuration\n//! locale : Ukrainian [uk]\n//! author : zemlanin : https://github.com/zemlanin\n//! Author : Menelion Elensúle : https://github.com/Oire\nfunction plural(word, num) {\n  let forms = word.split('_');\n  return num % 10 === 1 && num % 100 !== 11 ? forms[0] : num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2];\n}\nfunction relativeTimeWithPlural(num, withoutSuffix, key) {\n  let format = {\n    ss: withoutSuffix ? 'секунда_секунди_секунд' : 'секунду_секунди_секунд',\n    mm: withoutSuffix ? 'хвилина_хвилини_хвилин' : 'хвилину_хвилини_хвилин',\n    hh: withoutSuffix ? 'година_години_годин' : 'годину_години_годин',\n    dd: 'день_дні_днів',\n    MM: 'місяць_місяці_місяців',\n    yy: 'рік_роки_років'\n  };\n  if (key === 'm') {\n    return withoutSuffix ? 'хвилина' : 'хвилину';\n  }\n  if (key === 'h') {\n    return withoutSuffix ? 'година' : 'годину';\n  }\n  return num + ' ' + plural(format[key], +num);\n}\nfunction weekdaysCaseReplace(date, format, isUTC) {\n  let weekdays = {\n    nominative: 'неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота'.split('_'),\n    accusative: 'неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу'.split('_'),\n    genitive: 'неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи'.split('_')\n  };\n  if (!date) {\n    return weekdays.nominative;\n  }\n  let nounCase = /(\\[[ВвУу]\\]) ?dddd/.test(format) ? 'accusative' : /\\[?(?:минулої|наступної)? ?\\] ?dddd/.test(format) ? 'genitive' : 'nominative';\n  return weekdays[nounCase][getDayOfWeek(date, isUTC)];\n}\nfunction processHoursFunction(str) {\n  return function (date) {\n    return str + 'о' + (getHours(date) === 11 ? 'б' : '') + '] LT';\n  };\n}\nconst ukLocale = {\n  abbr: 'uk',\n  months: {\n    format: 'січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня'.split('_'),\n    standalone: 'січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень'.split('_')\n  },\n  monthsShort: 'січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд'.split('_'),\n  weekdays: weekdaysCaseReplace,\n  weekdaysShort: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n  weekdaysMin: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D MMMM YYYY р.',\n    LLL: 'D MMMM YYYY р., HH:mm',\n    LLLL: 'dddd, D MMMM YYYY р., HH:mm'\n  },\n  calendar: {\n    sameDay: processHoursFunction('[Сьогодні '),\n    nextDay: processHoursFunction('[Завтра '),\n    lastDay: processHoursFunction('[Вчора '),\n    nextWeek: processHoursFunction('[У] dddd ['),\n    lastWeek(date) {\n      switch (getDayOfWeek(date)) {\n        case 0:\n        case 3:\n        case 5:\n        case 6:\n          return processHoursFunction('[Минулої] dddd [')(date);\n        case 1:\n        case 2:\n        case 4:\n          return processHoursFunction('[Минулого] dddd [')(date);\n      }\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'за %s',\n    past: '%s тому',\n    s: 'декілька секунд',\n    ss: relativeTimeWithPlural,\n    m: relativeTimeWithPlural,\n    mm: relativeTimeWithPlural,\n    h: 'годину',\n    hh: relativeTimeWithPlural,\n    d: 'день',\n    dd: relativeTimeWithPlural,\n    M: 'місяць',\n    MM: relativeTimeWithPlural,\n    y: 'рік',\n    yy: relativeTimeWithPlural\n  },\n  // M. E.: those two are virtually unused but a user might want to implement them for his/her website for some reason\n  meridiemParse: /ночі|ранку|дня|вечора/,\n  isPM(input) {\n    return /^(дня|вечора)$/.test(input);\n  },\n  meridiem(hour, minute, isLower) {\n    if (hour < 4) {\n      return 'ночі';\n    } else if (hour < 12) {\n      return 'ранку';\n    } else if (hour < 17) {\n      return 'дня';\n    } else {\n      return 'вечора';\n    }\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}-(й|го)/,\n  ordinal(_num, period) {\n    const num = Number(_num);\n    switch (period) {\n      case 'M':\n      case 'd':\n      case 'DDD':\n      case 'w':\n      case 'W':\n        return num + '-й';\n      case 'D':\n        return num + '-го';\n      default:\n        return num.toString();\n    }\n  },\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 7 // The week that contains Jan 1st is the first week of the year.\n  }\n};\n\n//! moment.js locale configuration\n//! locale : Việt Nam [vi]\n//! author : Chris Gedrim : https://github.com/chrisgedrim\nconst viLocale = {\n  abbr: 'vi',\n  months: 'tháng 1_tháng 2_tháng 3_tháng 4_tháng 5_tháng 6_tháng 7_tháng 8_tháng 9_tháng 10_tháng 11_tháng 12'.split('_'),\n  monthsShort: 'Th01_Th02_Th03_Th04_Th05_Th06_Th07_Th08_Th09_Th10_Th11_Th12'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'chủ nhật_thứ hai_thứ ba_thứ tư_thứ năm_thứ sáu_thứ bảy'.split('_'),\n  weekdaysShort: 'CN_T2_T3_T4_T5_T6_T7'.split('_'),\n  weekdaysMin: 'CN_T2_T3_T4_T5_T6_T7'.split('_'),\n  weekdaysParseExact: true,\n  meridiemParse: /sa|ch/i,\n  isPM(input) {\n    return /^ch$/i.test(input);\n  },\n  meridiem(hours, minutes, isLower) {\n    if (hours < 12) {\n      return isLower ? 'sa' : 'SA';\n    } else {\n      return isLower ? 'ch' : 'CH';\n    }\n  },\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM [năm] YYYY',\n    LLL: 'D MMMM [năm] YYYY HH:mm',\n    LLLL: 'dddd, D MMMM [năm] YYYY HH:mm',\n    l: 'DD/M/YYYY',\n    ll: 'D MMM YYYY',\n    lll: 'D MMM YYYY HH:mm',\n    llll: 'ddd, D MMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[Hôm nay lúc] LT',\n    nextDay: '[Ngày mai lúc] LT',\n    nextWeek: 'dddd [tuần tới lúc] LT',\n    lastDay: '[Hôm qua lúc] LT',\n    lastWeek: 'dddd [tuần trước lúc] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: '%s tới',\n    past: '%s trước',\n    s: 'vài giây',\n    ss: '%d giây',\n    m: 'một phút',\n    mm: '%d phút',\n    h: 'một giờ',\n    hh: '%d giờ',\n    d: 'một ngày',\n    dd: '%d ngày',\n    M: 'một tháng',\n    MM: '%d tháng',\n    y: 'một năm',\n    yy: '%d năm'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}/,\n  ordinal(_num) {\n    return '' + _num;\n  },\n  week: {\n    dow: 1,\n    // Thứ Hai là ngày đầu tuần.\n    doy: 4 // Tuần chứa ngày 4 tháng 1 là tuần đầu tiên trong năm.\n  }\n};\n\n//! moment.js locale configuration\n//! locale : Chinese (China) [zh-cn]\n//! author : suupic : https://github.com/suupic\n//! author : Zeno Zeng : https://github.com/zenozeng\nconst zhCnLocale = {\n  abbr: 'zh-cn',\n  months: '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),\n  monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n  weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),\n  weekdaysShort: '周日_周一_周二_周三_周四_周五_周六'.split('_'),\n  weekdaysMin: '日_一_二_三_四_五_六'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'YYYY/MM/DD',\n    LL: 'YYYY年M月D日',\n    LLL: 'YYYY年M月D日Ah点mm分',\n    LLLL: 'YYYY年M月D日ddddAh点mm分',\n    l: 'YYYY/M/D',\n    ll: 'YYYY年M月D日',\n    lll: 'YYYY年M月D日 HH:mm',\n    llll: 'YYYY年M月D日dddd HH:mm'\n  },\n  meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,\n  meridiemHour(hour, meridiem) {\n    if (hour === 12) {\n      hour = 0;\n    }\n    if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {\n      return hour;\n    } else if (meridiem === '下午' || meridiem === '晚上') {\n      return hour + 12;\n    } else {\n      // '中午'\n      return hour >= 11 ? hour : hour + 12;\n    }\n  },\n  meridiem(hour, minute, isLower) {\n    let hm = hour * 100 + minute;\n    if (hm < 600) {\n      return '凌晨';\n    } else if (hm < 900) {\n      return '早上';\n    } else if (hm < 1130) {\n      return '上午';\n    } else if (hm < 1230) {\n      return '中午';\n    } else if (hm < 1800) {\n      return '下午';\n    } else {\n      return '晚上';\n    }\n  },\n  calendar: {\n    sameDay: '[今天]LT',\n    nextDay: '[明天]LT',\n    nextWeek: '[下]ddddLT',\n    lastDay: '[昨天]LT',\n    lastWeek: '[上]ddddLT',\n    sameElse: 'L'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(日|月|周)/,\n  ordinal(_num, period) {\n    const num = Number(_num);\n    switch (period) {\n      case 'd':\n      case 'D':\n      case 'DDD':\n        return num + '日';\n      case 'M':\n        return num + '月';\n      case 'w':\n      case 'W':\n        return num + '周';\n      default:\n        return num.toString();\n    }\n  },\n  relativeTime: {\n    future: '%s内',\n    past: '%s前',\n    s: '几秒',\n    ss: '%d 秒',\n    m: '1 分钟',\n    mm: '%d 分钟',\n    h: '1 小时',\n    hh: '%d 小时',\n    d: '1 天',\n    dd: '%d 天',\n    M: '1 个月',\n    MM: '%d 个月',\n    y: '1 年',\n    yy: '%d 年'\n  },\n  week: {\n    // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n  }\n};\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { add, arLocale, bgLocale, caLocale, csLocale, daLocale, deLocale, defineLocale, enGbLocale, endOf, esDoLocale, esLocale, esPrLocale, esUsLocale, etLocale, fiLocale, formatDate, frLocale, getDay, getFirstDayOfMonth, getFullYear, getLocale, getMonth, getSetGlobalLocale, glLocale, heLocale, hiLocale, hrLocale, huLocale, idLocale, isAfter, isArray, isBefore, isDate, isDateValid, isDisabledDay, isFirstDayOfWeek, isSame, isSameDay$1 as isSameDay, isSameMonth, isSameYear, itLocale, jaLocale, kaLocale, kkLocale, koLocale, listLocales, ltLocale, lvLocale, mnLocale, nbLocale, nlBeLocale, nlLocale, parseDate, plLocale, ptBrLocale, roLocale, ruLocale, setFullDate, shiftDate, skLocale, slLocale, sqLocale, startOf, subtract, svLocale, thBeLocale, thLocale, trLocale, ukLocale, updateLocale, utcAsLocal, viLocale, zhCnLocale };\n"],
  "mappings": "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",
  "names": ["units", "week", "week", "months", "months", "units", "week", "tokens", "units", "months", "week", "months", "monthsShort", "forms"]
}
